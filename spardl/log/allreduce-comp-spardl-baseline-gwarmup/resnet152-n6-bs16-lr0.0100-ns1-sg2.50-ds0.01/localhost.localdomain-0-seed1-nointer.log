2025-06-08 08:32:28,447 [main_trainer.py:294] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-08 08:32:28,447 [main_trainer.py:300] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-08 08:34:26,448 [main_trainer.py:297] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-08 08:34:26,448 [main_trainer.py:298] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-08 08:34:31,753 [dl_trainer.py:292] INFO target_sparsities: [1.0]
2025-06-08 08:34:31,753 [dl_trainer.py:302] INFO num_batches_per_epoch: 520
2025-06-08 08:34:31,754 [main_trainer.py:88] INFO Broadcast parameters....
2025-06-08 08:34:32,869 [main_trainer.py:107] INFO Broadcast parameters finished....
2025-06-08 08:34:32,939 [allreducer.py:281] INFO density: 0.010000
2025-06-08 08:34:32,940 [allreducer.py:282] INFO threshold scale: 1.092000
2025-06-08 08:34:32,941 [allreducer.py:663] INFO groups: [['fc.bias', 'fc.weight', 'layer4.2.bn3.bias', 'layer4.2.bn3.weight', 'layer4.2.conv3.weight', 'layer4.2.bn2.bias', 'layer4.2.bn2.weight', 'layer4.2.conv2.weight', 'layer4.2.bn1.bias', 'layer4.2.bn1.weight', 'layer4.2.conv1.weight', 'layer4.1.bn3.bias', 'layer4.1.bn3.weight', 'layer4.1.conv3.weight', 'layer4.1.bn2.bias', 'layer4.1.bn2.weight', 'layer4.1.conv2.weight', 'layer4.1.bn1.bias', 'layer4.1.bn1.weight', 'layer4.1.conv1.weight', 'layer4.0.downsample.1.bias', 'layer4.0.downsample.1.weight', 'layer4.0.downsample.0.weight', 'layer4.0.bn3.bias', 'layer4.0.bn3.weight', 'layer4.0.conv3.weight', 'layer4.0.bn2.bias', 'layer4.0.bn2.weight', 'layer4.0.conv2.weight', 'layer4.0.bn1.bias', 'layer4.0.bn1.weight', 'layer4.0.conv1.weight', 'layer3.35.bn3.bias', 'layer3.35.bn3.weight', 'layer3.35.conv3.weight', 'layer3.35.bn2.bias', 'layer3.35.bn2.weight', 'layer3.35.conv2.weight', 'layer3.35.bn1.bias', 'layer3.35.bn1.weight', 'layer3.35.conv1.weight', 'layer3.34.bn3.bias', 'layer3.34.bn3.weight', 'layer3.34.conv3.weight', 'layer3.34.bn2.bias', 'layer3.34.bn2.weight', 'layer3.34.conv2.weight', 'layer3.34.bn1.bias', 'layer3.34.bn1.weight', 'layer3.34.conv1.weight', 'layer3.33.bn3.bias', 'layer3.33.bn3.weight', 'layer3.33.conv3.weight', 'layer3.33.bn2.bias', 'layer3.33.bn2.weight', 'layer3.33.conv2.weight', 'layer3.33.bn1.bias', 'layer3.33.bn1.weight', 'layer3.33.conv1.weight', 'layer3.32.bn3.bias', 'layer3.32.bn3.weight', 'layer3.32.conv3.weight', 'layer3.32.bn2.bias', 'layer3.32.bn2.weight', 'layer3.32.conv2.weight', 'layer3.32.bn1.bias', 'layer3.32.bn1.weight', 'layer3.32.conv1.weight', 'layer3.31.bn3.bias', 'layer3.31.bn3.weight', 'layer3.31.conv3.weight', 'layer3.31.bn2.bias', 'layer3.31.bn2.weight', 'layer3.31.conv2.weight', 'layer3.31.bn1.bias', 'layer3.31.bn1.weight', 'layer3.31.conv1.weight', 'layer3.30.bn3.bias', 'layer3.30.bn3.weight', 'layer3.30.conv3.weight', 'layer3.30.bn2.bias', 'layer3.30.bn2.weight', 'layer3.30.conv2.weight', 'layer3.30.bn1.bias', 'layer3.30.bn1.weight', 'layer3.30.conv1.weight', 'layer3.29.bn3.bias', 'layer3.29.bn3.weight', 'layer3.29.conv3.weight', 'layer3.29.bn2.bias', 'layer3.29.bn2.weight', 'layer3.29.conv2.weight', 'layer3.29.bn1.bias', 'layer3.29.bn1.weight', 'layer3.29.conv1.weight', 'layer3.28.bn3.bias', 'layer3.28.bn3.weight', 'layer3.28.conv3.weight', 'layer3.28.bn2.bias', 'layer3.28.bn2.weight', 'layer3.28.conv2.weight', 'layer3.28.bn1.bias', 'layer3.28.bn1.weight', 'layer3.28.conv1.weight', 'layer3.27.bn3.bias', 'layer3.27.bn3.weight', 'layer3.27.conv3.weight', 'layer3.27.bn2.bias', 'layer3.27.bn2.weight', 'layer3.27.conv2.weight', 'layer3.27.bn1.bias', 'layer3.27.bn1.weight', 'layer3.27.conv1.weight', 'layer3.26.bn3.bias', 'layer3.26.bn3.weight', 'layer3.26.conv3.weight', 'layer3.26.bn2.bias', 'layer3.26.bn2.weight', 'layer3.26.conv2.weight', 'layer3.26.bn1.bias', 'layer3.26.bn1.weight', 'layer3.26.conv1.weight', 'layer3.25.bn3.bias', 'layer3.25.bn3.weight', 'layer3.25.conv3.weight', 'layer3.25.bn2.bias', 'layer3.25.bn2.weight', 'layer3.25.conv2.weight', 'layer3.25.bn1.bias', 'layer3.25.bn1.weight', 'layer3.25.conv1.weight', 'layer3.24.bn3.bias', 'layer3.24.bn3.weight', 'layer3.24.conv3.weight', 'layer3.24.bn2.bias', 'layer3.24.bn2.weight', 'layer3.24.conv2.weight', 'layer3.24.bn1.bias', 'layer3.24.bn1.weight', 'layer3.24.conv1.weight', 'layer3.23.bn3.bias', 'layer3.23.bn3.weight', 'layer3.23.conv3.weight', 'layer3.23.bn2.bias', 'layer3.23.bn2.weight', 'layer3.23.conv2.weight', 'layer3.23.bn1.bias', 'layer3.23.bn1.weight', 'layer3.23.conv1.weight', 'layer3.22.bn3.bias', 'layer3.22.bn3.weight', 'layer3.22.conv3.weight', 'layer3.22.bn2.bias', 'layer3.22.bn2.weight', 'layer3.22.conv2.weight', 'layer3.22.bn1.bias', 'layer3.22.bn1.weight', 'layer3.22.conv1.weight', 'layer3.21.bn3.bias', 'layer3.21.bn3.weight', 'layer3.21.conv3.weight', 'layer3.21.bn2.bias', 'layer3.21.bn2.weight', 'layer3.21.conv2.weight', 'layer3.21.bn1.bias', 'layer3.21.bn1.weight', 'layer3.21.conv1.weight', 'layer3.20.bn3.bias', 'layer3.20.bn3.weight', 'layer3.20.conv3.weight', 'layer3.20.bn2.bias', 'layer3.20.bn2.weight', 'layer3.20.conv2.weight', 'layer3.20.bn1.bias', 'layer3.20.bn1.weight', 'layer3.20.conv1.weight', 'layer3.19.bn3.bias', 'layer3.19.bn3.weight', 'layer3.19.conv3.weight', 'layer3.19.bn2.bias', 'layer3.19.bn2.weight', 'layer3.19.conv2.weight', 'layer3.19.bn1.bias', 'layer3.19.bn1.weight', 'layer3.19.conv1.weight', 'layer3.18.bn3.bias', 'layer3.18.bn3.weight', 'layer3.18.conv3.weight', 'layer3.18.bn2.bias', 'layer3.18.bn2.weight', 'layer3.18.conv2.weight', 'layer3.18.bn1.bias', 'layer3.18.bn1.weight', 'layer3.18.conv1.weight', 'layer3.17.bn3.bias', 'layer3.17.bn3.weight', 'layer3.17.conv3.weight', 'layer3.17.bn2.bias', 'layer3.17.bn2.weight', 'layer3.17.conv2.weight', 'layer3.17.bn1.bias', 'layer3.17.bn1.weight', 'layer3.17.conv1.weight', 'layer3.16.bn3.bias', 'layer3.16.bn3.weight', 'layer3.16.conv3.weight', 'layer3.16.bn2.bias', 'layer3.16.bn2.weight', 'layer3.16.conv2.weight', 'layer3.16.bn1.bias', 'layer3.16.bn1.weight', 'layer3.16.conv1.weight', 'layer3.15.bn3.bias', 'layer3.15.bn3.weight', 'layer3.15.conv3.weight', 'layer3.15.bn2.bias', 'layer3.15.bn2.weight', 'layer3.15.conv2.weight', 'layer3.15.bn1.bias', 'layer3.15.bn1.weight', 'layer3.15.conv1.weight', 'layer3.14.bn3.bias', 'layer3.14.bn3.weight', 'layer3.14.conv3.weight', 'layer3.14.bn2.bias', 'layer3.14.bn2.weight', 'layer3.14.conv2.weight', 'layer3.14.bn1.bias', 'layer3.14.bn1.weight', 'layer3.14.conv1.weight', 'layer3.13.bn3.bias', 'layer3.13.bn3.weight', 'layer3.13.conv3.weight', 'layer3.13.bn2.bias', 'layer3.13.bn2.weight', 'layer3.13.conv2.weight', 'layer3.13.bn1.bias', 'layer3.13.bn1.weight', 'layer3.13.conv1.weight', 'layer3.12.bn3.bias', 'layer3.12.bn3.weight', 'layer3.12.conv3.weight', 'layer3.12.bn2.bias', 'layer3.12.bn2.weight', 'layer3.12.conv2.weight', 'layer3.12.bn1.bias', 'layer3.12.bn1.weight', 'layer3.12.conv1.weight', 'layer3.11.bn3.bias', 'layer3.11.bn3.weight', 'layer3.11.conv3.weight', 'layer3.11.bn2.bias', 'layer3.11.bn2.weight', 'layer3.11.conv2.weight', 'layer3.11.bn1.bias', 'layer3.11.bn1.weight', 'layer3.11.conv1.weight', 'layer3.10.bn3.bias', 'layer3.10.bn3.weight', 'layer3.10.conv3.weight', 'layer3.10.bn2.bias', 'layer3.10.bn2.weight', 'layer3.10.conv2.weight', 'layer3.10.bn1.bias', 'layer3.10.bn1.weight', 'layer3.10.conv1.weight', 'layer3.9.bn3.bias', 'layer3.9.bn3.weight', 'layer3.9.conv3.weight', 'layer3.9.bn2.bias', 'layer3.9.bn2.weight', 'layer3.9.conv2.weight', 'layer3.9.bn1.bias', 'layer3.9.bn1.weight', 'layer3.9.conv1.weight', 'layer3.8.bn3.bias', 'layer3.8.bn3.weight', 'layer3.8.conv3.weight', 'layer3.8.bn2.bias', 'layer3.8.bn2.weight', 'layer3.8.conv2.weight', 'layer3.8.bn1.bias', 'layer3.8.bn1.weight', 'layer3.8.conv1.weight', 'layer3.7.bn3.bias', 'layer3.7.bn3.weight', 'layer3.7.conv3.weight', 'layer3.7.bn2.bias', 'layer3.7.bn2.weight', 'layer3.7.conv2.weight', 'layer3.7.bn1.bias', 'layer3.7.bn1.weight', 'layer3.7.conv1.weight', 'layer3.6.bn3.bias', 'layer3.6.bn3.weight', 'layer3.6.conv3.weight', 'layer3.6.bn2.bias', 'layer3.6.bn2.weight', 'layer3.6.conv2.weight', 'layer3.6.bn1.bias', 'layer3.6.bn1.weight', 'layer3.6.conv1.weight', 'layer3.5.bn3.bias', 'layer3.5.bn3.weight', 'layer3.5.conv3.weight', 'layer3.5.bn2.bias', 'layer3.5.bn2.weight', 'layer3.5.conv2.weight', 'layer3.5.bn1.bias', 'layer3.5.bn1.weight', 'layer3.5.conv1.weight', 'layer3.4.bn3.bias', 'layer3.4.bn3.weight', 'layer3.4.conv3.weight', 'layer3.4.bn2.bias', 'layer3.4.bn2.weight', 'layer3.4.conv2.weight', 'layer3.4.bn1.bias', 'layer3.4.bn1.weight', 'layer3.4.conv1.weight', 'layer3.3.bn3.bias', 'layer3.3.bn3.weight', 'layer3.3.conv3.weight', 'layer3.3.bn2.bias', 'layer3.3.bn2.weight', 'layer3.3.conv2.weight', 'layer3.3.bn1.bias', 'layer3.3.bn1.weight', 'layer3.3.conv1.weight', 'layer3.2.bn3.bias', 'layer3.2.bn3.weight', 'layer3.2.conv3.weight', 'layer3.2.bn2.bias', 'layer3.2.bn2.weight', 'layer3.2.conv2.weight', 'layer3.2.bn1.bias', 'layer3.2.bn1.weight', 'layer3.2.conv1.weight', 'layer3.1.bn3.bias', 'layer3.1.bn3.weight', 'layer3.1.conv3.weight', 'layer3.1.bn2.bias', 'layer3.1.bn2.weight', 'layer3.1.conv2.weight', 'layer3.1.bn1.bias', 'layer3.1.bn1.weight', 'layer3.1.conv1.weight', 'layer3.0.downsample.1.bias', 'layer3.0.downsample.1.weight', 'layer3.0.downsample.0.weight', 'layer3.0.bn3.bias', 'layer3.0.bn3.weight', 'layer3.0.conv3.weight', 'layer3.0.bn2.bias', 'layer3.0.bn2.weight', 'layer3.0.conv2.weight', 'layer3.0.bn1.bias', 'layer3.0.bn1.weight', 'layer3.0.conv1.weight', 'layer2.7.bn3.bias', 'layer2.7.bn3.weight', 'layer2.7.conv3.weight', 'layer2.7.bn2.bias', 'layer2.7.bn2.weight', 'layer2.7.conv2.weight', 'layer2.7.bn1.bias', 'layer2.7.bn1.weight', 'layer2.7.conv1.weight', 'layer2.6.bn3.bias', 'layer2.6.bn3.weight', 'layer2.6.conv3.weight', 'layer2.6.bn2.bias', 'layer2.6.bn2.weight', 'layer2.6.conv2.weight', 'layer2.6.bn1.bias', 'layer2.6.bn1.weight', 'layer2.6.conv1.weight', 'layer2.5.bn3.bias', 'layer2.5.bn3.weight', 'layer2.5.conv3.weight', 'layer2.5.bn2.bias', 'layer2.5.bn2.weight', 'layer2.5.conv2.weight', 'layer2.5.bn1.bias', 'layer2.5.bn1.weight', 'layer2.5.conv1.weight', 'layer2.4.bn3.bias', 'layer2.4.bn3.weight', 'layer2.4.conv3.weight', 'layer2.4.bn2.bias', 'layer2.4.bn2.weight', 'layer2.4.conv2.weight', 'layer2.4.bn1.bias', 'layer2.4.bn1.weight', 'layer2.4.conv1.weight', 'layer2.3.bn3.bias', 'layer2.3.bn3.weight', 'layer2.3.conv3.weight', 'layer2.3.bn2.bias', 'layer2.3.bn2.weight', 'layer2.3.conv2.weight', 'layer2.3.bn1.bias', 'layer2.3.bn1.weight', 'layer2.3.conv1.weight', 'layer2.2.bn3.bias', 'layer2.2.bn3.weight', 'layer2.2.conv3.weight', 'layer2.2.bn2.bias', 'layer2.2.bn2.weight', 'layer2.2.conv2.weight', 'layer2.2.bn1.bias', 'layer2.2.bn1.weight', 'layer2.2.conv1.weight', 'layer2.1.bn3.bias', 'layer2.1.bn3.weight', 'layer2.1.conv3.weight', 'layer2.1.bn2.bias', 'layer2.1.bn2.weight', 'layer2.1.conv2.weight', 'layer2.1.bn1.bias', 'layer2.1.bn1.weight', 'layer2.1.conv1.weight', 'layer2.0.downsample.1.bias', 'layer2.0.downsample.1.weight', 'layer2.0.downsample.0.weight', 'layer2.0.bn3.bias', 'layer2.0.bn3.weight', 'layer2.0.conv3.weight', 'layer2.0.bn2.bias', 'layer2.0.bn2.weight', 'layer2.0.conv2.weight', 'layer2.0.bn1.bias', 'layer2.0.bn1.weight', 'layer2.0.conv1.weight', 'layer1.2.bn3.bias', 'layer1.2.bn3.weight', 'layer1.2.conv3.weight', 'layer1.2.bn2.bias', 'layer1.2.bn2.weight', 'layer1.2.conv2.weight', 'layer1.2.bn1.bias', 'layer1.2.bn1.weight', 'layer1.2.conv1.weight', 'layer1.1.bn3.bias', 'layer1.1.bn3.weight', 'layer1.1.conv3.weight', 'layer1.1.bn2.bias', 'layer1.1.bn2.weight', 'layer1.1.conv2.weight', 'layer1.1.bn1.bias', 'layer1.1.bn1.weight', 'layer1.1.conv1.weight', 'layer1.0.downsample.1.bias', 'layer1.0.downsample.1.weight', 'layer1.0.downsample.0.weight', 'layer1.0.bn3.bias', 'layer1.0.bn3.weight', 'layer1.0.conv3.weight', 'layer1.0.bn2.bias', 'layer1.0.bn2.weight', 'layer1.0.conv2.weight', 'layer1.0.bn1.bias', 'layer1.0.bn1.weight', 'layer1.0.conv1.weight', 'bn1.bias', 'bn1.weight', 'conv1.weight']]
2025-06-08 08:34:32,941 [allreducer.py:664] INFO key_groupidx_maps: {'fc.bias': 0, 'fc.weight': 0, 'layer4.2.bn3.bias': 0, 'layer4.2.bn3.weight': 0, 'layer4.2.conv3.weight': 0, 'layer4.2.bn2.bias': 0, 'layer4.2.bn2.weight': 0, 'layer4.2.conv2.weight': 0, 'layer4.2.bn1.bias': 0, 'layer4.2.bn1.weight': 0, 'layer4.2.conv1.weight': 0, 'layer4.1.bn3.bias': 0, 'layer4.1.bn3.weight': 0, 'layer4.1.conv3.weight': 0, 'layer4.1.bn2.bias': 0, 'layer4.1.bn2.weight': 0, 'layer4.1.conv2.weight': 0, 'layer4.1.bn1.bias': 0, 'layer4.1.bn1.weight': 0, 'layer4.1.conv1.weight': 0, 'layer4.0.downsample.1.bias': 0, 'layer4.0.downsample.1.weight': 0, 'layer4.0.downsample.0.weight': 0, 'layer4.0.bn3.bias': 0, 'layer4.0.bn3.weight': 0, 'layer4.0.conv3.weight': 0, 'layer4.0.bn2.bias': 0, 'layer4.0.bn2.weight': 0, 'layer4.0.conv2.weight': 0, 'layer4.0.bn1.bias': 0, 'layer4.0.bn1.weight': 0, 'layer4.0.conv1.weight': 0, 'layer3.35.bn3.bias': 0, 'layer3.35.bn3.weight': 0, 'layer3.35.conv3.weight': 0, 'layer3.35.bn2.bias': 0, 'layer3.35.bn2.weight': 0, 'layer3.35.conv2.weight': 0, 'layer3.35.bn1.bias': 0, 'layer3.35.bn1.weight': 0, 'layer3.35.conv1.weight': 0, 'layer3.34.bn3.bias': 0, 'layer3.34.bn3.weight': 0, 'layer3.34.conv3.weight': 0, 'layer3.34.bn2.bias': 0, 'layer3.34.bn2.weight': 0, 'layer3.34.conv2.weight': 0, 'layer3.34.bn1.bias': 0, 'layer3.34.bn1.weight': 0, 'layer3.34.conv1.weight': 0, 'layer3.33.bn3.bias': 0, 'layer3.33.bn3.weight': 0, 'layer3.33.conv3.weight': 0, 'layer3.33.bn2.bias': 0, 'layer3.33.bn2.weight': 0, 'layer3.33.conv2.weight': 0, 'layer3.33.bn1.bias': 0, 'layer3.33.bn1.weight': 0, 'layer3.33.conv1.weight': 0, 'layer3.32.bn3.bias': 0, 'layer3.32.bn3.weight': 0, 'layer3.32.conv3.weight': 0, 'layer3.32.bn2.bias': 0, 'layer3.32.bn2.weight': 0, 'layer3.32.conv2.weight': 0, 'layer3.32.bn1.bias': 0, 'layer3.32.bn1.weight': 0, 'layer3.32.conv1.weight': 0, 'layer3.31.bn3.bias': 0, 'layer3.31.bn3.weight': 0, 'layer3.31.conv3.weight': 0, 'layer3.31.bn2.bias': 0, 'layer3.31.bn2.weight': 0, 'layer3.31.conv2.weight': 0, 'layer3.31.bn1.bias': 0, 'layer3.31.bn1.weight': 0, 'layer3.31.conv1.weight': 0, 'layer3.30.bn3.bias': 0, 'layer3.30.bn3.weight': 0, 'layer3.30.conv3.weight': 0, 'layer3.30.bn2.bias': 0, 'layer3.30.bn2.weight': 0, 'layer3.30.conv2.weight': 0, 'layer3.30.bn1.bias': 0, 'layer3.30.bn1.weight': 0, 'layer3.30.conv1.weight': 0, 'layer3.29.bn3.bias': 0, 'layer3.29.bn3.weight': 0, 'layer3.29.conv3.weight': 0, 'layer3.29.bn2.bias': 0, 'layer3.29.bn2.weight': 0, 'layer3.29.conv2.weight': 0, 'layer3.29.bn1.bias': 0, 'layer3.29.bn1.weight': 0, 'layer3.29.conv1.weight': 0, 'layer3.28.bn3.bias': 0, 'layer3.28.bn3.weight': 0, 'layer3.28.conv3.weight': 0, 'layer3.28.bn2.bias': 0, 'layer3.28.bn2.weight': 0, 'layer3.28.conv2.weight': 0, 'layer3.28.bn1.bias': 0, 'layer3.28.bn1.weight': 0, 'layer3.28.conv1.weight': 0, 'layer3.27.bn3.bias': 0, 'layer3.27.bn3.weight': 0, 'layer3.27.conv3.weight': 0, 'layer3.27.bn2.bias': 0, 'layer3.27.bn2.weight': 0, 'layer3.27.conv2.weight': 0, 'layer3.27.bn1.bias': 0, 'layer3.27.bn1.weight': 0, 'layer3.27.conv1.weight': 0, 'layer3.26.bn3.bias': 0, 'layer3.26.bn3.weight': 0, 'layer3.26.conv3.weight': 0, 'layer3.26.bn2.bias': 0, 'layer3.26.bn2.weight': 0, 'layer3.26.conv2.weight': 0, 'layer3.26.bn1.bias': 0, 'layer3.26.bn1.weight': 0, 'layer3.26.conv1.weight': 0, 'layer3.25.bn3.bias': 0, 'layer3.25.bn3.weight': 0, 'layer3.25.conv3.weight': 0, 'layer3.25.bn2.bias': 0, 'layer3.25.bn2.weight': 0, 'layer3.25.conv2.weight': 0, 'layer3.25.bn1.bias': 0, 'layer3.25.bn1.weight': 0, 'layer3.25.conv1.weight': 0, 'layer3.24.bn3.bias': 0, 'layer3.24.bn3.weight': 0, 'layer3.24.conv3.weight': 0, 'layer3.24.bn2.bias': 0, 'layer3.24.bn2.weight': 0, 'layer3.24.conv2.weight': 0, 'layer3.24.bn1.bias': 0, 'layer3.24.bn1.weight': 0, 'layer3.24.conv1.weight': 0, 'layer3.23.bn3.bias': 0, 'layer3.23.bn3.weight': 0, 'layer3.23.conv3.weight': 0, 'layer3.23.bn2.bias': 0, 'layer3.23.bn2.weight': 0, 'layer3.23.conv2.weight': 0, 'layer3.23.bn1.bias': 0, 'layer3.23.bn1.weight': 0, 'layer3.23.conv1.weight': 0, 'layer3.22.bn3.bias': 0, 'layer3.22.bn3.weight': 0, 'layer3.22.conv3.weight': 0, 'layer3.22.bn2.bias': 0, 'layer3.22.bn2.weight': 0, 'layer3.22.conv2.weight': 0, 'layer3.22.bn1.bias': 0, 'layer3.22.bn1.weight': 0, 'layer3.22.conv1.weight': 0, 'layer3.21.bn3.bias': 0, 'layer3.21.bn3.weight': 0, 'layer3.21.conv3.weight': 0, 'layer3.21.bn2.bias': 0, 'layer3.21.bn2.weight': 0, 'layer3.21.conv2.weight': 0, 'layer3.21.bn1.bias': 0, 'layer3.21.bn1.weight': 0, 'layer3.21.conv1.weight': 0, 'layer3.20.bn3.bias': 0, 'layer3.20.bn3.weight': 0, 'layer3.20.conv3.weight': 0, 'layer3.20.bn2.bias': 0, 'layer3.20.bn2.weight': 0, 'layer3.20.conv2.weight': 0, 'layer3.20.bn1.bias': 0, 'layer3.20.bn1.weight': 0, 'layer3.20.conv1.weight': 0, 'layer3.19.bn3.bias': 0, 'layer3.19.bn3.weight': 0, 'layer3.19.conv3.weight': 0, 'layer3.19.bn2.bias': 0, 'layer3.19.bn2.weight': 0, 'layer3.19.conv2.weight': 0, 'layer3.19.bn1.bias': 0, 'layer3.19.bn1.weight': 0, 'layer3.19.conv1.weight': 0, 'layer3.18.bn3.bias': 0, 'layer3.18.bn3.weight': 0, 'layer3.18.conv3.weight': 0, 'layer3.18.bn2.bias': 0, 'layer3.18.bn2.weight': 0, 'layer3.18.conv2.weight': 0, 'layer3.18.bn1.bias': 0, 'layer3.18.bn1.weight': 0, 'layer3.18.conv1.weight': 0, 'layer3.17.bn3.bias': 0, 'layer3.17.bn3.weight': 0, 'layer3.17.conv3.weight': 0, 'layer3.17.bn2.bias': 0, 'layer3.17.bn2.weight': 0, 'layer3.17.conv2.weight': 0, 'layer3.17.bn1.bias': 0, 'layer3.17.bn1.weight': 0, 'layer3.17.conv1.weight': 0, 'layer3.16.bn3.bias': 0, 'layer3.16.bn3.weight': 0, 'layer3.16.conv3.weight': 0, 'layer3.16.bn2.bias': 0, 'layer3.16.bn2.weight': 0, 'layer3.16.conv2.weight': 0, 'layer3.16.bn1.bias': 0, 'layer3.16.bn1.weight': 0, 'layer3.16.conv1.weight': 0, 'layer3.15.bn3.bias': 0, 'layer3.15.bn3.weight': 0, 'layer3.15.conv3.weight': 0, 'layer3.15.bn2.bias': 0, 'layer3.15.bn2.weight': 0, 'layer3.15.conv2.weight': 0, 'layer3.15.bn1.bias': 0, 'layer3.15.bn1.weight': 0, 'layer3.15.conv1.weight': 0, 'layer3.14.bn3.bias': 0, 'layer3.14.bn3.weight': 0, 'layer3.14.conv3.weight': 0, 'layer3.14.bn2.bias': 0, 'layer3.14.bn2.weight': 0, 'layer3.14.conv2.weight': 0, 'layer3.14.bn1.bias': 0, 'layer3.14.bn1.weight': 0, 'layer3.14.conv1.weight': 0, 'layer3.13.bn3.bias': 0, 'layer3.13.bn3.weight': 0, 'layer3.13.conv3.weight': 0, 'layer3.13.bn2.bias': 0, 'layer3.13.bn2.weight': 0, 'layer3.13.conv2.weight': 0, 'layer3.13.bn1.bias': 0, 'layer3.13.bn1.weight': 0, 'layer3.13.conv1.weight': 0, 'layer3.12.bn3.bias': 0, 'layer3.12.bn3.weight': 0, 'layer3.12.conv3.weight': 0, 'layer3.12.bn2.bias': 0, 'layer3.12.bn2.weight': 0, 'layer3.12.conv2.weight': 0, 'layer3.12.bn1.bias': 0, 'layer3.12.bn1.weight': 0, 'layer3.12.conv1.weight': 0, 'layer3.11.bn3.bias': 0, 'layer3.11.bn3.weight': 0, 'layer3.11.conv3.weight': 0, 'layer3.11.bn2.bias': 0, 'layer3.11.bn2.weight': 0, 'layer3.11.conv2.weight': 0, 'layer3.11.bn1.bias': 0, 'layer3.11.bn1.weight': 0, 'layer3.11.conv1.weight': 0, 'layer3.10.bn3.bias': 0, 'layer3.10.bn3.weight': 0, 'layer3.10.conv3.weight': 0, 'layer3.10.bn2.bias': 0, 'layer3.10.bn2.weight': 0, 'layer3.10.conv2.weight': 0, 'layer3.10.bn1.bias': 0, 'layer3.10.bn1.weight': 0, 'layer3.10.conv1.weight': 0, 'layer3.9.bn3.bias': 0, 'layer3.9.bn3.weight': 0, 'layer3.9.conv3.weight': 0, 'layer3.9.bn2.bias': 0, 'layer3.9.bn2.weight': 0, 'layer3.9.conv2.weight': 0, 'layer3.9.bn1.bias': 0, 'layer3.9.bn1.weight': 0, 'layer3.9.conv1.weight': 0, 'layer3.8.bn3.bias': 0, 'layer3.8.bn3.weight': 0, 'layer3.8.conv3.weight': 0, 'layer3.8.bn2.bias': 0, 'layer3.8.bn2.weight': 0, 'layer3.8.conv2.weight': 0, 'layer3.8.bn1.bias': 0, 'layer3.8.bn1.weight': 0, 'layer3.8.conv1.weight': 0, 'layer3.7.bn3.bias': 0, 'layer3.7.bn3.weight': 0, 'layer3.7.conv3.weight': 0, 'layer3.7.bn2.bias': 0, 'layer3.7.bn2.weight': 0, 'layer3.7.conv2.weight': 0, 'layer3.7.bn1.bias': 0, 'layer3.7.bn1.weight': 0, 'layer3.7.conv1.weight': 0, 'layer3.6.bn3.bias': 0, 'layer3.6.bn3.weight': 0, 'layer3.6.conv3.weight': 0, 'layer3.6.bn2.bias': 0, 'layer3.6.bn2.weight': 0, 'layer3.6.conv2.weight': 0, 'layer3.6.bn1.bias': 0, 'layer3.6.bn1.weight': 0, 'layer3.6.conv1.weight': 0, 'layer3.5.bn3.bias': 0, 'layer3.5.bn3.weight': 0, 'layer3.5.conv3.weight': 0, 'layer3.5.bn2.bias': 0, 'layer3.5.bn2.weight': 0, 'layer3.5.conv2.weight': 0, 'layer3.5.bn1.bias': 0, 'layer3.5.bn1.weight': 0, 'layer3.5.conv1.weight': 0, 'layer3.4.bn3.bias': 0, 'layer3.4.bn3.weight': 0, 'layer3.4.conv3.weight': 0, 'layer3.4.bn2.bias': 0, 'layer3.4.bn2.weight': 0, 'layer3.4.conv2.weight': 0, 'layer3.4.bn1.bias': 0, 'layer3.4.bn1.weight': 0, 'layer3.4.conv1.weight': 0, 'layer3.3.bn3.bias': 0, 'layer3.3.bn3.weight': 0, 'layer3.3.conv3.weight': 0, 'layer3.3.bn2.bias': 0, 'layer3.3.bn2.weight': 0, 'layer3.3.conv2.weight': 0, 'layer3.3.bn1.bias': 0, 'layer3.3.bn1.weight': 0, 'layer3.3.conv1.weight': 0, 'layer3.2.bn3.bias': 0, 'layer3.2.bn3.weight': 0, 'layer3.2.conv3.weight': 0, 'layer3.2.bn2.bias': 0, 'layer3.2.bn2.weight': 0, 'layer3.2.conv2.weight': 0, 'layer3.2.bn1.bias': 0, 'layer3.2.bn1.weight': 0, 'layer3.2.conv1.weight': 0, 'layer3.1.bn3.bias': 0, 'layer3.1.bn3.weight': 0, 'layer3.1.conv3.weight': 0, 'layer3.1.bn2.bias': 0, 'layer3.1.bn2.weight': 0, 'layer3.1.conv2.weight': 0, 'layer3.1.bn1.bias': 0, 'layer3.1.bn1.weight': 0, 'layer3.1.conv1.weight': 0, 'layer3.0.downsample.1.bias': 0, 'layer3.0.downsample.1.weight': 0, 'layer3.0.downsample.0.weight': 0, 'layer3.0.bn3.bias': 0, 'layer3.0.bn3.weight': 0, 'layer3.0.conv3.weight': 0, 'layer3.0.bn2.bias': 0, 'layer3.0.bn2.weight': 0, 'layer3.0.conv2.weight': 0, 'layer3.0.bn1.bias': 0, 'layer3.0.bn1.weight': 0, 'layer3.0.conv1.weight': 0, 'layer2.7.bn3.bias': 0, 'layer2.7.bn3.weight': 0, 'layer2.7.conv3.weight': 0, 'layer2.7.bn2.bias': 0, 'layer2.7.bn2.weight': 0, 'layer2.7.conv2.weight': 0, 'layer2.7.bn1.bias': 0, 'layer2.7.bn1.weight': 0, 'layer2.7.conv1.weight': 0, 'layer2.6.bn3.bias': 0, 'layer2.6.bn3.weight': 0, 'layer2.6.conv3.weight': 0, 'layer2.6.bn2.bias': 0, 'layer2.6.bn2.weight': 0, 'layer2.6.conv2.weight': 0, 'layer2.6.bn1.bias': 0, 'layer2.6.bn1.weight': 0, 'layer2.6.conv1.weight': 0, 'layer2.5.bn3.bias': 0, 'layer2.5.bn3.weight': 0, 'layer2.5.conv3.weight': 0, 'layer2.5.bn2.bias': 0, 'layer2.5.bn2.weight': 0, 'layer2.5.conv2.weight': 0, 'layer2.5.bn1.bias': 0, 'layer2.5.bn1.weight': 0, 'layer2.5.conv1.weight': 0, 'layer2.4.bn3.bias': 0, 'layer2.4.bn3.weight': 0, 'layer2.4.conv3.weight': 0, 'layer2.4.bn2.bias': 0, 'layer2.4.bn2.weight': 0, 'layer2.4.conv2.weight': 0, 'layer2.4.bn1.bias': 0, 'layer2.4.bn1.weight': 0, 'layer2.4.conv1.weight': 0, 'layer2.3.bn3.bias': 0, 'layer2.3.bn3.weight': 0, 'layer2.3.conv3.weight': 0, 'layer2.3.bn2.bias': 0, 'layer2.3.bn2.weight': 0, 'layer2.3.conv2.weight': 0, 'layer2.3.bn1.bias': 0, 'layer2.3.bn1.weight': 0, 'layer2.3.conv1.weight': 0, 'layer2.2.bn3.bias': 0, 'layer2.2.bn3.weight': 0, 'layer2.2.conv3.weight': 0, 'layer2.2.bn2.bias': 0, 'layer2.2.bn2.weight': 0, 'layer2.2.conv2.weight': 0, 'layer2.2.bn1.bias': 0, 'layer2.2.bn1.weight': 0, 'layer2.2.conv1.weight': 0, 'layer2.1.bn3.bias': 0, 'layer2.1.bn3.weight': 0, 'layer2.1.conv3.weight': 0, 'layer2.1.bn2.bias': 0, 'layer2.1.bn2.weight': 0, 'layer2.1.conv2.weight': 0, 'layer2.1.bn1.bias': 0, 'layer2.1.bn1.weight': 0, 'layer2.1.conv1.weight': 0, 'layer2.0.downsample.1.bias': 0, 'layer2.0.downsample.1.weight': 0, 'layer2.0.downsample.0.weight': 0, 'layer2.0.bn3.bias': 0, 'layer2.0.bn3.weight': 0, 'layer2.0.conv3.weight': 0, 'layer2.0.bn2.bias': 0, 'layer2.0.bn2.weight': 0, 'layer2.0.conv2.weight': 0, 'layer2.0.bn1.bias': 0, 'layer2.0.bn1.weight': 0, 'layer2.0.conv1.weight': 0, 'layer1.2.bn3.bias': 0, 'layer1.2.bn3.weight': 0, 'layer1.2.conv3.weight': 0, 'layer1.2.bn2.bias': 0, 'layer1.2.bn2.weight': 0, 'layer1.2.conv2.weight': 0, 'layer1.2.bn1.bias': 0, 'layer1.2.bn1.weight': 0, 'layer1.2.conv1.weight': 0, 'layer1.1.bn3.bias': 0, 'layer1.1.bn3.weight': 0, 'layer1.1.conv3.weight': 0, 'layer1.1.bn2.bias': 0, 'layer1.1.bn2.weight': 0, 'layer1.1.conv2.weight': 0, 'layer1.1.bn1.bias': 0, 'layer1.1.bn1.weight': 0, 'layer1.1.conv1.weight': 0, 'layer1.0.downsample.1.bias': 0, 'layer1.0.downsample.1.weight': 0, 'layer1.0.downsample.0.weight': 0, 'layer1.0.bn3.bias': 0, 'layer1.0.bn3.weight': 0, 'layer1.0.conv3.weight': 0, 'layer1.0.bn2.bias': 0, 'layer1.0.bn2.weight': 0, 'layer1.0.conv2.weight': 0, 'layer1.0.bn1.bias': 0, 'layer1.0.bn1.weight': 0, 'layer1.0.conv1.weight': 0, 'bn1.bias': 0, 'bn1.weight': 0, 'conv1.weight': 0}
2025-06-08 08:34:32,942 [allreducer.py:696] INFO offsets: 
2025-06-08 08:34:32,943 [allreducer.py:343] INFO dynamic densities = [0.01]
2025-06-08 08:34:32,955 [allreducer.py:655] INFO spar_groups: [{'conv1.weight': ((0, 9408), (0, 9408)), 'bn1.weight': ((0, 64), (9408, 9472)), 'bn1.bias': ((0, 64), (9472, 9536)), 'layer1.0.conv1.weight': ((0, 4096), (9536, 13632)), 'layer1.0.bn1.weight': ((0, 64), (13632, 13696)), 'layer1.0.bn1.bias': ((0, 64), (13696, 13760)), 'layer1.0.conv2.weight': ((0, 36864), (13760, 50624)), 'layer1.0.bn2.weight': ((0, 64), (50624, 50688)), 'layer1.0.bn2.bias': ((0, 64), (50688, 50752)), 'layer1.0.conv3.weight': ((0, 16384), (50752, 67136)), 'layer1.0.bn3.weight': ((0, 256), (67136, 67392)), 'layer1.0.bn3.bias': ((0, 256), (67392, 67648)), 'layer1.0.downsample.0.weight': ((0, 16384), (67648, 84032)), 'layer1.0.downsample.1.weight': ((0, 256), (84032, 84288)), 'layer1.0.downsample.1.bias': ((0, 256), (84288, 84544)), 'layer1.1.conv1.weight': ((0, 16384), (84544, 100928)), 'layer1.1.bn1.weight': ((0, 64), (100928, 100992)), 'layer1.1.bn1.bias': ((0, 64), (100992, 101056)), 'layer1.1.conv2.weight': ((0, 36864), (101056, 137920)), 'layer1.1.bn2.weight': ((0, 64), (137920, 137984)), 'layer1.1.bn2.bias': ((0, 64), (137984, 138048)), 'layer1.1.conv3.weight': ((0, 16384), (138048, 154432)), 'layer1.1.bn3.weight': ((0, 256), (154432, 154688)), 'layer1.1.bn3.bias': ((0, 256), (154688, 154944)), 'layer1.2.conv1.weight': ((0, 16384), (154944, 171328)), 'layer1.2.bn1.weight': ((0, 64), (171328, 171392)), 'layer1.2.bn1.bias': ((0, 64), (171392, 171456)), 'layer1.2.conv2.weight': ((0, 36864), (171456, 208320)), 'layer1.2.bn2.weight': ((0, 64), (208320, 208384)), 'layer1.2.bn2.bias': ((0, 64), (208384, 208448)), 'layer1.2.conv3.weight': ((0, 16384), (208448, 224832)), 'layer1.2.bn3.weight': ((0, 256), (224832, 225088)), 'layer1.2.bn3.bias': ((0, 256), (225088, 225344)), 'layer2.0.conv1.weight': ((0, 32768), (225344, 258112)), 'layer2.0.bn1.weight': ((0, 128), (258112, 258240)), 'layer2.0.bn1.bias': ((0, 128), (258240, 258368)), 'layer2.0.conv2.weight': ((0, 147456), (258368, 405824)), 'layer2.0.bn2.weight': ((0, 128), (405824, 405952)), 'layer2.0.bn2.bias': ((0, 128), (405952, 406080)), 'layer2.0.conv3.weight': ((0, 65536), (406080, 471616)), 'layer2.0.bn3.weight': ((0, 512), (471616, 472128)), 'layer2.0.bn3.bias': ((0, 512), (472128, 472640)), 'layer2.0.downsample.0.weight': ((0, 131072), (472640, 603712)), 'layer2.0.downsample.1.weight': ((0, 512), (603712, 604224)), 'layer2.0.downsample.1.bias': ((0, 512), (604224, 604736)), 'layer2.1.conv1.weight': ((0, 65536), (604736, 670272)), 'layer2.1.bn1.weight': ((0, 128), (670272, 670400)), 'layer2.1.bn1.bias': ((0, 128), (670400, 670528)), 'layer2.1.conv2.weight': ((0, 147456), (670528, 817984)), 'layer2.1.bn2.weight': ((0, 128), (817984, 818112)), 'layer2.1.bn2.bias': ((0, 128), (818112, 818240)), 'layer2.1.conv3.weight': ((0, 65536), (818240, 883776)), 'layer2.1.bn3.weight': ((0, 512), (883776, 884288)), 'layer2.1.bn3.bias': ((0, 512), (884288, 884800)), 'layer2.2.conv1.weight': ((0, 65536), (884800, 950336)), 'layer2.2.bn1.weight': ((0, 128), (950336, 950464)), 'layer2.2.bn1.bias': ((0, 128), (950464, 950592)), 'layer2.2.conv2.weight': ((0, 147456), (950592, 1098048)), 'layer2.2.bn2.weight': ((0, 128), (1098048, 1098176)), 'layer2.2.bn2.bias': ((0, 128), (1098176, 1098304)), 'layer2.2.conv3.weight': ((0, 65536), (1098304, 1163840)), 'layer2.2.bn3.weight': ((0, 512), (1163840, 1164352)), 'layer2.2.bn3.bias': ((0, 512), (1164352, 1164864)), 'layer2.3.conv1.weight': ((0, 65536), (1164864, 1230400)), 'layer2.3.bn1.weight': ((0, 128), (1230400, 1230528)), 'layer2.3.bn1.bias': ((0, 128), (1230528, 1230656)), 'layer2.3.conv2.weight': ((0, 147456), (1230656, 1378112)), 'layer2.3.bn2.weight': ((0, 128), (1378112, 1378240)), 'layer2.3.bn2.bias': ((0, 128), (1378240, 1378368)), 'layer2.3.conv3.weight': ((0, 65536), (1378368, 1443904)), 'layer2.3.bn3.weight': ((0, 512), (1443904, 1444416)), 'layer2.3.bn3.bias': ((0, 512), (1444416, 1444928)), 'layer2.4.conv1.weight': ((0, 65536), (1444928, 1510464)), 'layer2.4.bn1.weight': ((0, 128), (1510464, 1510592)), 'layer2.4.bn1.bias': ((0, 128), (1510592, 1510720)), 'layer2.4.conv2.weight': ((0, 147456), (1510720, 1658176)), 'layer2.4.bn2.weight': ((0, 128), (1658176, 1658304)), 'layer2.4.bn2.bias': ((0, 128), (1658304, 1658432)), 'layer2.4.conv3.weight': ((0, 65536), (1658432, 1723968)), 'layer2.4.bn3.weight': ((0, 512), (1723968, 1724480)), 'layer2.4.bn3.bias': ((0, 512), (1724480, 1724992)), 'layer2.5.conv1.weight': ((0, 65536), (1724992, 1790528)), 'layer2.5.bn1.weight': ((0, 128), (1790528, 1790656)), 'layer2.5.bn1.bias': ((0, 128), (1790656, 1790784)), 'layer2.5.conv2.weight': ((0, 147456), (1790784, 1938240)), 'layer2.5.bn2.weight': ((0, 128), (1938240, 1938368)), 'layer2.5.bn2.bias': ((0, 128), (1938368, 1938496)), 'layer2.5.conv3.weight': ((0, 65536), (1938496, 2004032)), 'layer2.5.bn3.weight': ((0, 512), (2004032, 2004544)), 'layer2.5.bn3.bias': ((0, 512), (2004544, 2005056)), 'layer2.6.conv1.weight': ((0, 65536), (2005056, 2070592)), 'layer2.6.bn1.weight': ((0, 128), (2070592, 2070720)), 'layer2.6.bn1.bias': ((0, 128), (2070720, 2070848)), 'layer2.6.conv2.weight': ((0, 147456), (2070848, 2218304)), 'layer2.6.bn2.weight': ((0, 128), (2218304, 2218432)), 'layer2.6.bn2.bias': ((0, 128), (2218432, 2218560)), 'layer2.6.conv3.weight': ((0, 65536), (2218560, 2284096)), 'layer2.6.bn3.weight': ((0, 512), (2284096, 2284608)), 'layer2.6.bn3.bias': ((0, 512), (2284608, 2285120)), 'layer2.7.conv1.weight': ((0, 65536), (2285120, 2350656)), 'layer2.7.bn1.weight': ((0, 128), (2350656, 2350784)), 'layer2.7.bn1.bias': ((0, 128), (2350784, 2350912)), 'layer2.7.conv2.weight': ((0, 147456), (2350912, 2498368)), 'layer2.7.bn2.weight': ((0, 128), (2498368, 2498496)), 'layer2.7.bn2.bias': ((0, 128), (2498496, 2498624)), 'layer2.7.conv3.weight': ((0, 65536), (2498624, 2564160)), 'layer2.7.bn3.weight': ((0, 512), (2564160, 2564672)), 'layer2.7.bn3.bias': ((0, 512), (2564672, 2565184)), 'layer3.0.conv1.weight': ((0, 131072), (2565184, 2696256)), 'layer3.0.bn1.weight': ((0, 256), (2696256, 2696512)), 'layer3.0.bn1.bias': ((0, 256), (2696512, 2696768)), 'layer3.0.conv2.weight': ((0, 589824), (2696768, 3286592)), 'layer3.0.bn2.weight': ((0, 256), (3286592, 3286848)), 'layer3.0.bn2.bias': ((0, 256), (3286848, 3287104)), 'layer3.0.conv3.weight': ((0, 262144), (3287104, 3549248)), 'layer3.0.bn3.weight': ((0, 1024), (3549248, 3550272)), 'layer3.0.bn3.bias': ((0, 1024), (3550272, 3551296)), 'layer3.0.downsample.0.weight': ((0, 524288), (3551296, 4075584)), 'layer3.0.downsample.1.weight': ((0, 1024), (4075584, 4076608)), 'layer3.0.downsample.1.bias': ((0, 1024), (4076608, 4077632)), 'layer3.1.conv1.weight': ((0, 262144), (4077632, 4339776)), 'layer3.1.bn1.weight': ((0, 256), (4339776, 4340032)), 'layer3.1.bn1.bias': ((0, 256), (4340032, 4340288)), 'layer3.1.conv2.weight': ((0, 589824), (4340288, 4930112)), 'layer3.1.bn2.weight': ((0, 256), (4930112, 4930368)), 'layer3.1.bn2.bias': ((0, 256), (4930368, 4930624)), 'layer3.1.conv3.weight': ((0, 262144), (4930624, 5192768)), 'layer3.1.bn3.weight': ((0, 1024), (5192768, 5193792)), 'layer3.1.bn3.bias': ((0, 1024), (5193792, 5194816)), 'layer3.2.conv1.weight': ((0, 262144), (5194816, 5456960)), 'layer3.2.bn1.weight': ((0, 256), (5456960, 5457216)), 'layer3.2.bn1.bias': ((0, 256), (5457216, 5457472)), 'layer3.2.conv2.weight': ((0, 589824), (5457472, 6047296)), 'layer3.2.bn2.weight': ((0, 256), (6047296, 6047552)), 'layer3.2.bn2.bias': ((0, 256), (6047552, 6047808)), 'layer3.2.conv3.weight': ((0, 262144), (6047808, 6309952)), 'layer3.2.bn3.weight': ((0, 1024), (6309952, 6310976)), 'layer3.2.bn3.bias': ((0, 1024), (6310976, 6312000)), 'layer3.3.conv1.weight': ((0, 262144), (6312000, 6574144)), 'layer3.3.bn1.weight': ((0, 256), (6574144, 6574400)), 'layer3.3.bn1.bias': ((0, 256), (6574400, 6574656)), 'layer3.3.conv2.weight': ((0, 589824), (6574656, 7164480)), 'layer3.3.bn2.weight': ((0, 256), (7164480, 7164736)), 'layer3.3.bn2.bias': ((0, 256), (7164736, 7164992)), 'layer3.3.conv3.weight': ((0, 262144), (7164992, 7427136)), 'layer3.3.bn3.weight': ((0, 1024), (7427136, 7428160)), 'layer3.3.bn3.bias': ((0, 1024), (7428160, 7429184)), 'layer3.4.conv1.weight': ((0, 262144), (7429184, 7691328)), 'layer3.4.bn1.weight': ((0, 256), (7691328, 7691584)), 'layer3.4.bn1.bias': ((0, 256), (7691584, 7691840)), 'layer3.4.conv2.weight': ((0, 589824), (7691840, 8281664)), 'layer3.4.bn2.weight': ((0, 256), (8281664, 8281920)), 'layer3.4.bn2.bias': ((0, 256), (8281920, 8282176)), 'layer3.4.conv3.weight': ((0, 262144), (8282176, 8544320)), 'layer3.4.bn3.weight': ((0, 1024), (8544320, 8545344)), 'layer3.4.bn3.bias': ((0, 1024), (8545344, 8546368)), 'layer3.5.conv1.weight': ((0, 262144), (8546368, 8808512)), 'layer3.5.bn1.weight': ((0, 256), (8808512, 8808768)), 'layer3.5.bn1.bias': ((0, 256), (8808768, 8809024)), 'layer3.5.conv2.weight': ((0, 589824), (8809024, 9398848)), 'layer3.5.bn2.weight': ((0, 256), (9398848, 9399104)), 'layer3.5.bn2.bias': ((0, 256), (9399104, 9399360)), 'layer3.5.conv3.weight': ((0, 262144), (9399360, 9661504)), 'layer3.5.bn3.weight': ((0, 1024), (9661504, 9662528)), 'layer3.5.bn3.bias': ((0, 1024), (9662528, 9663552)), 'layer3.6.conv1.weight': ((0, 61233), (9663552, 9724785))}, {'layer3.6.conv1.weight': ((61233, 262144), (0, 200911)), 'layer3.6.bn1.weight': ((0, 256), (200911, 201167)), 'layer3.6.bn1.bias': ((0, 256), (201167, 201423)), 'layer3.6.conv2.weight': ((0, 589824), (201423, 791247)), 'layer3.6.bn2.weight': ((0, 256), (791247, 791503)), 'layer3.6.bn2.bias': ((0, 256), (791503, 791759)), 'layer3.6.conv3.weight': ((0, 262144), (791759, 1053903)), 'layer3.6.bn3.weight': ((0, 1024), (1053903, 1054927)), 'layer3.6.bn3.bias': ((0, 1024), (1054927, 1055951)), 'layer3.7.conv1.weight': ((0, 262144), (1055951, 1318095)), 'layer3.7.bn1.weight': ((0, 256), (1318095, 1318351)), 'layer3.7.bn1.bias': ((0, 256), (1318351, 1318607)), 'layer3.7.conv2.weight': ((0, 589824), (1318607, 1908431)), 'layer3.7.bn2.weight': ((0, 256), (1908431, 1908687)), 'layer3.7.bn2.bias': ((0, 256), (1908687, 1908943)), 'layer3.7.conv3.weight': ((0, 262144), (1908943, 2171087)), 'layer3.7.bn3.weight': ((0, 1024), (2171087, 2172111)), 'layer3.7.bn3.bias': ((0, 1024), (2172111, 2173135)), 'layer3.8.conv1.weight': ((0, 262144), (2173135, 2435279)), 'layer3.8.bn1.weight': ((0, 256), (2435279, 2435535)), 'layer3.8.bn1.bias': ((0, 256), (2435535, 2435791)), 'layer3.8.conv2.weight': ((0, 589824), (2435791, 3025615)), 'layer3.8.bn2.weight': ((0, 256), (3025615, 3025871)), 'layer3.8.bn2.bias': ((0, 256), (3025871, 3026127)), 'layer3.8.conv3.weight': ((0, 262144), (3026127, 3288271)), 'layer3.8.bn3.weight': ((0, 1024), (3288271, 3289295)), 'layer3.8.bn3.bias': ((0, 1024), (3289295, 3290319)), 'layer3.9.conv1.weight': ((0, 262144), (3290319, 3552463)), 'layer3.9.bn1.weight': ((0, 256), (3552463, 3552719)), 'layer3.9.bn1.bias': ((0, 256), (3552719, 3552975)), 'layer3.9.conv2.weight': ((0, 589824), (3552975, 4142799)), 'layer3.9.bn2.weight': ((0, 256), (4142799, 4143055)), 'layer3.9.bn2.bias': ((0, 256), (4143055, 4143311)), 'layer3.9.conv3.weight': ((0, 262144), (4143311, 4405455)), 'layer3.9.bn3.weight': ((0, 1024), (4405455, 4406479)), 'layer3.9.bn3.bias': ((0, 1024), (4406479, 4407503)), 'layer3.10.conv1.weight': ((0, 262144), (4407503, 4669647)), 'layer3.10.bn1.weight': ((0, 256), (4669647, 4669903)), 'layer3.10.bn1.bias': ((0, 256), (4669903, 4670159)), 'layer3.10.conv2.weight': ((0, 589824), (4670159, 5259983)), 'layer3.10.bn2.weight': ((0, 256), (5259983, 5260239)), 'layer3.10.bn2.bias': ((0, 256), (5260239, 5260495)), 'layer3.10.conv3.weight': ((0, 262144), (5260495, 5522639)), 'layer3.10.bn3.weight': ((0, 1024), (5522639, 5523663)), 'layer3.10.bn3.bias': ((0, 1024), (5523663, 5524687)), 'layer3.11.conv1.weight': ((0, 262144), (5524687, 5786831)), 'layer3.11.bn1.weight': ((0, 256), (5786831, 5787087)), 'layer3.11.bn1.bias': ((0, 256), (5787087, 5787343)), 'layer3.11.conv2.weight': ((0, 589824), (5787343, 6377167)), 'layer3.11.bn2.weight': ((0, 256), (6377167, 6377423)), 'layer3.11.bn2.bias': ((0, 256), (6377423, 6377679)), 'layer3.11.conv3.weight': ((0, 262144), (6377679, 6639823)), 'layer3.11.bn3.weight': ((0, 1024), (6639823, 6640847)), 'layer3.11.bn3.bias': ((0, 1024), (6640847, 6641871)), 'layer3.12.conv1.weight': ((0, 262144), (6641871, 6904015)), 'layer3.12.bn1.weight': ((0, 256), (6904015, 6904271)), 'layer3.12.bn1.bias': ((0, 256), (6904271, 6904527)), 'layer3.12.conv2.weight': ((0, 589824), (6904527, 7494351)), 'layer3.12.bn2.weight': ((0, 256), (7494351, 7494607)), 'layer3.12.bn2.bias': ((0, 256), (7494607, 7494863)), 'layer3.12.conv3.weight': ((0, 262144), (7494863, 7757007)), 'layer3.12.bn3.weight': ((0, 1024), (7757007, 7758031)), 'layer3.12.bn3.bias': ((0, 1024), (7758031, 7759055)), 'layer3.13.conv1.weight': ((0, 262144), (7759055, 8021199)), 'layer3.13.bn1.weight': ((0, 256), (8021199, 8021455)), 'layer3.13.bn1.bias': ((0, 256), (8021455, 8021711)), 'layer3.13.conv2.weight': ((0, 589824), (8021711, 8611535)), 'layer3.13.bn2.weight': ((0, 256), (8611535, 8611791)), 'layer3.13.bn2.bias': ((0, 256), (8611791, 8612047)), 'layer3.13.conv3.weight': ((0, 262144), (8612047, 8874191)), 'layer3.13.bn3.weight': ((0, 1024), (8874191, 8875215)), 'layer3.13.bn3.bias': ((0, 1024), (8875215, 8876239)), 'layer3.14.conv1.weight': ((0, 262144), (8876239, 9138383)), 'layer3.14.bn1.weight': ((0, 256), (9138383, 9138639)), 'layer3.14.bn1.bias': ((0, 256), (9138639, 9138895)), 'layer3.14.conv2.weight': ((0, 585890), (9138895, 9724785))}, {'layer3.14.conv2.weight': ((585890, 589824), (0, 3934)), 'layer3.14.bn2.weight': ((0, 256), (3934, 4190)), 'layer3.14.bn2.bias': ((0, 256), (4190, 4446)), 'layer3.14.conv3.weight': ((0, 262144), (4446, 266590)), 'layer3.14.bn3.weight': ((0, 1024), (266590, 267614)), 'layer3.14.bn3.bias': ((0, 1024), (267614, 268638)), 'layer3.15.conv1.weight': ((0, 262144), (268638, 530782)), 'layer3.15.bn1.weight': ((0, 256), (530782, 531038)), 'layer3.15.bn1.bias': ((0, 256), (531038, 531294)), 'layer3.15.conv2.weight': ((0, 589824), (531294, 1121118)), 'layer3.15.bn2.weight': ((0, 256), (1121118, 1121374)), 'layer3.15.bn2.bias': ((0, 256), (1121374, 1121630)), 'layer3.15.conv3.weight': ((0, 262144), (1121630, 1383774)), 'layer3.15.bn3.weight': ((0, 1024), (1383774, 1384798)), 'layer3.15.bn3.bias': ((0, 1024), (1384798, 1385822)), 'layer3.16.conv1.weight': ((0, 262144), (1385822, 1647966)), 'layer3.16.bn1.weight': ((0, 256), (1647966, 1648222)), 'layer3.16.bn1.bias': ((0, 256), (1648222, 1648478)), 'layer3.16.conv2.weight': ((0, 589824), (1648478, 2238302)), 'layer3.16.bn2.weight': ((0, 256), (2238302, 2238558)), 'layer3.16.bn2.bias': ((0, 256), (2238558, 2238814)), 'layer3.16.conv3.weight': ((0, 262144), (2238814, 2500958)), 'layer3.16.bn3.weight': ((0, 1024), (2500958, 2501982)), 'layer3.16.bn3.bias': ((0, 1024), (2501982, 2503006)), 'layer3.17.conv1.weight': ((0, 262144), (2503006, 2765150)), 'layer3.17.bn1.weight': ((0, 256), (2765150, 2765406)), 'layer3.17.bn1.bias': ((0, 256), (2765406, 2765662)), 'layer3.17.conv2.weight': ((0, 589824), (2765662, 3355486)), 'layer3.17.bn2.weight': ((0, 256), (3355486, 3355742)), 'layer3.17.bn2.bias': ((0, 256), (3355742, 3355998)), 'layer3.17.conv3.weight': ((0, 262144), (3355998, 3618142)), 'layer3.17.bn3.weight': ((0, 1024), (3618142, 3619166)), 'layer3.17.bn3.bias': ((0, 1024), (3619166, 3620190)), 'layer3.18.conv1.weight': ((0, 262144), (3620190, 3882334)), 'layer3.18.bn1.weight': ((0, 256), (3882334, 3882590)), 'layer3.18.bn1.bias': ((0, 256), (3882590, 3882846)), 'layer3.18.conv2.weight': ((0, 589824), (3882846, 4472670)), 'layer3.18.bn2.weight': ((0, 256), (4472670, 4472926)), 'layer3.18.bn2.bias': ((0, 256), (4472926, 4473182)), 'layer3.18.conv3.weight': ((0, 262144), (4473182, 4735326)), 'layer3.18.bn3.weight': ((0, 1024), (4735326, 4736350)), 'layer3.18.bn3.bias': ((0, 1024), (4736350, 4737374)), 'layer3.19.conv1.weight': ((0, 262144), (4737374, 4999518)), 'layer3.19.bn1.weight': ((0, 256), (4999518, 4999774)), 'layer3.19.bn1.bias': ((0, 256), (4999774, 5000030)), 'layer3.19.conv2.weight': ((0, 589824), (5000030, 5589854)), 'layer3.19.bn2.weight': ((0, 256), (5589854, 5590110)), 'layer3.19.bn2.bias': ((0, 256), (5590110, 5590366)), 'layer3.19.conv3.weight': ((0, 262144), (5590366, 5852510)), 'layer3.19.bn3.weight': ((0, 1024), (5852510, 5853534)), 'layer3.19.bn3.bias': ((0, 1024), (5853534, 5854558)), 'layer3.20.conv1.weight': ((0, 262144), (5854558, 6116702)), 'layer3.20.bn1.weight': ((0, 256), (6116702, 6116958)), 'layer3.20.bn1.bias': ((0, 256), (6116958, 6117214)), 'layer3.20.conv2.weight': ((0, 589824), (6117214, 6707038)), 'layer3.20.bn2.weight': ((0, 256), (6707038, 6707294)), 'layer3.20.bn2.bias': ((0, 256), (6707294, 6707550)), 'layer3.20.conv3.weight': ((0, 262144), (6707550, 6969694)), 'layer3.20.bn3.weight': ((0, 1024), (6969694, 6970718)), 'layer3.20.bn3.bias': ((0, 1024), (6970718, 6971742)), 'layer3.21.conv1.weight': ((0, 262144), (6971742, 7233886)), 'layer3.21.bn1.weight': ((0, 256), (7233886, 7234142)), 'layer3.21.bn1.bias': ((0, 256), (7234142, 7234398)), 'layer3.21.conv2.weight': ((0, 589824), (7234398, 7824222)), 'layer3.21.bn2.weight': ((0, 256), (7824222, 7824478)), 'layer3.21.bn2.bias': ((0, 256), (7824478, 7824734)), 'layer3.21.conv3.weight': ((0, 262144), (7824734, 8086878)), 'layer3.21.bn3.weight': ((0, 1024), (8086878, 8087902)), 'layer3.21.bn3.bias': ((0, 1024), (8087902, 8088926)), 'layer3.22.conv1.weight': ((0, 262144), (8088926, 8351070)), 'layer3.22.bn1.weight': ((0, 256), (8351070, 8351326)), 'layer3.22.bn1.bias': ((0, 256), (8351326, 8351582)), 'layer3.22.conv2.weight': ((0, 589824), (8351582, 8941406)), 'layer3.22.bn2.weight': ((0, 256), (8941406, 8941662)), 'layer3.22.bn2.bias': ((0, 256), (8941662, 8941918)), 'layer3.22.conv3.weight': ((0, 262144), (8941918, 9204062)), 'layer3.22.bn3.weight': ((0, 1024), (9204062, 9205086)), 'layer3.22.bn3.bias': ((0, 1024), (9205086, 9206110)), 'layer3.23.conv1.weight': ((0, 262144), (9206110, 9468254)), 'layer3.23.bn1.weight': ((0, 256), (9468254, 9468510)), 'layer3.23.bn1.bias': ((0, 256), (9468510, 9468766)), 'layer3.23.conv2.weight': ((0, 256019), (9468766, 9724785))}, {'layer3.23.conv2.weight': ((256019, 589824), (0, 333805)), 'layer3.23.bn2.weight': ((0, 256), (333805, 334061)), 'layer3.23.bn2.bias': ((0, 256), (334061, 334317)), 'layer3.23.conv3.weight': ((0, 262144), (334317, 596461)), 'layer3.23.bn3.weight': ((0, 1024), (596461, 597485)), 'layer3.23.bn3.bias': ((0, 1024), (597485, 598509)), 'layer3.24.conv1.weight': ((0, 262144), (598509, 860653)), 'layer3.24.bn1.weight': ((0, 256), (860653, 860909)), 'layer3.24.bn1.bias': ((0, 256), (860909, 861165)), 'layer3.24.conv2.weight': ((0, 589824), (861165, 1450989)), 'layer3.24.bn2.weight': ((0, 256), (1450989, 1451245)), 'layer3.24.bn2.bias': ((0, 256), (1451245, 1451501)), 'layer3.24.conv3.weight': ((0, 262144), (1451501, 1713645)), 'layer3.24.bn3.weight': ((0, 1024), (1713645, 1714669)), 'layer3.24.bn3.bias': ((0, 1024), (1714669, 1715693)), 'layer3.25.conv1.weight': ((0, 262144), (1715693, 1977837)), 'layer3.25.bn1.weight': ((0, 256), (1977837, 1978093)), 'layer3.25.bn1.bias': ((0, 256), (1978093, 1978349)), 'layer3.25.conv2.weight': ((0, 589824), (1978349, 2568173)), 'layer3.25.bn2.weight': ((0, 256), (2568173, 2568429)), 'layer3.25.bn2.bias': ((0, 256), (2568429, 2568685)), 'layer3.25.conv3.weight': ((0, 262144), (2568685, 2830829)), 'layer3.25.bn3.weight': ((0, 1024), (2830829, 2831853)), 'layer3.25.bn3.bias': ((0, 1024), (2831853, 2832877)), 'layer3.26.conv1.weight': ((0, 262144), (2832877, 3095021)), 'layer3.26.bn1.weight': ((0, 256), (3095021, 3095277)), 'layer3.26.bn1.bias': ((0, 256), (3095277, 3095533)), 'layer3.26.conv2.weight': ((0, 589824), (3095533, 3685357)), 'layer3.26.bn2.weight': ((0, 256), (3685357, 3685613)), 'layer3.26.bn2.bias': ((0, 256), (3685613, 3685869)), 'layer3.26.conv3.weight': ((0, 262144), (3685869, 3948013)), 'layer3.26.bn3.weight': ((0, 1024), (3948013, 3949037)), 'layer3.26.bn3.bias': ((0, 1024), (3949037, 3950061)), 'layer3.27.conv1.weight': ((0, 262144), (3950061, 4212205)), 'layer3.27.bn1.weight': ((0, 256), (4212205, 4212461)), 'layer3.27.bn1.bias': ((0, 256), (4212461, 4212717)), 'layer3.27.conv2.weight': ((0, 589824), (4212717, 4802541)), 'layer3.27.bn2.weight': ((0, 256), (4802541, 4802797)), 'layer3.27.bn2.bias': ((0, 256), (4802797, 4803053)), 'layer3.27.conv3.weight': ((0, 262144), (4803053, 5065197)), 'layer3.27.bn3.weight': ((0, 1024), (5065197, 5066221)), 'layer3.27.bn3.bias': ((0, 1024), (5066221, 5067245)), 'layer3.28.conv1.weight': ((0, 262144), (5067245, 5329389)), 'layer3.28.bn1.weight': ((0, 256), (5329389, 5329645)), 'layer3.28.bn1.bias': ((0, 256), (5329645, 5329901)), 'layer3.28.conv2.weight': ((0, 589824), (5329901, 5919725)), 'layer3.28.bn2.weight': ((0, 256), (5919725, 5919981)), 'layer3.28.bn2.bias': ((0, 256), (5919981, 5920237)), 'layer3.28.conv3.weight': ((0, 262144), (5920237, 6182381)), 'layer3.28.bn3.weight': ((0, 1024), (6182381, 6183405)), 'layer3.28.bn3.bias': ((0, 1024), (6183405, 6184429)), 'layer3.29.conv1.weight': ((0, 262144), (6184429, 6446573)), 'layer3.29.bn1.weight': ((0, 256), (6446573, 6446829)), 'layer3.29.bn1.bias': ((0, 256), (6446829, 6447085)), 'layer3.29.conv2.weight': ((0, 589824), (6447085, 7036909)), 'layer3.29.bn2.weight': ((0, 256), (7036909, 7037165)), 'layer3.29.bn2.bias': ((0, 256), (7037165, 7037421)), 'layer3.29.conv3.weight': ((0, 262144), (7037421, 7299565)), 'layer3.29.bn3.weight': ((0, 1024), (7299565, 7300589)), 'layer3.29.bn3.bias': ((0, 1024), (7300589, 7301613)), 'layer3.30.conv1.weight': ((0, 262144), (7301613, 7563757)), 'layer3.30.bn1.weight': ((0, 256), (7563757, 7564013)), 'layer3.30.bn1.bias': ((0, 256), (7564013, 7564269)), 'layer3.30.conv2.weight': ((0, 589824), (7564269, 8154093)), 'layer3.30.bn2.weight': ((0, 256), (8154093, 8154349)), 'layer3.30.bn2.bias': ((0, 256), (8154349, 8154605)), 'layer3.30.conv3.weight': ((0, 262144), (8154605, 8416749)), 'layer3.30.bn3.weight': ((0, 1024), (8416749, 8417773)), 'layer3.30.bn3.bias': ((0, 1024), (8417773, 8418797)), 'layer3.31.conv1.weight': ((0, 262144), (8418797, 8680941)), 'layer3.31.bn1.weight': ((0, 256), (8680941, 8681197)), 'layer3.31.bn1.bias': ((0, 256), (8681197, 8681453)), 'layer3.31.conv2.weight': ((0, 589824), (8681453, 9271277)), 'layer3.31.bn2.weight': ((0, 256), (9271277, 9271533)), 'layer3.31.bn2.bias': ((0, 256), (9271533, 9271789)), 'layer3.31.conv3.weight': ((0, 262144), (9271789, 9533933)), 'layer3.31.bn3.weight': ((0, 1024), (9533933, 9534957)), 'layer3.31.bn3.bias': ((0, 1024), (9534957, 9535981)), 'layer3.32.conv1.weight': ((0, 188804), (9535981, 9724785))}, {'layer3.32.conv1.weight': ((188804, 262144), (0, 73340)), 'layer3.32.bn1.weight': ((0, 256), (73340, 73596)), 'layer3.32.bn1.bias': ((0, 256), (73596, 73852)), 'layer3.32.conv2.weight': ((0, 589824), (73852, 663676)), 'layer3.32.bn2.weight': ((0, 256), (663676, 663932)), 'layer3.32.bn2.bias': ((0, 256), (663932, 664188)), 'layer3.32.conv3.weight': ((0, 262144), (664188, 926332)), 'layer3.32.bn3.weight': ((0, 1024), (926332, 927356)), 'layer3.32.bn3.bias': ((0, 1024), (927356, 928380)), 'layer3.33.conv1.weight': ((0, 262144), (928380, 1190524)), 'layer3.33.bn1.weight': ((0, 256), (1190524, 1190780)), 'layer3.33.bn1.bias': ((0, 256), (1190780, 1191036)), 'layer3.33.conv2.weight': ((0, 589824), (1191036, 1780860)), 'layer3.33.bn2.weight': ((0, 256), (1780860, 1781116)), 'layer3.33.bn2.bias': ((0, 256), (1781116, 1781372)), 'layer3.33.conv3.weight': ((0, 262144), (1781372, 2043516)), 'layer3.33.bn3.weight': ((0, 1024), (2043516, 2044540)), 'layer3.33.bn3.bias': ((0, 1024), (2044540, 2045564)), 'layer3.34.conv1.weight': ((0, 262144), (2045564, 2307708)), 'layer3.34.bn1.weight': ((0, 256), (2307708, 2307964)), 'layer3.34.bn1.bias': ((0, 256), (2307964, 2308220)), 'layer3.34.conv2.weight': ((0, 589824), (2308220, 2898044)), 'layer3.34.bn2.weight': ((0, 256), (2898044, 2898300)), 'layer3.34.bn2.bias': ((0, 256), (2898300, 2898556)), 'layer3.34.conv3.weight': ((0, 262144), (2898556, 3160700)), 'layer3.34.bn3.weight': ((0, 1024), (3160700, 3161724)), 'layer3.34.bn3.bias': ((0, 1024), (3161724, 3162748)), 'layer3.35.conv1.weight': ((0, 262144), (3162748, 3424892)), 'layer3.35.bn1.weight': ((0, 256), (3424892, 3425148)), 'layer3.35.bn1.bias': ((0, 256), (3425148, 3425404)), 'layer3.35.conv2.weight': ((0, 589824), (3425404, 4015228)), 'layer3.35.bn2.weight': ((0, 256), (4015228, 4015484)), 'layer3.35.bn2.bias': ((0, 256), (4015484, 4015740)), 'layer3.35.conv3.weight': ((0, 262144), (4015740, 4277884)), 'layer3.35.bn3.weight': ((0, 1024), (4277884, 4278908)), 'layer3.35.bn3.bias': ((0, 1024), (4278908, 4279932)), 'layer4.0.conv1.weight': ((0, 524288), (4279932, 4804220)), 'layer4.0.bn1.weight': ((0, 512), (4804220, 4804732)), 'layer4.0.bn1.bias': ((0, 512), (4804732, 4805244)), 'layer4.0.conv2.weight': ((0, 2359296), (4805244, 7164540)), 'layer4.0.bn2.weight': ((0, 512), (7164540, 7165052)), 'layer4.0.bn2.bias': ((0, 512), (7165052, 7165564)), 'layer4.0.conv3.weight': ((0, 1048576), (7165564, 8214140)), 'layer4.0.bn3.weight': ((0, 2048), (8214140, 8216188)), 'layer4.0.bn3.bias': ((0, 2048), (8216188, 8218236)), 'layer4.0.downsample.0.weight': ((0, 1506549), (8218236, 9724785))}, {'layer4.0.downsample.0.weight': ((1506549, 2097152), (0, 590603)), 'layer4.0.downsample.1.weight': ((0, 2048), (590603, 592651)), 'layer4.0.downsample.1.bias': ((0, 2048), (592651, 594699)), 'layer4.1.conv1.weight': ((0, 1048576), (594699, 1643275)), 'layer4.1.bn1.weight': ((0, 512), (1643275, 1643787)), 'layer4.1.bn1.bias': ((0, 512), (1643787, 1644299)), 'layer4.1.conv2.weight': ((0, 2359296), (1644299, 4003595)), 'layer4.1.bn2.weight': ((0, 512), (4003595, 4004107)), 'layer4.1.bn2.bias': ((0, 512), (4004107, 4004619)), 'layer4.1.conv3.weight': ((0, 1048576), (4004619, 5053195)), 'layer4.1.bn3.weight': ((0, 2048), (5053195, 5055243)), 'layer4.1.bn3.bias': ((0, 2048), (5055243, 5057291)), 'layer4.2.conv1.weight': ((0, 1048576), (5057291, 6105867)), 'layer4.2.bn1.weight': ((0, 512), (6105867, 6106379)), 'layer4.2.bn1.bias': ((0, 512), (6106379, 6106891)), 'layer4.2.conv2.weight': ((0, 2359296), (6106891, 8466187)), 'layer4.2.bn2.weight': ((0, 512), (8466187, 8466699)), 'layer4.2.bn2.bias': ((0, 512), (8466699, 8467211)), 'layer4.2.conv3.weight': ((0, 1048576), (8467211, 9515787)), 'layer4.2.bn3.weight': ((0, 2048), (9515787, 9517835)), 'layer4.2.bn3.bias': ((0, 2048), (9517835, 9519883)), 'fc.weight': ((0, 204800), (9519883, 9724683)), 'fc.bias': ((0, 100), (9724683, 9724783))}]
2025-06-08 08:34:32,956 [allreducer.py:656] INFO spar_key_groupidx_maps: {'conv1.weight': [0], 'bn1.weight': [0], 'bn1.bias': [0], 'layer1.0.conv1.weight': [0], 'layer1.0.bn1.weight': [0], 'layer1.0.bn1.bias': [0], 'layer1.0.conv2.weight': [0], 'layer1.0.bn2.weight': [0], 'layer1.0.bn2.bias': [0], 'layer1.0.conv3.weight': [0], 'layer1.0.bn3.weight': [0], 'layer1.0.bn3.bias': [0], 'layer1.0.downsample.0.weight': [0], 'layer1.0.downsample.1.weight': [0], 'layer1.0.downsample.1.bias': [0], 'layer1.1.conv1.weight': [0], 'layer1.1.bn1.weight': [0], 'layer1.1.bn1.bias': [0], 'layer1.1.conv2.weight': [0], 'layer1.1.bn2.weight': [0], 'layer1.1.bn2.bias': [0], 'layer1.1.conv3.weight': [0], 'layer1.1.bn3.weight': [0], 'layer1.1.bn3.bias': [0], 'layer1.2.conv1.weight': [0], 'layer1.2.bn1.weight': [0], 'layer1.2.bn1.bias': [0], 'layer1.2.conv2.weight': [0], 'layer1.2.bn2.weight': [0], 'layer1.2.bn2.bias': [0], 'layer1.2.conv3.weight': [0], 'layer1.2.bn3.weight': [0], 'layer1.2.bn3.bias': [0], 'layer2.0.conv1.weight': [0], 'layer2.0.bn1.weight': [0], 'layer2.0.bn1.bias': [0], 'layer2.0.conv2.weight': [0], 'layer2.0.bn2.weight': [0], 'layer2.0.bn2.bias': [0], 'layer2.0.conv3.weight': [0], 'layer2.0.bn3.weight': [0], 'layer2.0.bn3.bias': [0], 'layer2.0.downsample.0.weight': [0], 'layer2.0.downsample.1.weight': [0], 'layer2.0.downsample.1.bias': [0], 'layer2.1.conv1.weight': [0], 'layer2.1.bn1.weight': [0], 'layer2.1.bn1.bias': [0], 'layer2.1.conv2.weight': [0], 'layer2.1.bn2.weight': [0], 'layer2.1.bn2.bias': [0], 'layer2.1.conv3.weight': [0], 'layer2.1.bn3.weight': [0], 'layer2.1.bn3.bias': [0], 'layer2.2.conv1.weight': [0], 'layer2.2.bn1.weight': [0], 'layer2.2.bn1.bias': [0], 'layer2.2.conv2.weight': [0], 'layer2.2.bn2.weight': [0], 'layer2.2.bn2.bias': [0], 'layer2.2.conv3.weight': [0], 'layer2.2.bn3.weight': [0], 'layer2.2.bn3.bias': [0], 'layer2.3.conv1.weight': [0], 'layer2.3.bn1.weight': [0], 'layer2.3.bn1.bias': [0], 'layer2.3.conv2.weight': [0], 'layer2.3.bn2.weight': [0], 'layer2.3.bn2.bias': [0], 'layer2.3.conv3.weight': [0], 'layer2.3.bn3.weight': [0], 'layer2.3.bn3.bias': [0], 'layer2.4.conv1.weight': [0], 'layer2.4.bn1.weight': [0], 'layer2.4.bn1.bias': [0], 'layer2.4.conv2.weight': [0], 'layer2.4.bn2.weight': [0], 'layer2.4.bn2.bias': [0], 'layer2.4.conv3.weight': [0], 'layer2.4.bn3.weight': [0], 'layer2.4.bn3.bias': [0], 'layer2.5.conv1.weight': [0], 'layer2.5.bn1.weight': [0], 'layer2.5.bn1.bias': [0], 'layer2.5.conv2.weight': [0], 'layer2.5.bn2.weight': [0], 'layer2.5.bn2.bias': [0], 'layer2.5.conv3.weight': [0], 'layer2.5.bn3.weight': [0], 'layer2.5.bn3.bias': [0], 'layer2.6.conv1.weight': [0], 'layer2.6.bn1.weight': [0], 'layer2.6.bn1.bias': [0], 'layer2.6.conv2.weight': [0], 'layer2.6.bn2.weight': [0], 'layer2.6.bn2.bias': [0], 'layer2.6.conv3.weight': [0], 'layer2.6.bn3.weight': [0], 'layer2.6.bn3.bias': [0], 'layer2.7.conv1.weight': [0], 'layer2.7.bn1.weight': [0], 'layer2.7.bn1.bias': [0], 'layer2.7.conv2.weight': [0], 'layer2.7.bn2.weight': [0], 'layer2.7.bn2.bias': [0], 'layer2.7.conv3.weight': [0], 'layer2.7.bn3.weight': [0], 'layer2.7.bn3.bias': [0], 'layer3.0.conv1.weight': [0], 'layer3.0.bn1.weight': [0], 'layer3.0.bn1.bias': [0], 'layer3.0.conv2.weight': [0], 'layer3.0.bn2.weight': [0], 'layer3.0.bn2.bias': [0], 'layer3.0.conv3.weight': [0], 'layer3.0.bn3.weight': [0], 'layer3.0.bn3.bias': [0], 'layer3.0.downsample.0.weight': [0], 'layer3.0.downsample.1.weight': [0], 'layer3.0.downsample.1.bias': [0], 'layer3.1.conv1.weight': [0], 'layer3.1.bn1.weight': [0], 'layer3.1.bn1.bias': [0], 'layer3.1.conv2.weight': [0], 'layer3.1.bn2.weight': [0], 'layer3.1.bn2.bias': [0], 'layer3.1.conv3.weight': [0], 'layer3.1.bn3.weight': [0], 'layer3.1.bn3.bias': [0], 'layer3.2.conv1.weight': [0], 'layer3.2.bn1.weight': [0], 'layer3.2.bn1.bias': [0], 'layer3.2.conv2.weight': [0], 'layer3.2.bn2.weight': [0], 'layer3.2.bn2.bias': [0], 'layer3.2.conv3.weight': [0], 'layer3.2.bn3.weight': [0], 'layer3.2.bn3.bias': [0], 'layer3.3.conv1.weight': [0], 'layer3.3.bn1.weight': [0], 'layer3.3.bn1.bias': [0], 'layer3.3.conv2.weight': [0], 'layer3.3.bn2.weight': [0], 'layer3.3.bn2.bias': [0], 'layer3.3.conv3.weight': [0], 'layer3.3.bn3.weight': [0], 'layer3.3.bn3.bias': [0], 'layer3.4.conv1.weight': [0], 'layer3.4.bn1.weight': [0], 'layer3.4.bn1.bias': [0], 'layer3.4.conv2.weight': [0], 'layer3.4.bn2.weight': [0], 'layer3.4.bn2.bias': [0], 'layer3.4.conv3.weight': [0], 'layer3.4.bn3.weight': [0], 'layer3.4.bn3.bias': [0], 'layer3.5.conv1.weight': [0], 'layer3.5.bn1.weight': [0], 'layer3.5.bn1.bias': [0], 'layer3.5.conv2.weight': [0], 'layer3.5.bn2.weight': [0], 'layer3.5.bn2.bias': [0], 'layer3.5.conv3.weight': [0], 'layer3.5.bn3.weight': [0], 'layer3.5.bn3.bias': [0], 'layer3.6.conv1.weight': [0, 1], 'layer3.6.bn1.weight': [1], 'layer3.6.bn1.bias': [1], 'layer3.6.conv2.weight': [1], 'layer3.6.bn2.weight': [1], 'layer3.6.bn2.bias': [1], 'layer3.6.conv3.weight': [1], 'layer3.6.bn3.weight': [1], 'layer3.6.bn3.bias': [1], 'layer3.7.conv1.weight': [1], 'layer3.7.bn1.weight': [1], 'layer3.7.bn1.bias': [1], 'layer3.7.conv2.weight': [1], 'layer3.7.bn2.weight': [1], 'layer3.7.bn2.bias': [1], 'layer3.7.conv3.weight': [1], 'layer3.7.bn3.weight': [1], 'layer3.7.bn3.bias': [1], 'layer3.8.conv1.weight': [1], 'layer3.8.bn1.weight': [1], 'layer3.8.bn1.bias': [1], 'layer3.8.conv2.weight': [1], 'layer3.8.bn2.weight': [1], 'layer3.8.bn2.bias': [1], 'layer3.8.conv3.weight': [1], 'layer3.8.bn3.weight': [1], 'layer3.8.bn3.bias': [1], 'layer3.9.conv1.weight': [1], 'layer3.9.bn1.weight': [1], 'layer3.9.bn1.bias': [1], 'layer3.9.conv2.weight': [1], 'layer3.9.bn2.weight': [1], 'layer3.9.bn2.bias': [1], 'layer3.9.conv3.weight': [1], 'layer3.9.bn3.weight': [1], 'layer3.9.bn3.bias': [1], 'layer3.10.conv1.weight': [1], 'layer3.10.bn1.weight': [1], 'layer3.10.bn1.bias': [1], 'layer3.10.conv2.weight': [1], 'layer3.10.bn2.weight': [1], 'layer3.10.bn2.bias': [1], 'layer3.10.conv3.weight': [1], 'layer3.10.bn3.weight': [1], 'layer3.10.bn3.bias': [1], 'layer3.11.conv1.weight': [1], 'layer3.11.bn1.weight': [1], 'layer3.11.bn1.bias': [1], 'layer3.11.conv2.weight': [1], 'layer3.11.bn2.weight': [1], 'layer3.11.bn2.bias': [1], 'layer3.11.conv3.weight': [1], 'layer3.11.bn3.weight': [1], 'layer3.11.bn3.bias': [1], 'layer3.12.conv1.weight': [1], 'layer3.12.bn1.weight': [1], 'layer3.12.bn1.bias': [1], 'layer3.12.conv2.weight': [1], 'layer3.12.bn2.weight': [1], 'layer3.12.bn2.bias': [1], 'layer3.12.conv3.weight': [1], 'layer3.12.bn3.weight': [1], 'layer3.12.bn3.bias': [1], 'layer3.13.conv1.weight': [1], 'layer3.13.bn1.weight': [1], 'layer3.13.bn1.bias': [1], 'layer3.13.conv2.weight': [1], 'layer3.13.bn2.weight': [1], 'layer3.13.bn2.bias': [1], 'layer3.13.conv3.weight': [1], 'layer3.13.bn3.weight': [1], 'layer3.13.bn3.bias': [1], 'layer3.14.conv1.weight': [1], 'layer3.14.bn1.weight': [1], 'layer3.14.bn1.bias': [1], 'layer3.14.conv2.weight': [1, 2], 'layer3.14.bn2.weight': [2], 'layer3.14.bn2.bias': [2], 'layer3.14.conv3.weight': [2], 'layer3.14.bn3.weight': [2], 'layer3.14.bn3.bias': [2], 'layer3.15.conv1.weight': [2], 'layer3.15.bn1.weight': [2], 'layer3.15.bn1.bias': [2], 'layer3.15.conv2.weight': [2], 'layer3.15.bn2.weight': [2], 'layer3.15.bn2.bias': [2], 'layer3.15.conv3.weight': [2], 'layer3.15.bn3.weight': [2], 'layer3.15.bn3.bias': [2], 'layer3.16.conv1.weight': [2], 'layer3.16.bn1.weight': [2], 'layer3.16.bn1.bias': [2], 'layer3.16.conv2.weight': [2], 'layer3.16.bn2.weight': [2], 'layer3.16.bn2.bias': [2], 'layer3.16.conv3.weight': [2], 'layer3.16.bn3.weight': [2], 'layer3.16.bn3.bias': [2], 'layer3.17.conv1.weight': [2], 'layer3.17.bn1.weight': [2], 'layer3.17.bn1.bias': [2], 'layer3.17.conv2.weight': [2], 'layer3.17.bn2.weight': [2], 'layer3.17.bn2.bias': [2], 'layer3.17.conv3.weight': [2], 'layer3.17.bn3.weight': [2], 'layer3.17.bn3.bias': [2], 'layer3.18.conv1.weight': [2], 'layer3.18.bn1.weight': [2], 'layer3.18.bn1.bias': [2], 'layer3.18.conv2.weight': [2], 'layer3.18.bn2.weight': [2], 'layer3.18.bn2.bias': [2], 'layer3.18.conv3.weight': [2], 'layer3.18.bn3.weight': [2], 'layer3.18.bn3.bias': [2], 'layer3.19.conv1.weight': [2], 'layer3.19.bn1.weight': [2], 'layer3.19.bn1.bias': [2], 'layer3.19.conv2.weight': [2], 'layer3.19.bn2.weight': [2], 'layer3.19.bn2.bias': [2], 'layer3.19.conv3.weight': [2], 'layer3.19.bn3.weight': [2], 'layer3.19.bn3.bias': [2], 'layer3.20.conv1.weight': [2], 'layer3.20.bn1.weight': [2], 'layer3.20.bn1.bias': [2], 'layer3.20.conv2.weight': [2], 'layer3.20.bn2.weight': [2], 'layer3.20.bn2.bias': [2], 'layer3.20.conv3.weight': [2], 'layer3.20.bn3.weight': [2], 'layer3.20.bn3.bias': [2], 'layer3.21.conv1.weight': [2], 'layer3.21.bn1.weight': [2], 'layer3.21.bn1.bias': [2], 'layer3.21.conv2.weight': [2], 'layer3.21.bn2.weight': [2], 'layer3.21.bn2.bias': [2], 'layer3.21.conv3.weight': [2], 'layer3.21.bn3.weight': [2], 'layer3.21.bn3.bias': [2], 'layer3.22.conv1.weight': [2], 'layer3.22.bn1.weight': [2], 'layer3.22.bn1.bias': [2], 'layer3.22.conv2.weight': [2], 'layer3.22.bn2.weight': [2], 'layer3.22.bn2.bias': [2], 'layer3.22.conv3.weight': [2], 'layer3.22.bn3.weight': [2], 'layer3.22.bn3.bias': [2], 'layer3.23.conv1.weight': [2], 'layer3.23.bn1.weight': [2], 'layer3.23.bn1.bias': [2], 'layer3.23.conv2.weight': [2, 3], 'layer3.23.bn2.weight': [3], 'layer3.23.bn2.bias': [3], 'layer3.23.conv3.weight': [3], 'layer3.23.bn3.weight': [3], 'layer3.23.bn3.bias': [3], 'layer3.24.conv1.weight': [3], 'layer3.24.bn1.weight': [3], 'layer3.24.bn1.bias': [3], 'layer3.24.conv2.weight': [3], 'layer3.24.bn2.weight': [3], 'layer3.24.bn2.bias': [3], 'layer3.24.conv3.weight': [3], 'layer3.24.bn3.weight': [3], 'layer3.24.bn3.bias': [3], 'layer3.25.conv1.weight': [3], 'layer3.25.bn1.weight': [3], 'layer3.25.bn1.bias': [3], 'layer3.25.conv2.weight': [3], 'layer3.25.bn2.weight': [3], 'layer3.25.bn2.bias': [3], 'layer3.25.conv3.weight': [3], 'layer3.25.bn3.weight': [3], 'layer3.25.bn3.bias': [3], 'layer3.26.conv1.weight': [3], 'layer3.26.bn1.weight': [3], 'layer3.26.bn1.bias': [3], 'layer3.26.conv2.weight': [3], 'layer3.26.bn2.weight': [3], 'layer3.26.bn2.bias': [3], 'layer3.26.conv3.weight': [3], 'layer3.26.bn3.weight': [3], 'layer3.26.bn3.bias': [3], 'layer3.27.conv1.weight': [3], 'layer3.27.bn1.weight': [3], 'layer3.27.bn1.bias': [3], 'layer3.27.conv2.weight': [3], 'layer3.27.bn2.weight': [3], 'layer3.27.bn2.bias': [3], 'layer3.27.conv3.weight': [3], 'layer3.27.bn3.weight': [3], 'layer3.27.bn3.bias': [3], 'layer3.28.conv1.weight': [3], 'layer3.28.bn1.weight': [3], 'layer3.28.bn1.bias': [3], 'layer3.28.conv2.weight': [3], 'layer3.28.bn2.weight': [3], 'layer3.28.bn2.bias': [3], 'layer3.28.conv3.weight': [3], 'layer3.28.bn3.weight': [3], 'layer3.28.bn3.bias': [3], 'layer3.29.conv1.weight': [3], 'layer3.29.bn1.weight': [3], 'layer3.29.bn1.bias': [3], 'layer3.29.conv2.weight': [3], 'layer3.29.bn2.weight': [3], 'layer3.29.bn2.bias': [3], 'layer3.29.conv3.weight': [3], 'layer3.29.bn3.weight': [3], 'layer3.29.bn3.bias': [3], 'layer3.30.conv1.weight': [3], 'layer3.30.bn1.weight': [3], 'layer3.30.bn1.bias': [3], 'layer3.30.conv2.weight': [3], 'layer3.30.bn2.weight': [3], 'layer3.30.bn2.bias': [3], 'layer3.30.conv3.weight': [3], 'layer3.30.bn3.weight': [3], 'layer3.30.bn3.bias': [3], 'layer3.31.conv1.weight': [3], 'layer3.31.bn1.weight': [3], 'layer3.31.bn1.bias': [3], 'layer3.31.conv2.weight': [3], 'layer3.31.bn2.weight': [3], 'layer3.31.bn2.bias': [3], 'layer3.31.conv3.weight': [3], 'layer3.31.bn3.weight': [3], 'layer3.31.bn3.bias': [3], 'layer3.32.conv1.weight': [3, 4], 'layer3.32.bn1.weight': [4], 'layer3.32.bn1.bias': [4], 'layer3.32.conv2.weight': [4], 'layer3.32.bn2.weight': [4], 'layer3.32.bn2.bias': [4], 'layer3.32.conv3.weight': [4], 'layer3.32.bn3.weight': [4], 'layer3.32.bn3.bias': [4], 'layer3.33.conv1.weight': [4], 'layer3.33.bn1.weight': [4], 'layer3.33.bn1.bias': [4], 'layer3.33.conv2.weight': [4], 'layer3.33.bn2.weight': [4], 'layer3.33.bn2.bias': [4], 'layer3.33.conv3.weight': [4], 'layer3.33.bn3.weight': [4], 'layer3.33.bn3.bias': [4], 'layer3.34.conv1.weight': [4], 'layer3.34.bn1.weight': [4], 'layer3.34.bn1.bias': [4], 'layer3.34.conv2.weight': [4], 'layer3.34.bn2.weight': [4], 'layer3.34.bn2.bias': [4], 'layer3.34.conv3.weight': [4], 'layer3.34.bn3.weight': [4], 'layer3.34.bn3.bias': [4], 'layer3.35.conv1.weight': [4], 'layer3.35.bn1.weight': [4], 'layer3.35.bn1.bias': [4], 'layer3.35.conv2.weight': [4], 'layer3.35.bn2.weight': [4], 'layer3.35.bn2.bias': [4], 'layer3.35.conv3.weight': [4], 'layer3.35.bn3.weight': [4], 'layer3.35.bn3.bias': [4], 'layer4.0.conv1.weight': [4], 'layer4.0.bn1.weight': [4], 'layer4.0.bn1.bias': [4], 'layer4.0.conv2.weight': [4], 'layer4.0.bn2.weight': [4], 'layer4.0.bn2.bias': [4], 'layer4.0.conv3.weight': [4], 'layer4.0.bn3.weight': [4], 'layer4.0.bn3.bias': [4], 'layer4.0.downsample.0.weight': [4, 5], 'layer4.0.downsample.1.weight': [5], 'layer4.0.downsample.1.bias': [5], 'layer4.1.conv1.weight': [5], 'layer4.1.bn1.weight': [5], 'layer4.1.bn1.bias': [5], 'layer4.1.conv2.weight': [5], 'layer4.1.bn2.weight': [5], 'layer4.1.bn2.bias': [5], 'layer4.1.conv3.weight': [5], 'layer4.1.bn3.weight': [5], 'layer4.1.bn3.bias': [5], 'layer4.2.conv1.weight': [5], 'layer4.2.bn1.weight': [5], 'layer4.2.bn1.bias': [5], 'layer4.2.conv2.weight': [5], 'layer4.2.bn2.weight': [5], 'layer4.2.bn2.bias': [5], 'layer4.2.conv3.weight': [5], 'layer4.2.bn3.weight': [5], 'layer4.2.bn3.bias': [5], 'fc.weight': [5], 'fc.bias': [5]}
2025-06-08 08:34:32,962 [allreducer.py:972] INFO Allreducer thread started ...
2025-06-08 08:34:32,962 [main_trainer.py:130] INFO Start training ....
2025-06-08 08:37:35,884 [main_trainer.py:297] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-08 08:37:35,884 [main_trainer.py:298] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-08 08:37:41,451 [dl_trainer.py:292] INFO target_sparsities: [1.0]
2025-06-08 08:37:41,452 [dl_trainer.py:302] INFO num_batches_per_epoch: 520
2025-06-08 08:37:41,452 [main_trainer.py:88] INFO Broadcast parameters....
2025-06-08 08:37:42,600 [main_trainer.py:107] INFO Broadcast parameters finished....
2025-06-08 08:37:42,655 [allreducer.py:282] INFO density: 0.010000
2025-06-08 08:37:42,656 [allreducer.py:283] INFO threshold scale: 1.092000
2025-06-08 08:37:42,657 [allreducer.py:671] INFO groups: [['fc.bias', 'fc.weight', 'layer4.2.bn3.bias', 'layer4.2.bn3.weight', 'layer4.2.conv3.weight', 'layer4.2.bn2.bias', 'layer4.2.bn2.weight', 'layer4.2.conv2.weight', 'layer4.2.bn1.bias', 'layer4.2.bn1.weight', 'layer4.2.conv1.weight', 'layer4.1.bn3.bias', 'layer4.1.bn3.weight', 'layer4.1.conv3.weight', 'layer4.1.bn2.bias', 'layer4.1.bn2.weight', 'layer4.1.conv2.weight', 'layer4.1.bn1.bias', 'layer4.1.bn1.weight', 'layer4.1.conv1.weight', 'layer4.0.downsample.1.bias', 'layer4.0.downsample.1.weight', 'layer4.0.downsample.0.weight', 'layer4.0.bn3.bias', 'layer4.0.bn3.weight', 'layer4.0.conv3.weight', 'layer4.0.bn2.bias', 'layer4.0.bn2.weight', 'layer4.0.conv2.weight', 'layer4.0.bn1.bias', 'layer4.0.bn1.weight', 'layer4.0.conv1.weight', 'layer3.35.bn3.bias', 'layer3.35.bn3.weight', 'layer3.35.conv3.weight', 'layer3.35.bn2.bias', 'layer3.35.bn2.weight', 'layer3.35.conv2.weight', 'layer3.35.bn1.bias', 'layer3.35.bn1.weight', 'layer3.35.conv1.weight', 'layer3.34.bn3.bias', 'layer3.34.bn3.weight', 'layer3.34.conv3.weight', 'layer3.34.bn2.bias', 'layer3.34.bn2.weight', 'layer3.34.conv2.weight', 'layer3.34.bn1.bias', 'layer3.34.bn1.weight', 'layer3.34.conv1.weight', 'layer3.33.bn3.bias', 'layer3.33.bn3.weight', 'layer3.33.conv3.weight', 'layer3.33.bn2.bias', 'layer3.33.bn2.weight', 'layer3.33.conv2.weight', 'layer3.33.bn1.bias', 'layer3.33.bn1.weight', 'layer3.33.conv1.weight', 'layer3.32.bn3.bias', 'layer3.32.bn3.weight', 'layer3.32.conv3.weight', 'layer3.32.bn2.bias', 'layer3.32.bn2.weight', 'layer3.32.conv2.weight', 'layer3.32.bn1.bias', 'layer3.32.bn1.weight', 'layer3.32.conv1.weight', 'layer3.31.bn3.bias', 'layer3.31.bn3.weight', 'layer3.31.conv3.weight', 'layer3.31.bn2.bias', 'layer3.31.bn2.weight', 'layer3.31.conv2.weight', 'layer3.31.bn1.bias', 'layer3.31.bn1.weight', 'layer3.31.conv1.weight', 'layer3.30.bn3.bias', 'layer3.30.bn3.weight', 'layer3.30.conv3.weight', 'layer3.30.bn2.bias', 'layer3.30.bn2.weight', 'layer3.30.conv2.weight', 'layer3.30.bn1.bias', 'layer3.30.bn1.weight', 'layer3.30.conv1.weight', 'layer3.29.bn3.bias', 'layer3.29.bn3.weight', 'layer3.29.conv3.weight', 'layer3.29.bn2.bias', 'layer3.29.bn2.weight', 'layer3.29.conv2.weight', 'layer3.29.bn1.bias', 'layer3.29.bn1.weight', 'layer3.29.conv1.weight', 'layer3.28.bn3.bias', 'layer3.28.bn3.weight', 'layer3.28.conv3.weight', 'layer3.28.bn2.bias', 'layer3.28.bn2.weight', 'layer3.28.conv2.weight', 'layer3.28.bn1.bias', 'layer3.28.bn1.weight', 'layer3.28.conv1.weight', 'layer3.27.bn3.bias', 'layer3.27.bn3.weight', 'layer3.27.conv3.weight', 'layer3.27.bn2.bias', 'layer3.27.bn2.weight', 'layer3.27.conv2.weight', 'layer3.27.bn1.bias', 'layer3.27.bn1.weight', 'layer3.27.conv1.weight', 'layer3.26.bn3.bias', 'layer3.26.bn3.weight', 'layer3.26.conv3.weight', 'layer3.26.bn2.bias', 'layer3.26.bn2.weight', 'layer3.26.conv2.weight', 'layer3.26.bn1.bias', 'layer3.26.bn1.weight', 'layer3.26.conv1.weight', 'layer3.25.bn3.bias', 'layer3.25.bn3.weight', 'layer3.25.conv3.weight', 'layer3.25.bn2.bias', 'layer3.25.bn2.weight', 'layer3.25.conv2.weight', 'layer3.25.bn1.bias', 'layer3.25.bn1.weight', 'layer3.25.conv1.weight', 'layer3.24.bn3.bias', 'layer3.24.bn3.weight', 'layer3.24.conv3.weight', 'layer3.24.bn2.bias', 'layer3.24.bn2.weight', 'layer3.24.conv2.weight', 'layer3.24.bn1.bias', 'layer3.24.bn1.weight', 'layer3.24.conv1.weight', 'layer3.23.bn3.bias', 'layer3.23.bn3.weight', 'layer3.23.conv3.weight', 'layer3.23.bn2.bias', 'layer3.23.bn2.weight', 'layer3.23.conv2.weight', 'layer3.23.bn1.bias', 'layer3.23.bn1.weight', 'layer3.23.conv1.weight', 'layer3.22.bn3.bias', 'layer3.22.bn3.weight', 'layer3.22.conv3.weight', 'layer3.22.bn2.bias', 'layer3.22.bn2.weight', 'layer3.22.conv2.weight', 'layer3.22.bn1.bias', 'layer3.22.bn1.weight', 'layer3.22.conv1.weight', 'layer3.21.bn3.bias', 'layer3.21.bn3.weight', 'layer3.21.conv3.weight', 'layer3.21.bn2.bias', 'layer3.21.bn2.weight', 'layer3.21.conv2.weight', 'layer3.21.bn1.bias', 'layer3.21.bn1.weight', 'layer3.21.conv1.weight', 'layer3.20.bn3.bias', 'layer3.20.bn3.weight', 'layer3.20.conv3.weight', 'layer3.20.bn2.bias', 'layer3.20.bn2.weight', 'layer3.20.conv2.weight', 'layer3.20.bn1.bias', 'layer3.20.bn1.weight', 'layer3.20.conv1.weight', 'layer3.19.bn3.bias', 'layer3.19.bn3.weight', 'layer3.19.conv3.weight', 'layer3.19.bn2.bias', 'layer3.19.bn2.weight', 'layer3.19.conv2.weight', 'layer3.19.bn1.bias', 'layer3.19.bn1.weight', 'layer3.19.conv1.weight', 'layer3.18.bn3.bias', 'layer3.18.bn3.weight', 'layer3.18.conv3.weight', 'layer3.18.bn2.bias', 'layer3.18.bn2.weight', 'layer3.18.conv2.weight', 'layer3.18.bn1.bias', 'layer3.18.bn1.weight', 'layer3.18.conv1.weight', 'layer3.17.bn3.bias', 'layer3.17.bn3.weight', 'layer3.17.conv3.weight', 'layer3.17.bn2.bias', 'layer3.17.bn2.weight', 'layer3.17.conv2.weight', 'layer3.17.bn1.bias', 'layer3.17.bn1.weight', 'layer3.17.conv1.weight', 'layer3.16.bn3.bias', 'layer3.16.bn3.weight', 'layer3.16.conv3.weight', 'layer3.16.bn2.bias', 'layer3.16.bn2.weight', 'layer3.16.conv2.weight', 'layer3.16.bn1.bias', 'layer3.16.bn1.weight', 'layer3.16.conv1.weight', 'layer3.15.bn3.bias', 'layer3.15.bn3.weight', 'layer3.15.conv3.weight', 'layer3.15.bn2.bias', 'layer3.15.bn2.weight', 'layer3.15.conv2.weight', 'layer3.15.bn1.bias', 'layer3.15.bn1.weight', 'layer3.15.conv1.weight', 'layer3.14.bn3.bias', 'layer3.14.bn3.weight', 'layer3.14.conv3.weight', 'layer3.14.bn2.bias', 'layer3.14.bn2.weight', 'layer3.14.conv2.weight', 'layer3.14.bn1.bias', 'layer3.14.bn1.weight', 'layer3.14.conv1.weight', 'layer3.13.bn3.bias', 'layer3.13.bn3.weight', 'layer3.13.conv3.weight', 'layer3.13.bn2.bias', 'layer3.13.bn2.weight', 'layer3.13.conv2.weight', 'layer3.13.bn1.bias', 'layer3.13.bn1.weight', 'layer3.13.conv1.weight', 'layer3.12.bn3.bias', 'layer3.12.bn3.weight', 'layer3.12.conv3.weight', 'layer3.12.bn2.bias', 'layer3.12.bn2.weight', 'layer3.12.conv2.weight', 'layer3.12.bn1.bias', 'layer3.12.bn1.weight', 'layer3.12.conv1.weight', 'layer3.11.bn3.bias', 'layer3.11.bn3.weight', 'layer3.11.conv3.weight', 'layer3.11.bn2.bias', 'layer3.11.bn2.weight', 'layer3.11.conv2.weight', 'layer3.11.bn1.bias', 'layer3.11.bn1.weight', 'layer3.11.conv1.weight', 'layer3.10.bn3.bias', 'layer3.10.bn3.weight', 'layer3.10.conv3.weight', 'layer3.10.bn2.bias', 'layer3.10.bn2.weight', 'layer3.10.conv2.weight', 'layer3.10.bn1.bias', 'layer3.10.bn1.weight', 'layer3.10.conv1.weight', 'layer3.9.bn3.bias', 'layer3.9.bn3.weight', 'layer3.9.conv3.weight', 'layer3.9.bn2.bias', 'layer3.9.bn2.weight', 'layer3.9.conv2.weight', 'layer3.9.bn1.bias', 'layer3.9.bn1.weight', 'layer3.9.conv1.weight', 'layer3.8.bn3.bias', 'layer3.8.bn3.weight', 'layer3.8.conv3.weight', 'layer3.8.bn2.bias', 'layer3.8.bn2.weight', 'layer3.8.conv2.weight', 'layer3.8.bn1.bias', 'layer3.8.bn1.weight', 'layer3.8.conv1.weight', 'layer3.7.bn3.bias', 'layer3.7.bn3.weight', 'layer3.7.conv3.weight', 'layer3.7.bn2.bias', 'layer3.7.bn2.weight', 'layer3.7.conv2.weight', 'layer3.7.bn1.bias', 'layer3.7.bn1.weight', 'layer3.7.conv1.weight', 'layer3.6.bn3.bias', 'layer3.6.bn3.weight', 'layer3.6.conv3.weight', 'layer3.6.bn2.bias', 'layer3.6.bn2.weight', 'layer3.6.conv2.weight', 'layer3.6.bn1.bias', 'layer3.6.bn1.weight', 'layer3.6.conv1.weight', 'layer3.5.bn3.bias', 'layer3.5.bn3.weight', 'layer3.5.conv3.weight', 'layer3.5.bn2.bias', 'layer3.5.bn2.weight', 'layer3.5.conv2.weight', 'layer3.5.bn1.bias', 'layer3.5.bn1.weight', 'layer3.5.conv1.weight', 'layer3.4.bn3.bias', 'layer3.4.bn3.weight', 'layer3.4.conv3.weight', 'layer3.4.bn2.bias', 'layer3.4.bn2.weight', 'layer3.4.conv2.weight', 'layer3.4.bn1.bias', 'layer3.4.bn1.weight', 'layer3.4.conv1.weight', 'layer3.3.bn3.bias', 'layer3.3.bn3.weight', 'layer3.3.conv3.weight', 'layer3.3.bn2.bias', 'layer3.3.bn2.weight', 'layer3.3.conv2.weight', 'layer3.3.bn1.bias', 'layer3.3.bn1.weight', 'layer3.3.conv1.weight', 'layer3.2.bn3.bias', 'layer3.2.bn3.weight', 'layer3.2.conv3.weight', 'layer3.2.bn2.bias', 'layer3.2.bn2.weight', 'layer3.2.conv2.weight', 'layer3.2.bn1.bias', 'layer3.2.bn1.weight', 'layer3.2.conv1.weight', 'layer3.1.bn3.bias', 'layer3.1.bn3.weight', 'layer3.1.conv3.weight', 'layer3.1.bn2.bias', 'layer3.1.bn2.weight', 'layer3.1.conv2.weight', 'layer3.1.bn1.bias', 'layer3.1.bn1.weight', 'layer3.1.conv1.weight', 'layer3.0.downsample.1.bias', 'layer3.0.downsample.1.weight', 'layer3.0.downsample.0.weight', 'layer3.0.bn3.bias', 'layer3.0.bn3.weight', 'layer3.0.conv3.weight', 'layer3.0.bn2.bias', 'layer3.0.bn2.weight', 'layer3.0.conv2.weight', 'layer3.0.bn1.bias', 'layer3.0.bn1.weight', 'layer3.0.conv1.weight', 'layer2.7.bn3.bias', 'layer2.7.bn3.weight', 'layer2.7.conv3.weight', 'layer2.7.bn2.bias', 'layer2.7.bn2.weight', 'layer2.7.conv2.weight', 'layer2.7.bn1.bias', 'layer2.7.bn1.weight', 'layer2.7.conv1.weight', 'layer2.6.bn3.bias', 'layer2.6.bn3.weight', 'layer2.6.conv3.weight', 'layer2.6.bn2.bias', 'layer2.6.bn2.weight', 'layer2.6.conv2.weight', 'layer2.6.bn1.bias', 'layer2.6.bn1.weight', 'layer2.6.conv1.weight', 'layer2.5.bn3.bias', 'layer2.5.bn3.weight', 'layer2.5.conv3.weight', 'layer2.5.bn2.bias', 'layer2.5.bn2.weight', 'layer2.5.conv2.weight', 'layer2.5.bn1.bias', 'layer2.5.bn1.weight', 'layer2.5.conv1.weight', 'layer2.4.bn3.bias', 'layer2.4.bn3.weight', 'layer2.4.conv3.weight', 'layer2.4.bn2.bias', 'layer2.4.bn2.weight', 'layer2.4.conv2.weight', 'layer2.4.bn1.bias', 'layer2.4.bn1.weight', 'layer2.4.conv1.weight', 'layer2.3.bn3.bias', 'layer2.3.bn3.weight', 'layer2.3.conv3.weight', 'layer2.3.bn2.bias', 'layer2.3.bn2.weight', 'layer2.3.conv2.weight', 'layer2.3.bn1.bias', 'layer2.3.bn1.weight', 'layer2.3.conv1.weight', 'layer2.2.bn3.bias', 'layer2.2.bn3.weight', 'layer2.2.conv3.weight', 'layer2.2.bn2.bias', 'layer2.2.bn2.weight', 'layer2.2.conv2.weight', 'layer2.2.bn1.bias', 'layer2.2.bn1.weight', 'layer2.2.conv1.weight', 'layer2.1.bn3.bias', 'layer2.1.bn3.weight', 'layer2.1.conv3.weight', 'layer2.1.bn2.bias', 'layer2.1.bn2.weight', 'layer2.1.conv2.weight', 'layer2.1.bn1.bias', 'layer2.1.bn1.weight', 'layer2.1.conv1.weight', 'layer2.0.downsample.1.bias', 'layer2.0.downsample.1.weight', 'layer2.0.downsample.0.weight', 'layer2.0.bn3.bias', 'layer2.0.bn3.weight', 'layer2.0.conv3.weight', 'layer2.0.bn2.bias', 'layer2.0.bn2.weight', 'layer2.0.conv2.weight', 'layer2.0.bn1.bias', 'layer2.0.bn1.weight', 'layer2.0.conv1.weight', 'layer1.2.bn3.bias', 'layer1.2.bn3.weight', 'layer1.2.conv3.weight', 'layer1.2.bn2.bias', 'layer1.2.bn2.weight', 'layer1.2.conv2.weight', 'layer1.2.bn1.bias', 'layer1.2.bn1.weight', 'layer1.2.conv1.weight', 'layer1.1.bn3.bias', 'layer1.1.bn3.weight', 'layer1.1.conv3.weight', 'layer1.1.bn2.bias', 'layer1.1.bn2.weight', 'layer1.1.conv2.weight', 'layer1.1.bn1.bias', 'layer1.1.bn1.weight', 'layer1.1.conv1.weight', 'layer1.0.downsample.1.bias', 'layer1.0.downsample.1.weight', 'layer1.0.downsample.0.weight', 'layer1.0.bn3.bias', 'layer1.0.bn3.weight', 'layer1.0.conv3.weight', 'layer1.0.bn2.bias', 'layer1.0.bn2.weight', 'layer1.0.conv2.weight', 'layer1.0.bn1.bias', 'layer1.0.bn1.weight', 'layer1.0.conv1.weight', 'bn1.bias', 'bn1.weight', 'conv1.weight']]
2025-06-08 08:37:42,658 [allreducer.py:672] INFO key_groupidx_maps: {'fc.bias': 0, 'fc.weight': 0, 'layer4.2.bn3.bias': 0, 'layer4.2.bn3.weight': 0, 'layer4.2.conv3.weight': 0, 'layer4.2.bn2.bias': 0, 'layer4.2.bn2.weight': 0, 'layer4.2.conv2.weight': 0, 'layer4.2.bn1.bias': 0, 'layer4.2.bn1.weight': 0, 'layer4.2.conv1.weight': 0, 'layer4.1.bn3.bias': 0, 'layer4.1.bn3.weight': 0, 'layer4.1.conv3.weight': 0, 'layer4.1.bn2.bias': 0, 'layer4.1.bn2.weight': 0, 'layer4.1.conv2.weight': 0, 'layer4.1.bn1.bias': 0, 'layer4.1.bn1.weight': 0, 'layer4.1.conv1.weight': 0, 'layer4.0.downsample.1.bias': 0, 'layer4.0.downsample.1.weight': 0, 'layer4.0.downsample.0.weight': 0, 'layer4.0.bn3.bias': 0, 'layer4.0.bn3.weight': 0, 'layer4.0.conv3.weight': 0, 'layer4.0.bn2.bias': 0, 'layer4.0.bn2.weight': 0, 'layer4.0.conv2.weight': 0, 'layer4.0.bn1.bias': 0, 'layer4.0.bn1.weight': 0, 'layer4.0.conv1.weight': 0, 'layer3.35.bn3.bias': 0, 'layer3.35.bn3.weight': 0, 'layer3.35.conv3.weight': 0, 'layer3.35.bn2.bias': 0, 'layer3.35.bn2.weight': 0, 'layer3.35.conv2.weight': 0, 'layer3.35.bn1.bias': 0, 'layer3.35.bn1.weight': 0, 'layer3.35.conv1.weight': 0, 'layer3.34.bn3.bias': 0, 'layer3.34.bn3.weight': 0, 'layer3.34.conv3.weight': 0, 'layer3.34.bn2.bias': 0, 'layer3.34.bn2.weight': 0, 'layer3.34.conv2.weight': 0, 'layer3.34.bn1.bias': 0, 'layer3.34.bn1.weight': 0, 'layer3.34.conv1.weight': 0, 'layer3.33.bn3.bias': 0, 'layer3.33.bn3.weight': 0, 'layer3.33.conv3.weight': 0, 'layer3.33.bn2.bias': 0, 'layer3.33.bn2.weight': 0, 'layer3.33.conv2.weight': 0, 'layer3.33.bn1.bias': 0, 'layer3.33.bn1.weight': 0, 'layer3.33.conv1.weight': 0, 'layer3.32.bn3.bias': 0, 'layer3.32.bn3.weight': 0, 'layer3.32.conv3.weight': 0, 'layer3.32.bn2.bias': 0, 'layer3.32.bn2.weight': 0, 'layer3.32.conv2.weight': 0, 'layer3.32.bn1.bias': 0, 'layer3.32.bn1.weight': 0, 'layer3.32.conv1.weight': 0, 'layer3.31.bn3.bias': 0, 'layer3.31.bn3.weight': 0, 'layer3.31.conv3.weight': 0, 'layer3.31.bn2.bias': 0, 'layer3.31.bn2.weight': 0, 'layer3.31.conv2.weight': 0, 'layer3.31.bn1.bias': 0, 'layer3.31.bn1.weight': 0, 'layer3.31.conv1.weight': 0, 'layer3.30.bn3.bias': 0, 'layer3.30.bn3.weight': 0, 'layer3.30.conv3.weight': 0, 'layer3.30.bn2.bias': 0, 'layer3.30.bn2.weight': 0, 'layer3.30.conv2.weight': 0, 'layer3.30.bn1.bias': 0, 'layer3.30.bn1.weight': 0, 'layer3.30.conv1.weight': 0, 'layer3.29.bn3.bias': 0, 'layer3.29.bn3.weight': 0, 'layer3.29.conv3.weight': 0, 'layer3.29.bn2.bias': 0, 'layer3.29.bn2.weight': 0, 'layer3.29.conv2.weight': 0, 'layer3.29.bn1.bias': 0, 'layer3.29.bn1.weight': 0, 'layer3.29.conv1.weight': 0, 'layer3.28.bn3.bias': 0, 'layer3.28.bn3.weight': 0, 'layer3.28.conv3.weight': 0, 'layer3.28.bn2.bias': 0, 'layer3.28.bn2.weight': 0, 'layer3.28.conv2.weight': 0, 'layer3.28.bn1.bias': 0, 'layer3.28.bn1.weight': 0, 'layer3.28.conv1.weight': 0, 'layer3.27.bn3.bias': 0, 'layer3.27.bn3.weight': 0, 'layer3.27.conv3.weight': 0, 'layer3.27.bn2.bias': 0, 'layer3.27.bn2.weight': 0, 'layer3.27.conv2.weight': 0, 'layer3.27.bn1.bias': 0, 'layer3.27.bn1.weight': 0, 'layer3.27.conv1.weight': 0, 'layer3.26.bn3.bias': 0, 'layer3.26.bn3.weight': 0, 'layer3.26.conv3.weight': 0, 'layer3.26.bn2.bias': 0, 'layer3.26.bn2.weight': 0, 'layer3.26.conv2.weight': 0, 'layer3.26.bn1.bias': 0, 'layer3.26.bn1.weight': 0, 'layer3.26.conv1.weight': 0, 'layer3.25.bn3.bias': 0, 'layer3.25.bn3.weight': 0, 'layer3.25.conv3.weight': 0, 'layer3.25.bn2.bias': 0, 'layer3.25.bn2.weight': 0, 'layer3.25.conv2.weight': 0, 'layer3.25.bn1.bias': 0, 'layer3.25.bn1.weight': 0, 'layer3.25.conv1.weight': 0, 'layer3.24.bn3.bias': 0, 'layer3.24.bn3.weight': 0, 'layer3.24.conv3.weight': 0, 'layer3.24.bn2.bias': 0, 'layer3.24.bn2.weight': 0, 'layer3.24.conv2.weight': 0, 'layer3.24.bn1.bias': 0, 'layer3.24.bn1.weight': 0, 'layer3.24.conv1.weight': 0, 'layer3.23.bn3.bias': 0, 'layer3.23.bn3.weight': 0, 'layer3.23.conv3.weight': 0, 'layer3.23.bn2.bias': 0, 'layer3.23.bn2.weight': 0, 'layer3.23.conv2.weight': 0, 'layer3.23.bn1.bias': 0, 'layer3.23.bn1.weight': 0, 'layer3.23.conv1.weight': 0, 'layer3.22.bn3.bias': 0, 'layer3.22.bn3.weight': 0, 'layer3.22.conv3.weight': 0, 'layer3.22.bn2.bias': 0, 'layer3.22.bn2.weight': 0, 'layer3.22.conv2.weight': 0, 'layer3.22.bn1.bias': 0, 'layer3.22.bn1.weight': 0, 'layer3.22.conv1.weight': 0, 'layer3.21.bn3.bias': 0, 'layer3.21.bn3.weight': 0, 'layer3.21.conv3.weight': 0, 'layer3.21.bn2.bias': 0, 'layer3.21.bn2.weight': 0, 'layer3.21.conv2.weight': 0, 'layer3.21.bn1.bias': 0, 'layer3.21.bn1.weight': 0, 'layer3.21.conv1.weight': 0, 'layer3.20.bn3.bias': 0, 'layer3.20.bn3.weight': 0, 'layer3.20.conv3.weight': 0, 'layer3.20.bn2.bias': 0, 'layer3.20.bn2.weight': 0, 'layer3.20.conv2.weight': 0, 'layer3.20.bn1.bias': 0, 'layer3.20.bn1.weight': 0, 'layer3.20.conv1.weight': 0, 'layer3.19.bn3.bias': 0, 'layer3.19.bn3.weight': 0, 'layer3.19.conv3.weight': 0, 'layer3.19.bn2.bias': 0, 'layer3.19.bn2.weight': 0, 'layer3.19.conv2.weight': 0, 'layer3.19.bn1.bias': 0, 'layer3.19.bn1.weight': 0, 'layer3.19.conv1.weight': 0, 'layer3.18.bn3.bias': 0, 'layer3.18.bn3.weight': 0, 'layer3.18.conv3.weight': 0, 'layer3.18.bn2.bias': 0, 'layer3.18.bn2.weight': 0, 'layer3.18.conv2.weight': 0, 'layer3.18.bn1.bias': 0, 'layer3.18.bn1.weight': 0, 'layer3.18.conv1.weight': 0, 'layer3.17.bn3.bias': 0, 'layer3.17.bn3.weight': 0, 'layer3.17.conv3.weight': 0, 'layer3.17.bn2.bias': 0, 'layer3.17.bn2.weight': 0, 'layer3.17.conv2.weight': 0, 'layer3.17.bn1.bias': 0, 'layer3.17.bn1.weight': 0, 'layer3.17.conv1.weight': 0, 'layer3.16.bn3.bias': 0, 'layer3.16.bn3.weight': 0, 'layer3.16.conv3.weight': 0, 'layer3.16.bn2.bias': 0, 'layer3.16.bn2.weight': 0, 'layer3.16.conv2.weight': 0, 'layer3.16.bn1.bias': 0, 'layer3.16.bn1.weight': 0, 'layer3.16.conv1.weight': 0, 'layer3.15.bn3.bias': 0, 'layer3.15.bn3.weight': 0, 'layer3.15.conv3.weight': 0, 'layer3.15.bn2.bias': 0, 'layer3.15.bn2.weight': 0, 'layer3.15.conv2.weight': 0, 'layer3.15.bn1.bias': 0, 'layer3.15.bn1.weight': 0, 'layer3.15.conv1.weight': 0, 'layer3.14.bn3.bias': 0, 'layer3.14.bn3.weight': 0, 'layer3.14.conv3.weight': 0, 'layer3.14.bn2.bias': 0, 'layer3.14.bn2.weight': 0, 'layer3.14.conv2.weight': 0, 'layer3.14.bn1.bias': 0, 'layer3.14.bn1.weight': 0, 'layer3.14.conv1.weight': 0, 'layer3.13.bn3.bias': 0, 'layer3.13.bn3.weight': 0, 'layer3.13.conv3.weight': 0, 'layer3.13.bn2.bias': 0, 'layer3.13.bn2.weight': 0, 'layer3.13.conv2.weight': 0, 'layer3.13.bn1.bias': 0, 'layer3.13.bn1.weight': 0, 'layer3.13.conv1.weight': 0, 'layer3.12.bn3.bias': 0, 'layer3.12.bn3.weight': 0, 'layer3.12.conv3.weight': 0, 'layer3.12.bn2.bias': 0, 'layer3.12.bn2.weight': 0, 'layer3.12.conv2.weight': 0, 'layer3.12.bn1.bias': 0, 'layer3.12.bn1.weight': 0, 'layer3.12.conv1.weight': 0, 'layer3.11.bn3.bias': 0, 'layer3.11.bn3.weight': 0, 'layer3.11.conv3.weight': 0, 'layer3.11.bn2.bias': 0, 'layer3.11.bn2.weight': 0, 'layer3.11.conv2.weight': 0, 'layer3.11.bn1.bias': 0, 'layer3.11.bn1.weight': 0, 'layer3.11.conv1.weight': 0, 'layer3.10.bn3.bias': 0, 'layer3.10.bn3.weight': 0, 'layer3.10.conv3.weight': 0, 'layer3.10.bn2.bias': 0, 'layer3.10.bn2.weight': 0, 'layer3.10.conv2.weight': 0, 'layer3.10.bn1.bias': 0, 'layer3.10.bn1.weight': 0, 'layer3.10.conv1.weight': 0, 'layer3.9.bn3.bias': 0, 'layer3.9.bn3.weight': 0, 'layer3.9.conv3.weight': 0, 'layer3.9.bn2.bias': 0, 'layer3.9.bn2.weight': 0, 'layer3.9.conv2.weight': 0, 'layer3.9.bn1.bias': 0, 'layer3.9.bn1.weight': 0, 'layer3.9.conv1.weight': 0, 'layer3.8.bn3.bias': 0, 'layer3.8.bn3.weight': 0, 'layer3.8.conv3.weight': 0, 'layer3.8.bn2.bias': 0, 'layer3.8.bn2.weight': 0, 'layer3.8.conv2.weight': 0, 'layer3.8.bn1.bias': 0, 'layer3.8.bn1.weight': 0, 'layer3.8.conv1.weight': 0, 'layer3.7.bn3.bias': 0, 'layer3.7.bn3.weight': 0, 'layer3.7.conv3.weight': 0, 'layer3.7.bn2.bias': 0, 'layer3.7.bn2.weight': 0, 'layer3.7.conv2.weight': 0, 'layer3.7.bn1.bias': 0, 'layer3.7.bn1.weight': 0, 'layer3.7.conv1.weight': 0, 'layer3.6.bn3.bias': 0, 'layer3.6.bn3.weight': 0, 'layer3.6.conv3.weight': 0, 'layer3.6.bn2.bias': 0, 'layer3.6.bn2.weight': 0, 'layer3.6.conv2.weight': 0, 'layer3.6.bn1.bias': 0, 'layer3.6.bn1.weight': 0, 'layer3.6.conv1.weight': 0, 'layer3.5.bn3.bias': 0, 'layer3.5.bn3.weight': 0, 'layer3.5.conv3.weight': 0, 'layer3.5.bn2.bias': 0, 'layer3.5.bn2.weight': 0, 'layer3.5.conv2.weight': 0, 'layer3.5.bn1.bias': 0, 'layer3.5.bn1.weight': 0, 'layer3.5.conv1.weight': 0, 'layer3.4.bn3.bias': 0, 'layer3.4.bn3.weight': 0, 'layer3.4.conv3.weight': 0, 'layer3.4.bn2.bias': 0, 'layer3.4.bn2.weight': 0, 'layer3.4.conv2.weight': 0, 'layer3.4.bn1.bias': 0, 'layer3.4.bn1.weight': 0, 'layer3.4.conv1.weight': 0, 'layer3.3.bn3.bias': 0, 'layer3.3.bn3.weight': 0, 'layer3.3.conv3.weight': 0, 'layer3.3.bn2.bias': 0, 'layer3.3.bn2.weight': 0, 'layer3.3.conv2.weight': 0, 'layer3.3.bn1.bias': 0, 'layer3.3.bn1.weight': 0, 'layer3.3.conv1.weight': 0, 'layer3.2.bn3.bias': 0, 'layer3.2.bn3.weight': 0, 'layer3.2.conv3.weight': 0, 'layer3.2.bn2.bias': 0, 'layer3.2.bn2.weight': 0, 'layer3.2.conv2.weight': 0, 'layer3.2.bn1.bias': 0, 'layer3.2.bn1.weight': 0, 'layer3.2.conv1.weight': 0, 'layer3.1.bn3.bias': 0, 'layer3.1.bn3.weight': 0, 'layer3.1.conv3.weight': 0, 'layer3.1.bn2.bias': 0, 'layer3.1.bn2.weight': 0, 'layer3.1.conv2.weight': 0, 'layer3.1.bn1.bias': 0, 'layer3.1.bn1.weight': 0, 'layer3.1.conv1.weight': 0, 'layer3.0.downsample.1.bias': 0, 'layer3.0.downsample.1.weight': 0, 'layer3.0.downsample.0.weight': 0, 'layer3.0.bn3.bias': 0, 'layer3.0.bn3.weight': 0, 'layer3.0.conv3.weight': 0, 'layer3.0.bn2.bias': 0, 'layer3.0.bn2.weight': 0, 'layer3.0.conv2.weight': 0, 'layer3.0.bn1.bias': 0, 'layer3.0.bn1.weight': 0, 'layer3.0.conv1.weight': 0, 'layer2.7.bn3.bias': 0, 'layer2.7.bn3.weight': 0, 'layer2.7.conv3.weight': 0, 'layer2.7.bn2.bias': 0, 'layer2.7.bn2.weight': 0, 'layer2.7.conv2.weight': 0, 'layer2.7.bn1.bias': 0, 'layer2.7.bn1.weight': 0, 'layer2.7.conv1.weight': 0, 'layer2.6.bn3.bias': 0, 'layer2.6.bn3.weight': 0, 'layer2.6.conv3.weight': 0, 'layer2.6.bn2.bias': 0, 'layer2.6.bn2.weight': 0, 'layer2.6.conv2.weight': 0, 'layer2.6.bn1.bias': 0, 'layer2.6.bn1.weight': 0, 'layer2.6.conv1.weight': 0, 'layer2.5.bn3.bias': 0, 'layer2.5.bn3.weight': 0, 'layer2.5.conv3.weight': 0, 'layer2.5.bn2.bias': 0, 'layer2.5.bn2.weight': 0, 'layer2.5.conv2.weight': 0, 'layer2.5.bn1.bias': 0, 'layer2.5.bn1.weight': 0, 'layer2.5.conv1.weight': 0, 'layer2.4.bn3.bias': 0, 'layer2.4.bn3.weight': 0, 'layer2.4.conv3.weight': 0, 'layer2.4.bn2.bias': 0, 'layer2.4.bn2.weight': 0, 'layer2.4.conv2.weight': 0, 'layer2.4.bn1.bias': 0, 'layer2.4.bn1.weight': 0, 'layer2.4.conv1.weight': 0, 'layer2.3.bn3.bias': 0, 'layer2.3.bn3.weight': 0, 'layer2.3.conv3.weight': 0, 'layer2.3.bn2.bias': 0, 'layer2.3.bn2.weight': 0, 'layer2.3.conv2.weight': 0, 'layer2.3.bn1.bias': 0, 'layer2.3.bn1.weight': 0, 'layer2.3.conv1.weight': 0, 'layer2.2.bn3.bias': 0, 'layer2.2.bn3.weight': 0, 'layer2.2.conv3.weight': 0, 'layer2.2.bn2.bias': 0, 'layer2.2.bn2.weight': 0, 'layer2.2.conv2.weight': 0, 'layer2.2.bn1.bias': 0, 'layer2.2.bn1.weight': 0, 'layer2.2.conv1.weight': 0, 'layer2.1.bn3.bias': 0, 'layer2.1.bn3.weight': 0, 'layer2.1.conv3.weight': 0, 'layer2.1.bn2.bias': 0, 'layer2.1.bn2.weight': 0, 'layer2.1.conv2.weight': 0, 'layer2.1.bn1.bias': 0, 'layer2.1.bn1.weight': 0, 'layer2.1.conv1.weight': 0, 'layer2.0.downsample.1.bias': 0, 'layer2.0.downsample.1.weight': 0, 'layer2.0.downsample.0.weight': 0, 'layer2.0.bn3.bias': 0, 'layer2.0.bn3.weight': 0, 'layer2.0.conv3.weight': 0, 'layer2.0.bn2.bias': 0, 'layer2.0.bn2.weight': 0, 'layer2.0.conv2.weight': 0, 'layer2.0.bn1.bias': 0, 'layer2.0.bn1.weight': 0, 'layer2.0.conv1.weight': 0, 'layer1.2.bn3.bias': 0, 'layer1.2.bn3.weight': 0, 'layer1.2.conv3.weight': 0, 'layer1.2.bn2.bias': 0, 'layer1.2.bn2.weight': 0, 'layer1.2.conv2.weight': 0, 'layer1.2.bn1.bias': 0, 'layer1.2.bn1.weight': 0, 'layer1.2.conv1.weight': 0, 'layer1.1.bn3.bias': 0, 'layer1.1.bn3.weight': 0, 'layer1.1.conv3.weight': 0, 'layer1.1.bn2.bias': 0, 'layer1.1.bn2.weight': 0, 'layer1.1.conv2.weight': 0, 'layer1.1.bn1.bias': 0, 'layer1.1.bn1.weight': 0, 'layer1.1.conv1.weight': 0, 'layer1.0.downsample.1.bias': 0, 'layer1.0.downsample.1.weight': 0, 'layer1.0.downsample.0.weight': 0, 'layer1.0.bn3.bias': 0, 'layer1.0.bn3.weight': 0, 'layer1.0.conv3.weight': 0, 'layer1.0.bn2.bias': 0, 'layer1.0.bn2.weight': 0, 'layer1.0.conv2.weight': 0, 'layer1.0.bn1.bias': 0, 'layer1.0.bn1.weight': 0, 'layer1.0.conv1.weight': 0, 'bn1.bias': 0, 'bn1.weight': 0, 'conv1.weight': 0}
2025-06-08 08:37:42,659 [allreducer.py:708] INFO offsets: 
2025-06-08 08:37:42,659 [allreducer.py:345] INFO dynamic densities = [0.01]
2025-06-08 08:37:42,666 [allreducer.py:659] INFO spar_groups: [{'conv1.weight': ((0, 9408), (0, 9408)), 'bn1.weight': ((0, 64), (9408, 9472)), 'bn1.bias': ((0, 64), (9472, 9536)), 'layer1.0.conv1.weight': ((0, 4096), (9536, 13632)), 'layer1.0.bn1.weight': ((0, 64), (13632, 13696)), 'layer1.0.bn1.bias': ((0, 64), (13696, 13760)), 'layer1.0.conv2.weight': ((0, 36864), (13760, 50624)), 'layer1.0.bn2.weight': ((0, 64), (50624, 50688)), 'layer1.0.bn2.bias': ((0, 64), (50688, 50752)), 'layer1.0.conv3.weight': ((0, 16384), (50752, 67136)), 'layer1.0.bn3.weight': ((0, 256), (67136, 67392)), 'layer1.0.bn3.bias': ((0, 256), (67392, 67648)), 'layer1.0.downsample.0.weight': ((0, 16384), (67648, 84032)), 'layer1.0.downsample.1.weight': ((0, 256), (84032, 84288)), 'layer1.0.downsample.1.bias': ((0, 256), (84288, 84544)), 'layer1.1.conv1.weight': ((0, 16384), (84544, 100928)), 'layer1.1.bn1.weight': ((0, 64), (100928, 100992)), 'layer1.1.bn1.bias': ((0, 64), (100992, 101056)), 'layer1.1.conv2.weight': ((0, 36864), (101056, 137920)), 'layer1.1.bn2.weight': ((0, 64), (137920, 137984)), 'layer1.1.bn2.bias': ((0, 64), (137984, 138048)), 'layer1.1.conv3.weight': ((0, 16384), (138048, 154432)), 'layer1.1.bn3.weight': ((0, 256), (154432, 154688)), 'layer1.1.bn3.bias': ((0, 256), (154688, 154944)), 'layer1.2.conv1.weight': ((0, 16384), (154944, 171328)), 'layer1.2.bn1.weight': ((0, 64), (171328, 171392)), 'layer1.2.bn1.bias': ((0, 64), (171392, 171456)), 'layer1.2.conv2.weight': ((0, 36864), (171456, 208320)), 'layer1.2.bn2.weight': ((0, 64), (208320, 208384)), 'layer1.2.bn2.bias': ((0, 64), (208384, 208448)), 'layer1.2.conv3.weight': ((0, 16384), (208448, 224832)), 'layer1.2.bn3.weight': ((0, 256), (224832, 225088)), 'layer1.2.bn3.bias': ((0, 256), (225088, 225344)), 'layer2.0.conv1.weight': ((0, 32768), (225344, 258112)), 'layer2.0.bn1.weight': ((0, 128), (258112, 258240)), 'layer2.0.bn1.bias': ((0, 128), (258240, 258368)), 'layer2.0.conv2.weight': ((0, 147456), (258368, 405824)), 'layer2.0.bn2.weight': ((0, 128), (405824, 405952)), 'layer2.0.bn2.bias': ((0, 128), (405952, 406080)), 'layer2.0.conv3.weight': ((0, 65536), (406080, 471616)), 'layer2.0.bn3.weight': ((0, 512), (471616, 472128)), 'layer2.0.bn3.bias': ((0, 512), (472128, 472640)), 'layer2.0.downsample.0.weight': ((0, 131072), (472640, 603712)), 'layer2.0.downsample.1.weight': ((0, 512), (603712, 604224)), 'layer2.0.downsample.1.bias': ((0, 512), (604224, 604736)), 'layer2.1.conv1.weight': ((0, 65536), (604736, 670272)), 'layer2.1.bn1.weight': ((0, 128), (670272, 670400)), 'layer2.1.bn1.bias': ((0, 128), (670400, 670528)), 'layer2.1.conv2.weight': ((0, 147456), (670528, 817984)), 'layer2.1.bn2.weight': ((0, 128), (817984, 818112)), 'layer2.1.bn2.bias': ((0, 128), (818112, 818240)), 'layer2.1.conv3.weight': ((0, 65536), (818240, 883776)), 'layer2.1.bn3.weight': ((0, 512), (883776, 884288)), 'layer2.1.bn3.bias': ((0, 512), (884288, 884800)), 'layer2.2.conv1.weight': ((0, 65536), (884800, 950336)), 'layer2.2.bn1.weight': ((0, 128), (950336, 950464)), 'layer2.2.bn1.bias': ((0, 128), (950464, 950592)), 'layer2.2.conv2.weight': ((0, 147456), (950592, 1098048)), 'layer2.2.bn2.weight': ((0, 128), (1098048, 1098176)), 'layer2.2.bn2.bias': ((0, 128), (1098176, 1098304)), 'layer2.2.conv3.weight': ((0, 65536), (1098304, 1163840)), 'layer2.2.bn3.weight': ((0, 512), (1163840, 1164352)), 'layer2.2.bn3.bias': ((0, 512), (1164352, 1164864)), 'layer2.3.conv1.weight': ((0, 65536), (1164864, 1230400)), 'layer2.3.bn1.weight': ((0, 128), (1230400, 1230528)), 'layer2.3.bn1.bias': ((0, 128), (1230528, 1230656)), 'layer2.3.conv2.weight': ((0, 147456), (1230656, 1378112)), 'layer2.3.bn2.weight': ((0, 128), (1378112, 1378240)), 'layer2.3.bn2.bias': ((0, 128), (1378240, 1378368)), 'layer2.3.conv3.weight': ((0, 65536), (1378368, 1443904)), 'layer2.3.bn3.weight': ((0, 512), (1443904, 1444416)), 'layer2.3.bn3.bias': ((0, 512), (1444416, 1444928)), 'layer2.4.conv1.weight': ((0, 65536), (1444928, 1510464)), 'layer2.4.bn1.weight': ((0, 128), (1510464, 1510592)), 'layer2.4.bn1.bias': ((0, 128), (1510592, 1510720)), 'layer2.4.conv2.weight': ((0, 147456), (1510720, 1658176)), 'layer2.4.bn2.weight': ((0, 128), (1658176, 1658304)), 'layer2.4.bn2.bias': ((0, 128), (1658304, 1658432)), 'layer2.4.conv3.weight': ((0, 65536), (1658432, 1723968)), 'layer2.4.bn3.weight': ((0, 512), (1723968, 1724480)), 'layer2.4.bn3.bias': ((0, 512), (1724480, 1724992)), 'layer2.5.conv1.weight': ((0, 65536), (1724992, 1790528)), 'layer2.5.bn1.weight': ((0, 128), (1790528, 1790656)), 'layer2.5.bn1.bias': ((0, 128), (1790656, 1790784)), 'layer2.5.conv2.weight': ((0, 147456), (1790784, 1938240)), 'layer2.5.bn2.weight': ((0, 128), (1938240, 1938368)), 'layer2.5.bn2.bias': ((0, 128), (1938368, 1938496)), 'layer2.5.conv3.weight': ((0, 65536), (1938496, 2004032)), 'layer2.5.bn3.weight': ((0, 512), (2004032, 2004544)), 'layer2.5.bn3.bias': ((0, 512), (2004544, 2005056)), 'layer2.6.conv1.weight': ((0, 65536), (2005056, 2070592)), 'layer2.6.bn1.weight': ((0, 128), (2070592, 2070720)), 'layer2.6.bn1.bias': ((0, 128), (2070720, 2070848)), 'layer2.6.conv2.weight': ((0, 147456), (2070848, 2218304)), 'layer2.6.bn2.weight': ((0, 128), (2218304, 2218432)), 'layer2.6.bn2.bias': ((0, 128), (2218432, 2218560)), 'layer2.6.conv3.weight': ((0, 65536), (2218560, 2284096)), 'layer2.6.bn3.weight': ((0, 512), (2284096, 2284608)), 'layer2.6.bn3.bias': ((0, 512), (2284608, 2285120)), 'layer2.7.conv1.weight': ((0, 65536), (2285120, 2350656)), 'layer2.7.bn1.weight': ((0, 128), (2350656, 2350784)), 'layer2.7.bn1.bias': ((0, 128), (2350784, 2350912)), 'layer2.7.conv2.weight': ((0, 147456), (2350912, 2498368)), 'layer2.7.bn2.weight': ((0, 128), (2498368, 2498496)), 'layer2.7.bn2.bias': ((0, 128), (2498496, 2498624)), 'layer2.7.conv3.weight': ((0, 65536), (2498624, 2564160)), 'layer2.7.bn3.weight': ((0, 512), (2564160, 2564672)), 'layer2.7.bn3.bias': ((0, 512), (2564672, 2565184)), 'layer3.0.conv1.weight': ((0, 131072), (2565184, 2696256)), 'layer3.0.bn1.weight': ((0, 256), (2696256, 2696512)), 'layer3.0.bn1.bias': ((0, 256), (2696512, 2696768)), 'layer3.0.conv2.weight': ((0, 589824), (2696768, 3286592)), 'layer3.0.bn2.weight': ((0, 256), (3286592, 3286848)), 'layer3.0.bn2.bias': ((0, 256), (3286848, 3287104)), 'layer3.0.conv3.weight': ((0, 262144), (3287104, 3549248)), 'layer3.0.bn3.weight': ((0, 1024), (3549248, 3550272)), 'layer3.0.bn3.bias': ((0, 1024), (3550272, 3551296)), 'layer3.0.downsample.0.weight': ((0, 524288), (3551296, 4075584)), 'layer3.0.downsample.1.weight': ((0, 1024), (4075584, 4076608)), 'layer3.0.downsample.1.bias': ((0, 1024), (4076608, 4077632)), 'layer3.1.conv1.weight': ((0, 262144), (4077632, 4339776)), 'layer3.1.bn1.weight': ((0, 256), (4339776, 4340032)), 'layer3.1.bn1.bias': ((0, 256), (4340032, 4340288)), 'layer3.1.conv2.weight': ((0, 589824), (4340288, 4930112)), 'layer3.1.bn2.weight': ((0, 256), (4930112, 4930368)), 'layer3.1.bn2.bias': ((0, 256), (4930368, 4930624)), 'layer3.1.conv3.weight': ((0, 262144), (4930624, 5192768)), 'layer3.1.bn3.weight': ((0, 1024), (5192768, 5193792)), 'layer3.1.bn3.bias': ((0, 1024), (5193792, 5194816)), 'layer3.2.conv1.weight': ((0, 262144), (5194816, 5456960)), 'layer3.2.bn1.weight': ((0, 256), (5456960, 5457216)), 'layer3.2.bn1.bias': ((0, 256), (5457216, 5457472)), 'layer3.2.conv2.weight': ((0, 589824), (5457472, 6047296)), 'layer3.2.bn2.weight': ((0, 256), (6047296, 6047552)), 'layer3.2.bn2.bias': ((0, 256), (6047552, 6047808)), 'layer3.2.conv3.weight': ((0, 262144), (6047808, 6309952)), 'layer3.2.bn3.weight': ((0, 1024), (6309952, 6310976)), 'layer3.2.bn3.bias': ((0, 1024), (6310976, 6312000)), 'layer3.3.conv1.weight': ((0, 262144), (6312000, 6574144)), 'layer3.3.bn1.weight': ((0, 256), (6574144, 6574400)), 'layer3.3.bn1.bias': ((0, 256), (6574400, 6574656)), 'layer3.3.conv2.weight': ((0, 589824), (6574656, 7164480)), 'layer3.3.bn2.weight': ((0, 256), (7164480, 7164736)), 'layer3.3.bn2.bias': ((0, 256), (7164736, 7164992)), 'layer3.3.conv3.weight': ((0, 262144), (7164992, 7427136)), 'layer3.3.bn3.weight': ((0, 1024), (7427136, 7428160)), 'layer3.3.bn3.bias': ((0, 1024), (7428160, 7429184)), 'layer3.4.conv1.weight': ((0, 262144), (7429184, 7691328)), 'layer3.4.bn1.weight': ((0, 256), (7691328, 7691584)), 'layer3.4.bn1.bias': ((0, 256), (7691584, 7691840)), 'layer3.4.conv2.weight': ((0, 589824), (7691840, 8281664)), 'layer3.4.bn2.weight': ((0, 256), (8281664, 8281920)), 'layer3.4.bn2.bias': ((0, 256), (8281920, 8282176)), 'layer3.4.conv3.weight': ((0, 262144), (8282176, 8544320)), 'layer3.4.bn3.weight': ((0, 1024), (8544320, 8545344)), 'layer3.4.bn3.bias': ((0, 1024), (8545344, 8546368)), 'layer3.5.conv1.weight': ((0, 262144), (8546368, 8808512)), 'layer3.5.bn1.weight': ((0, 256), (8808512, 8808768)), 'layer3.5.bn1.bias': ((0, 256), (8808768, 8809024)), 'layer3.5.conv2.weight': ((0, 589824), (8809024, 9398848)), 'layer3.5.bn2.weight': ((0, 256), (9398848, 9399104)), 'layer3.5.bn2.bias': ((0, 256), (9399104, 9399360)), 'layer3.5.conv3.weight': ((0, 262144), (9399360, 9661504)), 'layer3.5.bn3.weight': ((0, 1024), (9661504, 9662528)), 'layer3.5.bn3.bias': ((0, 1024), (9662528, 9663552)), 'layer3.6.conv1.weight': ((0, 61233), (9663552, 9724785))}, {'layer3.6.conv1.weight': ((61233, 262144), (0, 200911)), 'layer3.6.bn1.weight': ((0, 256), (200911, 201167)), 'layer3.6.bn1.bias': ((0, 256), (201167, 201423)), 'layer3.6.conv2.weight': ((0, 589824), (201423, 791247)), 'layer3.6.bn2.weight': ((0, 256), (791247, 791503)), 'layer3.6.bn2.bias': ((0, 256), (791503, 791759)), 'layer3.6.conv3.weight': ((0, 262144), (791759, 1053903)), 'layer3.6.bn3.weight': ((0, 1024), (1053903, 1054927)), 'layer3.6.bn3.bias': ((0, 1024), (1054927, 1055951)), 'layer3.7.conv1.weight': ((0, 262144), (1055951, 1318095)), 'layer3.7.bn1.weight': ((0, 256), (1318095, 1318351)), 'layer3.7.bn1.bias': ((0, 256), (1318351, 1318607)), 'layer3.7.conv2.weight': ((0, 589824), (1318607, 1908431)), 'layer3.7.bn2.weight': ((0, 256), (1908431, 1908687)), 'layer3.7.bn2.bias': ((0, 256), (1908687, 1908943)), 'layer3.7.conv3.weight': ((0, 262144), (1908943, 2171087)), 'layer3.7.bn3.weight': ((0, 1024), (2171087, 2172111)), 'layer3.7.bn3.bias': ((0, 1024), (2172111, 2173135)), 'layer3.8.conv1.weight': ((0, 262144), (2173135, 2435279)), 'layer3.8.bn1.weight': ((0, 256), (2435279, 2435535)), 'layer3.8.bn1.bias': ((0, 256), (2435535, 2435791)), 'layer3.8.conv2.weight': ((0, 589824), (2435791, 3025615)), 'layer3.8.bn2.weight': ((0, 256), (3025615, 3025871)), 'layer3.8.bn2.bias': ((0, 256), (3025871, 3026127)), 'layer3.8.conv3.weight': ((0, 262144), (3026127, 3288271)), 'layer3.8.bn3.weight': ((0, 1024), (3288271, 3289295)), 'layer3.8.bn3.bias': ((0, 1024), (3289295, 3290319)), 'layer3.9.conv1.weight': ((0, 262144), (3290319, 3552463)), 'layer3.9.bn1.weight': ((0, 256), (3552463, 3552719)), 'layer3.9.bn1.bias': ((0, 256), (3552719, 3552975)), 'layer3.9.conv2.weight': ((0, 589824), (3552975, 4142799)), 'layer3.9.bn2.weight': ((0, 256), (4142799, 4143055)), 'layer3.9.bn2.bias': ((0, 256), (4143055, 4143311)), 'layer3.9.conv3.weight': ((0, 262144), (4143311, 4405455)), 'layer3.9.bn3.weight': ((0, 1024), (4405455, 4406479)), 'layer3.9.bn3.bias': ((0, 1024), (4406479, 4407503)), 'layer3.10.conv1.weight': ((0, 262144), (4407503, 4669647)), 'layer3.10.bn1.weight': ((0, 256), (4669647, 4669903)), 'layer3.10.bn1.bias': ((0, 256), (4669903, 4670159)), 'layer3.10.conv2.weight': ((0, 589824), (4670159, 5259983)), 'layer3.10.bn2.weight': ((0, 256), (5259983, 5260239)), 'layer3.10.bn2.bias': ((0, 256), (5260239, 5260495)), 'layer3.10.conv3.weight': ((0, 262144), (5260495, 5522639)), 'layer3.10.bn3.weight': ((0, 1024), (5522639, 5523663)), 'layer3.10.bn3.bias': ((0, 1024), (5523663, 5524687)), 'layer3.11.conv1.weight': ((0, 262144), (5524687, 5786831)), 'layer3.11.bn1.weight': ((0, 256), (5786831, 5787087)), 'layer3.11.bn1.bias': ((0, 256), (5787087, 5787343)), 'layer3.11.conv2.weight': ((0, 589824), (5787343, 6377167)), 'layer3.11.bn2.weight': ((0, 256), (6377167, 6377423)), 'layer3.11.bn2.bias': ((0, 256), (6377423, 6377679)), 'layer3.11.conv3.weight': ((0, 262144), (6377679, 6639823)), 'layer3.11.bn3.weight': ((0, 1024), (6639823, 6640847)), 'layer3.11.bn3.bias': ((0, 1024), (6640847, 6641871)), 'layer3.12.conv1.weight': ((0, 262144), (6641871, 6904015)), 'layer3.12.bn1.weight': ((0, 256), (6904015, 6904271)), 'layer3.12.bn1.bias': ((0, 256), (6904271, 6904527)), 'layer3.12.conv2.weight': ((0, 589824), (6904527, 7494351)), 'layer3.12.bn2.weight': ((0, 256), (7494351, 7494607)), 'layer3.12.bn2.bias': ((0, 256), (7494607, 7494863)), 'layer3.12.conv3.weight': ((0, 262144), (7494863, 7757007)), 'layer3.12.bn3.weight': ((0, 1024), (7757007, 7758031)), 'layer3.12.bn3.bias': ((0, 1024), (7758031, 7759055)), 'layer3.13.conv1.weight': ((0, 262144), (7759055, 8021199)), 'layer3.13.bn1.weight': ((0, 256), (8021199, 8021455)), 'layer3.13.bn1.bias': ((0, 256), (8021455, 8021711)), 'layer3.13.conv2.weight': ((0, 589824), (8021711, 8611535)), 'layer3.13.bn2.weight': ((0, 256), (8611535, 8611791)), 'layer3.13.bn2.bias': ((0, 256), (8611791, 8612047)), 'layer3.13.conv3.weight': ((0, 262144), (8612047, 8874191)), 'layer3.13.bn3.weight': ((0, 1024), (8874191, 8875215)), 'layer3.13.bn3.bias': ((0, 1024), (8875215, 8876239)), 'layer3.14.conv1.weight': ((0, 262144), (8876239, 9138383)), 'layer3.14.bn1.weight': ((0, 256), (9138383, 9138639)), 'layer3.14.bn1.bias': ((0, 256), (9138639, 9138895)), 'layer3.14.conv2.weight': ((0, 585890), (9138895, 9724785))}, {'layer3.14.conv2.weight': ((585890, 589824), (0, 3934)), 'layer3.14.bn2.weight': ((0, 256), (3934, 4190)), 'layer3.14.bn2.bias': ((0, 256), (4190, 4446)), 'layer3.14.conv3.weight': ((0, 262144), (4446, 266590)), 'layer3.14.bn3.weight': ((0, 1024), (266590, 267614)), 'layer3.14.bn3.bias': ((0, 1024), (267614, 268638)), 'layer3.15.conv1.weight': ((0, 262144), (268638, 530782)), 'layer3.15.bn1.weight': ((0, 256), (530782, 531038)), 'layer3.15.bn1.bias': ((0, 256), (531038, 531294)), 'layer3.15.conv2.weight': ((0, 589824), (531294, 1121118)), 'layer3.15.bn2.weight': ((0, 256), (1121118, 1121374)), 'layer3.15.bn2.bias': ((0, 256), (1121374, 1121630)), 'layer3.15.conv3.weight': ((0, 262144), (1121630, 1383774)), 'layer3.15.bn3.weight': ((0, 1024), (1383774, 1384798)), 'layer3.15.bn3.bias': ((0, 1024), (1384798, 1385822)), 'layer3.16.conv1.weight': ((0, 262144), (1385822, 1647966)), 'layer3.16.bn1.weight': ((0, 256), (1647966, 1648222)), 'layer3.16.bn1.bias': ((0, 256), (1648222, 1648478)), 'layer3.16.conv2.weight': ((0, 589824), (1648478, 2238302)), 'layer3.16.bn2.weight': ((0, 256), (2238302, 2238558)), 'layer3.16.bn2.bias': ((0, 256), (2238558, 2238814)), 'layer3.16.conv3.weight': ((0, 262144), (2238814, 2500958)), 'layer3.16.bn3.weight': ((0, 1024), (2500958, 2501982)), 'layer3.16.bn3.bias': ((0, 1024), (2501982, 2503006)), 'layer3.17.conv1.weight': ((0, 262144), (2503006, 2765150)), 'layer3.17.bn1.weight': ((0, 256), (2765150, 2765406)), 'layer3.17.bn1.bias': ((0, 256), (2765406, 2765662)), 'layer3.17.conv2.weight': ((0, 589824), (2765662, 3355486)), 'layer3.17.bn2.weight': ((0, 256), (3355486, 3355742)), 'layer3.17.bn2.bias': ((0, 256), (3355742, 3355998)), 'layer3.17.conv3.weight': ((0, 262144), (3355998, 3618142)), 'layer3.17.bn3.weight': ((0, 1024), (3618142, 3619166)), 'layer3.17.bn3.bias': ((0, 1024), (3619166, 3620190)), 'layer3.18.conv1.weight': ((0, 262144), (3620190, 3882334)), 'layer3.18.bn1.weight': ((0, 256), (3882334, 3882590)), 'layer3.18.bn1.bias': ((0, 256), (3882590, 3882846)), 'layer3.18.conv2.weight': ((0, 589824), (3882846, 4472670)), 'layer3.18.bn2.weight': ((0, 256), (4472670, 4472926)), 'layer3.18.bn2.bias': ((0, 256), (4472926, 4473182)), 'layer3.18.conv3.weight': ((0, 262144), (4473182, 4735326)), 'layer3.18.bn3.weight': ((0, 1024), (4735326, 4736350)), 'layer3.18.bn3.bias': ((0, 1024), (4736350, 4737374)), 'layer3.19.conv1.weight': ((0, 262144), (4737374, 4999518)), 'layer3.19.bn1.weight': ((0, 256), (4999518, 4999774)), 'layer3.19.bn1.bias': ((0, 256), (4999774, 5000030)), 'layer3.19.conv2.weight': ((0, 589824), (5000030, 5589854)), 'layer3.19.bn2.weight': ((0, 256), (5589854, 5590110)), 'layer3.19.bn2.bias': ((0, 256), (5590110, 5590366)), 'layer3.19.conv3.weight': ((0, 262144), (5590366, 5852510)), 'layer3.19.bn3.weight': ((0, 1024), (5852510, 5853534)), 'layer3.19.bn3.bias': ((0, 1024), (5853534, 5854558)), 'layer3.20.conv1.weight': ((0, 262144), (5854558, 6116702)), 'layer3.20.bn1.weight': ((0, 256), (6116702, 6116958)), 'layer3.20.bn1.bias': ((0, 256), (6116958, 6117214)), 'layer3.20.conv2.weight': ((0, 589824), (6117214, 6707038)), 'layer3.20.bn2.weight': ((0, 256), (6707038, 6707294)), 'layer3.20.bn2.bias': ((0, 256), (6707294, 6707550)), 'layer3.20.conv3.weight': ((0, 262144), (6707550, 6969694)), 'layer3.20.bn3.weight': ((0, 1024), (6969694, 6970718)), 'layer3.20.bn3.bias': ((0, 1024), (6970718, 6971742)), 'layer3.21.conv1.weight': ((0, 262144), (6971742, 7233886)), 'layer3.21.bn1.weight': ((0, 256), (7233886, 7234142)), 'layer3.21.bn1.bias': ((0, 256), (7234142, 7234398)), 'layer3.21.conv2.weight': ((0, 589824), (7234398, 7824222)), 'layer3.21.bn2.weight': ((0, 256), (7824222, 7824478)), 'layer3.21.bn2.bias': ((0, 256), (7824478, 7824734)), 'layer3.21.conv3.weight': ((0, 262144), (7824734, 8086878)), 'layer3.21.bn3.weight': ((0, 1024), (8086878, 8087902)), 'layer3.21.bn3.bias': ((0, 1024), (8087902, 8088926)), 'layer3.22.conv1.weight': ((0, 262144), (8088926, 8351070)), 'layer3.22.bn1.weight': ((0, 256), (8351070, 8351326)), 'layer3.22.bn1.bias': ((0, 256), (8351326, 8351582)), 'layer3.22.conv2.weight': ((0, 589824), (8351582, 8941406)), 'layer3.22.bn2.weight': ((0, 256), (8941406, 8941662)), 'layer3.22.bn2.bias': ((0, 256), (8941662, 8941918)), 'layer3.22.conv3.weight': ((0, 262144), (8941918, 9204062)), 'layer3.22.bn3.weight': ((0, 1024), (9204062, 9205086)), 'layer3.22.bn3.bias': ((0, 1024), (9205086, 9206110)), 'layer3.23.conv1.weight': ((0, 262144), (9206110, 9468254)), 'layer3.23.bn1.weight': ((0, 256), (9468254, 9468510)), 'layer3.23.bn1.bias': ((0, 256), (9468510, 9468766)), 'layer3.23.conv2.weight': ((0, 256019), (9468766, 9724785))}, {'layer3.23.conv2.weight': ((256019, 589824), (0, 333805)), 'layer3.23.bn2.weight': ((0, 256), (333805, 334061)), 'layer3.23.bn2.bias': ((0, 256), (334061, 334317)), 'layer3.23.conv3.weight': ((0, 262144), (334317, 596461)), 'layer3.23.bn3.weight': ((0, 1024), (596461, 597485)), 'layer3.23.bn3.bias': ((0, 1024), (597485, 598509)), 'layer3.24.conv1.weight': ((0, 262144), (598509, 860653)), 'layer3.24.bn1.weight': ((0, 256), (860653, 860909)), 'layer3.24.bn1.bias': ((0, 256), (860909, 861165)), 'layer3.24.conv2.weight': ((0, 589824), (861165, 1450989)), 'layer3.24.bn2.weight': ((0, 256), (1450989, 1451245)), 'layer3.24.bn2.bias': ((0, 256), (1451245, 1451501)), 'layer3.24.conv3.weight': ((0, 262144), (1451501, 1713645)), 'layer3.24.bn3.weight': ((0, 1024), (1713645, 1714669)), 'layer3.24.bn3.bias': ((0, 1024), (1714669, 1715693)), 'layer3.25.conv1.weight': ((0, 262144), (1715693, 1977837)), 'layer3.25.bn1.weight': ((0, 256), (1977837, 1978093)), 'layer3.25.bn1.bias': ((0, 256), (1978093, 1978349)), 'layer3.25.conv2.weight': ((0, 589824), (1978349, 2568173)), 'layer3.25.bn2.weight': ((0, 256), (2568173, 2568429)), 'layer3.25.bn2.bias': ((0, 256), (2568429, 2568685)), 'layer3.25.conv3.weight': ((0, 262144), (2568685, 2830829)), 'layer3.25.bn3.weight': ((0, 1024), (2830829, 2831853)), 'layer3.25.bn3.bias': ((0, 1024), (2831853, 2832877)), 'layer3.26.conv1.weight': ((0, 262144), (2832877, 3095021)), 'layer3.26.bn1.weight': ((0, 256), (3095021, 3095277)), 'layer3.26.bn1.bias': ((0, 256), (3095277, 3095533)), 'layer3.26.conv2.weight': ((0, 589824), (3095533, 3685357)), 'layer3.26.bn2.weight': ((0, 256), (3685357, 3685613)), 'layer3.26.bn2.bias': ((0, 256), (3685613, 3685869)), 'layer3.26.conv3.weight': ((0, 262144), (3685869, 3948013)), 'layer3.26.bn3.weight': ((0, 1024), (3948013, 3949037)), 'layer3.26.bn3.bias': ((0, 1024), (3949037, 3950061)), 'layer3.27.conv1.weight': ((0, 262144), (3950061, 4212205)), 'layer3.27.bn1.weight': ((0, 256), (4212205, 4212461)), 'layer3.27.bn1.bias': ((0, 256), (4212461, 4212717)), 'layer3.27.conv2.weight': ((0, 589824), (4212717, 4802541)), 'layer3.27.bn2.weight': ((0, 256), (4802541, 4802797)), 'layer3.27.bn2.bias': ((0, 256), (4802797, 4803053)), 'layer3.27.conv3.weight': ((0, 262144), (4803053, 5065197)), 'layer3.27.bn3.weight': ((0, 1024), (5065197, 5066221)), 'layer3.27.bn3.bias': ((0, 1024), (5066221, 5067245)), 'layer3.28.conv1.weight': ((0, 262144), (5067245, 5329389)), 'layer3.28.bn1.weight': ((0, 256), (5329389, 5329645)), 'layer3.28.bn1.bias': ((0, 256), (5329645, 5329901)), 'layer3.28.conv2.weight': ((0, 589824), (5329901, 5919725)), 'layer3.28.bn2.weight': ((0, 256), (5919725, 5919981)), 'layer3.28.bn2.bias': ((0, 256), (5919981, 5920237)), 'layer3.28.conv3.weight': ((0, 262144), (5920237, 6182381)), 'layer3.28.bn3.weight': ((0, 1024), (6182381, 6183405)), 'layer3.28.bn3.bias': ((0, 1024), (6183405, 6184429)), 'layer3.29.conv1.weight': ((0, 262144), (6184429, 6446573)), 'layer3.29.bn1.weight': ((0, 256), (6446573, 6446829)), 'layer3.29.bn1.bias': ((0, 256), (6446829, 6447085)), 'layer3.29.conv2.weight': ((0, 589824), (6447085, 7036909)), 'layer3.29.bn2.weight': ((0, 256), (7036909, 7037165)), 'layer3.29.bn2.bias': ((0, 256), (7037165, 7037421)), 'layer3.29.conv3.weight': ((0, 262144), (7037421, 7299565)), 'layer3.29.bn3.weight': ((0, 1024), (7299565, 7300589)), 'layer3.29.bn3.bias': ((0, 1024), (7300589, 7301613)), 'layer3.30.conv1.weight': ((0, 262144), (7301613, 7563757)), 'layer3.30.bn1.weight': ((0, 256), (7563757, 7564013)), 'layer3.30.bn1.bias': ((0, 256), (7564013, 7564269)), 'layer3.30.conv2.weight': ((0, 589824), (7564269, 8154093)), 'layer3.30.bn2.weight': ((0, 256), (8154093, 8154349)), 'layer3.30.bn2.bias': ((0, 256), (8154349, 8154605)), 'layer3.30.conv3.weight': ((0, 262144), (8154605, 8416749)), 'layer3.30.bn3.weight': ((0, 1024), (8416749, 8417773)), 'layer3.30.bn3.bias': ((0, 1024), (8417773, 8418797)), 'layer3.31.conv1.weight': ((0, 262144), (8418797, 8680941)), 'layer3.31.bn1.weight': ((0, 256), (8680941, 8681197)), 'layer3.31.bn1.bias': ((0, 256), (8681197, 8681453)), 'layer3.31.conv2.weight': ((0, 589824), (8681453, 9271277)), 'layer3.31.bn2.weight': ((0, 256), (9271277, 9271533)), 'layer3.31.bn2.bias': ((0, 256), (9271533, 9271789)), 'layer3.31.conv3.weight': ((0, 262144), (9271789, 9533933)), 'layer3.31.bn3.weight': ((0, 1024), (9533933, 9534957)), 'layer3.31.bn3.bias': ((0, 1024), (9534957, 9535981)), 'layer3.32.conv1.weight': ((0, 188804), (9535981, 9724785))}, {'layer3.32.conv1.weight': ((188804, 262144), (0, 73340)), 'layer3.32.bn1.weight': ((0, 256), (73340, 73596)), 'layer3.32.bn1.bias': ((0, 256), (73596, 73852)), 'layer3.32.conv2.weight': ((0, 589824), (73852, 663676)), 'layer3.32.bn2.weight': ((0, 256), (663676, 663932)), 'layer3.32.bn2.bias': ((0, 256), (663932, 664188)), 'layer3.32.conv3.weight': ((0, 262144), (664188, 926332)), 'layer3.32.bn3.weight': ((0, 1024), (926332, 927356)), 'layer3.32.bn3.bias': ((0, 1024), (927356, 928380)), 'layer3.33.conv1.weight': ((0, 262144), (928380, 1190524)), 'layer3.33.bn1.weight': ((0, 256), (1190524, 1190780)), 'layer3.33.bn1.bias': ((0, 256), (1190780, 1191036)), 'layer3.33.conv2.weight': ((0, 589824), (1191036, 1780860)), 'layer3.33.bn2.weight': ((0, 256), (1780860, 1781116)), 'layer3.33.bn2.bias': ((0, 256), (1781116, 1781372)), 'layer3.33.conv3.weight': ((0, 262144), (1781372, 2043516)), 'layer3.33.bn3.weight': ((0, 1024), (2043516, 2044540)), 'layer3.33.bn3.bias': ((0, 1024), (2044540, 2045564)), 'layer3.34.conv1.weight': ((0, 262144), (2045564, 2307708)), 'layer3.34.bn1.weight': ((0, 256), (2307708, 2307964)), 'layer3.34.bn1.bias': ((0, 256), (2307964, 2308220)), 'layer3.34.conv2.weight': ((0, 589824), (2308220, 2898044)), 'layer3.34.bn2.weight': ((0, 256), (2898044, 2898300)), 'layer3.34.bn2.bias': ((0, 256), (2898300, 2898556)), 'layer3.34.conv3.weight': ((0, 262144), (2898556, 3160700)), 'layer3.34.bn3.weight': ((0, 1024), (3160700, 3161724)), 'layer3.34.bn3.bias': ((0, 1024), (3161724, 3162748)), 'layer3.35.conv1.weight': ((0, 262144), (3162748, 3424892)), 'layer3.35.bn1.weight': ((0, 256), (3424892, 3425148)), 'layer3.35.bn1.bias': ((0, 256), (3425148, 3425404)), 'layer3.35.conv2.weight': ((0, 589824), (3425404, 4015228)), 'layer3.35.bn2.weight': ((0, 256), (4015228, 4015484)), 'layer3.35.bn2.bias': ((0, 256), (4015484, 4015740)), 'layer3.35.conv3.weight': ((0, 262144), (4015740, 4277884)), 'layer3.35.bn3.weight': ((0, 1024), (4277884, 4278908)), 'layer3.35.bn3.bias': ((0, 1024), (4278908, 4279932)), 'layer4.0.conv1.weight': ((0, 524288), (4279932, 4804220)), 'layer4.0.bn1.weight': ((0, 512), (4804220, 4804732)), 'layer4.0.bn1.bias': ((0, 512), (4804732, 4805244)), 'layer4.0.conv2.weight': ((0, 2359296), (4805244, 7164540)), 'layer4.0.bn2.weight': ((0, 512), (7164540, 7165052)), 'layer4.0.bn2.bias': ((0, 512), (7165052, 7165564)), 'layer4.0.conv3.weight': ((0, 1048576), (7165564, 8214140)), 'layer4.0.bn3.weight': ((0, 2048), (8214140, 8216188)), 'layer4.0.bn3.bias': ((0, 2048), (8216188, 8218236)), 'layer4.0.downsample.0.weight': ((0, 1506549), (8218236, 9724785))}, {'layer4.0.downsample.0.weight': ((1506549, 2097152), (0, 590603)), 'layer4.0.downsample.1.weight': ((0, 2048), (590603, 592651)), 'layer4.0.downsample.1.bias': ((0, 2048), (592651, 594699)), 'layer4.1.conv1.weight': ((0, 1048576), (594699, 1643275)), 'layer4.1.bn1.weight': ((0, 512), (1643275, 1643787)), 'layer4.1.bn1.bias': ((0, 512), (1643787, 1644299)), 'layer4.1.conv2.weight': ((0, 2359296), (1644299, 4003595)), 'layer4.1.bn2.weight': ((0, 512), (4003595, 4004107)), 'layer4.1.bn2.bias': ((0, 512), (4004107, 4004619)), 'layer4.1.conv3.weight': ((0, 1048576), (4004619, 5053195)), 'layer4.1.bn3.weight': ((0, 2048), (5053195, 5055243)), 'layer4.1.bn3.bias': ((0, 2048), (5055243, 5057291)), 'layer4.2.conv1.weight': ((0, 1048576), (5057291, 6105867)), 'layer4.2.bn1.weight': ((0, 512), (6105867, 6106379)), 'layer4.2.bn1.bias': ((0, 512), (6106379, 6106891)), 'layer4.2.conv2.weight': ((0, 2359296), (6106891, 8466187)), 'layer4.2.bn2.weight': ((0, 512), (8466187, 8466699)), 'layer4.2.bn2.bias': ((0, 512), (8466699, 8467211)), 'layer4.2.conv3.weight': ((0, 1048576), (8467211, 9515787)), 'layer4.2.bn3.weight': ((0, 2048), (9515787, 9517835)), 'layer4.2.bn3.bias': ((0, 2048), (9517835, 9519883)), 'fc.weight': ((0, 204800), (9519883, 9724683)), 'fc.bias': ((0, 100), (9724683, 9724783))}]
2025-06-08 08:37:42,667 [allreducer.py:660] INFO spar_key_groupidx_maps: {'conv1.weight': [0], 'bn1.weight': [0], 'bn1.bias': [0], 'layer1.0.conv1.weight': [0], 'layer1.0.bn1.weight': [0], 'layer1.0.bn1.bias': [0], 'layer1.0.conv2.weight': [0], 'layer1.0.bn2.weight': [0], 'layer1.0.bn2.bias': [0], 'layer1.0.conv3.weight': [0], 'layer1.0.bn3.weight': [0], 'layer1.0.bn3.bias': [0], 'layer1.0.downsample.0.weight': [0], 'layer1.0.downsample.1.weight': [0], 'layer1.0.downsample.1.bias': [0], 'layer1.1.conv1.weight': [0], 'layer1.1.bn1.weight': [0], 'layer1.1.bn1.bias': [0], 'layer1.1.conv2.weight': [0], 'layer1.1.bn2.weight': [0], 'layer1.1.bn2.bias': [0], 'layer1.1.conv3.weight': [0], 'layer1.1.bn3.weight': [0], 'layer1.1.bn3.bias': [0], 'layer1.2.conv1.weight': [0], 'layer1.2.bn1.weight': [0], 'layer1.2.bn1.bias': [0], 'layer1.2.conv2.weight': [0], 'layer1.2.bn2.weight': [0], 'layer1.2.bn2.bias': [0], 'layer1.2.conv3.weight': [0], 'layer1.2.bn3.weight': [0], 'layer1.2.bn3.bias': [0], 'layer2.0.conv1.weight': [0], 'layer2.0.bn1.weight': [0], 'layer2.0.bn1.bias': [0], 'layer2.0.conv2.weight': [0], 'layer2.0.bn2.weight': [0], 'layer2.0.bn2.bias': [0], 'layer2.0.conv3.weight': [0], 'layer2.0.bn3.weight': [0], 'layer2.0.bn3.bias': [0], 'layer2.0.downsample.0.weight': [0], 'layer2.0.downsample.1.weight': [0], 'layer2.0.downsample.1.bias': [0], 'layer2.1.conv1.weight': [0], 'layer2.1.bn1.weight': [0], 'layer2.1.bn1.bias': [0], 'layer2.1.conv2.weight': [0], 'layer2.1.bn2.weight': [0], 'layer2.1.bn2.bias': [0], 'layer2.1.conv3.weight': [0], 'layer2.1.bn3.weight': [0], 'layer2.1.bn3.bias': [0], 'layer2.2.conv1.weight': [0], 'layer2.2.bn1.weight': [0], 'layer2.2.bn1.bias': [0], 'layer2.2.conv2.weight': [0], 'layer2.2.bn2.weight': [0], 'layer2.2.bn2.bias': [0], 'layer2.2.conv3.weight': [0], 'layer2.2.bn3.weight': [0], 'layer2.2.bn3.bias': [0], 'layer2.3.conv1.weight': [0], 'layer2.3.bn1.weight': [0], 'layer2.3.bn1.bias': [0], 'layer2.3.conv2.weight': [0], 'layer2.3.bn2.weight': [0], 'layer2.3.bn2.bias': [0], 'layer2.3.conv3.weight': [0], 'layer2.3.bn3.weight': [0], 'layer2.3.bn3.bias': [0], 'layer2.4.conv1.weight': [0], 'layer2.4.bn1.weight': [0], 'layer2.4.bn1.bias': [0], 'layer2.4.conv2.weight': [0], 'layer2.4.bn2.weight': [0], 'layer2.4.bn2.bias': [0], 'layer2.4.conv3.weight': [0], 'layer2.4.bn3.weight': [0], 'layer2.4.bn3.bias': [0], 'layer2.5.conv1.weight': [0], 'layer2.5.bn1.weight': [0], 'layer2.5.bn1.bias': [0], 'layer2.5.conv2.weight': [0], 'layer2.5.bn2.weight': [0], 'layer2.5.bn2.bias': [0], 'layer2.5.conv3.weight': [0], 'layer2.5.bn3.weight': [0], 'layer2.5.bn3.bias': [0], 'layer2.6.conv1.weight': [0], 'layer2.6.bn1.weight': [0], 'layer2.6.bn1.bias': [0], 'layer2.6.conv2.weight': [0], 'layer2.6.bn2.weight': [0], 'layer2.6.bn2.bias': [0], 'layer2.6.conv3.weight': [0], 'layer2.6.bn3.weight': [0], 'layer2.6.bn3.bias': [0], 'layer2.7.conv1.weight': [0], 'layer2.7.bn1.weight': [0], 'layer2.7.bn1.bias': [0], 'layer2.7.conv2.weight': [0], 'layer2.7.bn2.weight': [0], 'layer2.7.bn2.bias': [0], 'layer2.7.conv3.weight': [0], 'layer2.7.bn3.weight': [0], 'layer2.7.bn3.bias': [0], 'layer3.0.conv1.weight': [0], 'layer3.0.bn1.weight': [0], 'layer3.0.bn1.bias': [0], 'layer3.0.conv2.weight': [0], 'layer3.0.bn2.weight': [0], 'layer3.0.bn2.bias': [0], 'layer3.0.conv3.weight': [0], 'layer3.0.bn3.weight': [0], 'layer3.0.bn3.bias': [0], 'layer3.0.downsample.0.weight': [0], 'layer3.0.downsample.1.weight': [0], 'layer3.0.downsample.1.bias': [0], 'layer3.1.conv1.weight': [0], 'layer3.1.bn1.weight': [0], 'layer3.1.bn1.bias': [0], 'layer3.1.conv2.weight': [0], 'layer3.1.bn2.weight': [0], 'layer3.1.bn2.bias': [0], 'layer3.1.conv3.weight': [0], 'layer3.1.bn3.weight': [0], 'layer3.1.bn3.bias': [0], 'layer3.2.conv1.weight': [0], 'layer3.2.bn1.weight': [0], 'layer3.2.bn1.bias': [0], 'layer3.2.conv2.weight': [0], 'layer3.2.bn2.weight': [0], 'layer3.2.bn2.bias': [0], 'layer3.2.conv3.weight': [0], 'layer3.2.bn3.weight': [0], 'layer3.2.bn3.bias': [0], 'layer3.3.conv1.weight': [0], 'layer3.3.bn1.weight': [0], 'layer3.3.bn1.bias': [0], 'layer3.3.conv2.weight': [0], 'layer3.3.bn2.weight': [0], 'layer3.3.bn2.bias': [0], 'layer3.3.conv3.weight': [0], 'layer3.3.bn3.weight': [0], 'layer3.3.bn3.bias': [0], 'layer3.4.conv1.weight': [0], 'layer3.4.bn1.weight': [0], 'layer3.4.bn1.bias': [0], 'layer3.4.conv2.weight': [0], 'layer3.4.bn2.weight': [0], 'layer3.4.bn2.bias': [0], 'layer3.4.conv3.weight': [0], 'layer3.4.bn3.weight': [0], 'layer3.4.bn3.bias': [0], 'layer3.5.conv1.weight': [0], 'layer3.5.bn1.weight': [0], 'layer3.5.bn1.bias': [0], 'layer3.5.conv2.weight': [0], 'layer3.5.bn2.weight': [0], 'layer3.5.bn2.bias': [0], 'layer3.5.conv3.weight': [0], 'layer3.5.bn3.weight': [0], 'layer3.5.bn3.bias': [0], 'layer3.6.conv1.weight': [0, 1], 'layer3.6.bn1.weight': [1], 'layer3.6.bn1.bias': [1], 'layer3.6.conv2.weight': [1], 'layer3.6.bn2.weight': [1], 'layer3.6.bn2.bias': [1], 'layer3.6.conv3.weight': [1], 'layer3.6.bn3.weight': [1], 'layer3.6.bn3.bias': [1], 'layer3.7.conv1.weight': [1], 'layer3.7.bn1.weight': [1], 'layer3.7.bn1.bias': [1], 'layer3.7.conv2.weight': [1], 'layer3.7.bn2.weight': [1], 'layer3.7.bn2.bias': [1], 'layer3.7.conv3.weight': [1], 'layer3.7.bn3.weight': [1], 'layer3.7.bn3.bias': [1], 'layer3.8.conv1.weight': [1], 'layer3.8.bn1.weight': [1], 'layer3.8.bn1.bias': [1], 'layer3.8.conv2.weight': [1], 'layer3.8.bn2.weight': [1], 'layer3.8.bn2.bias': [1], 'layer3.8.conv3.weight': [1], 'layer3.8.bn3.weight': [1], 'layer3.8.bn3.bias': [1], 'layer3.9.conv1.weight': [1], 'layer3.9.bn1.weight': [1], 'layer3.9.bn1.bias': [1], 'layer3.9.conv2.weight': [1], 'layer3.9.bn2.weight': [1], 'layer3.9.bn2.bias': [1], 'layer3.9.conv3.weight': [1], 'layer3.9.bn3.weight': [1], 'layer3.9.bn3.bias': [1], 'layer3.10.conv1.weight': [1], 'layer3.10.bn1.weight': [1], 'layer3.10.bn1.bias': [1], 'layer3.10.conv2.weight': [1], 'layer3.10.bn2.weight': [1], 'layer3.10.bn2.bias': [1], 'layer3.10.conv3.weight': [1], 'layer3.10.bn3.weight': [1], 'layer3.10.bn3.bias': [1], 'layer3.11.conv1.weight': [1], 'layer3.11.bn1.weight': [1], 'layer3.11.bn1.bias': [1], 'layer3.11.conv2.weight': [1], 'layer3.11.bn2.weight': [1], 'layer3.11.bn2.bias': [1], 'layer3.11.conv3.weight': [1], 'layer3.11.bn3.weight': [1], 'layer3.11.bn3.bias': [1], 'layer3.12.conv1.weight': [1], 'layer3.12.bn1.weight': [1], 'layer3.12.bn1.bias': [1], 'layer3.12.conv2.weight': [1], 'layer3.12.bn2.weight': [1], 'layer3.12.bn2.bias': [1], 'layer3.12.conv3.weight': [1], 'layer3.12.bn3.weight': [1], 'layer3.12.bn3.bias': [1], 'layer3.13.conv1.weight': [1], 'layer3.13.bn1.weight': [1], 'layer3.13.bn1.bias': [1], 'layer3.13.conv2.weight': [1], 'layer3.13.bn2.weight': [1], 'layer3.13.bn2.bias': [1], 'layer3.13.conv3.weight': [1], 'layer3.13.bn3.weight': [1], 'layer3.13.bn3.bias': [1], 'layer3.14.conv1.weight': [1], 'layer3.14.bn1.weight': [1], 'layer3.14.bn1.bias': [1], 'layer3.14.conv2.weight': [1, 2], 'layer3.14.bn2.weight': [2], 'layer3.14.bn2.bias': [2], 'layer3.14.conv3.weight': [2], 'layer3.14.bn3.weight': [2], 'layer3.14.bn3.bias': [2], 'layer3.15.conv1.weight': [2], 'layer3.15.bn1.weight': [2], 'layer3.15.bn1.bias': [2], 'layer3.15.conv2.weight': [2], 'layer3.15.bn2.weight': [2], 'layer3.15.bn2.bias': [2], 'layer3.15.conv3.weight': [2], 'layer3.15.bn3.weight': [2], 'layer3.15.bn3.bias': [2], 'layer3.16.conv1.weight': [2], 'layer3.16.bn1.weight': [2], 'layer3.16.bn1.bias': [2], 'layer3.16.conv2.weight': [2], 'layer3.16.bn2.weight': [2], 'layer3.16.bn2.bias': [2], 'layer3.16.conv3.weight': [2], 'layer3.16.bn3.weight': [2], 'layer3.16.bn3.bias': [2], 'layer3.17.conv1.weight': [2], 'layer3.17.bn1.weight': [2], 'layer3.17.bn1.bias': [2], 'layer3.17.conv2.weight': [2], 'layer3.17.bn2.weight': [2], 'layer3.17.bn2.bias': [2], 'layer3.17.conv3.weight': [2], 'layer3.17.bn3.weight': [2], 'layer3.17.bn3.bias': [2], 'layer3.18.conv1.weight': [2], 'layer3.18.bn1.weight': [2], 'layer3.18.bn1.bias': [2], 'layer3.18.conv2.weight': [2], 'layer3.18.bn2.weight': [2], 'layer3.18.bn2.bias': [2], 'layer3.18.conv3.weight': [2], 'layer3.18.bn3.weight': [2], 'layer3.18.bn3.bias': [2], 'layer3.19.conv1.weight': [2], 'layer3.19.bn1.weight': [2], 'layer3.19.bn1.bias': [2], 'layer3.19.conv2.weight': [2], 'layer3.19.bn2.weight': [2], 'layer3.19.bn2.bias': [2], 'layer3.19.conv3.weight': [2], 'layer3.19.bn3.weight': [2], 'layer3.19.bn3.bias': [2], 'layer3.20.conv1.weight': [2], 'layer3.20.bn1.weight': [2], 'layer3.20.bn1.bias': [2], 'layer3.20.conv2.weight': [2], 'layer3.20.bn2.weight': [2], 'layer3.20.bn2.bias': [2], 'layer3.20.conv3.weight': [2], 'layer3.20.bn3.weight': [2], 'layer3.20.bn3.bias': [2], 'layer3.21.conv1.weight': [2], 'layer3.21.bn1.weight': [2], 'layer3.21.bn1.bias': [2], 'layer3.21.conv2.weight': [2], 'layer3.21.bn2.weight': [2], 'layer3.21.bn2.bias': [2], 'layer3.21.conv3.weight': [2], 'layer3.21.bn3.weight': [2], 'layer3.21.bn3.bias': [2], 'layer3.22.conv1.weight': [2], 'layer3.22.bn1.weight': [2], 'layer3.22.bn1.bias': [2], 'layer3.22.conv2.weight': [2], 'layer3.22.bn2.weight': [2], 'layer3.22.bn2.bias': [2], 'layer3.22.conv3.weight': [2], 'layer3.22.bn3.weight': [2], 'layer3.22.bn3.bias': [2], 'layer3.23.conv1.weight': [2], 'layer3.23.bn1.weight': [2], 'layer3.23.bn1.bias': [2], 'layer3.23.conv2.weight': [2, 3], 'layer3.23.bn2.weight': [3], 'layer3.23.bn2.bias': [3], 'layer3.23.conv3.weight': [3], 'layer3.23.bn3.weight': [3], 'layer3.23.bn3.bias': [3], 'layer3.24.conv1.weight': [3], 'layer3.24.bn1.weight': [3], 'layer3.24.bn1.bias': [3], 'layer3.24.conv2.weight': [3], 'layer3.24.bn2.weight': [3], 'layer3.24.bn2.bias': [3], 'layer3.24.conv3.weight': [3], 'layer3.24.bn3.weight': [3], 'layer3.24.bn3.bias': [3], 'layer3.25.conv1.weight': [3], 'layer3.25.bn1.weight': [3], 'layer3.25.bn1.bias': [3], 'layer3.25.conv2.weight': [3], 'layer3.25.bn2.weight': [3], 'layer3.25.bn2.bias': [3], 'layer3.25.conv3.weight': [3], 'layer3.25.bn3.weight': [3], 'layer3.25.bn3.bias': [3], 'layer3.26.conv1.weight': [3], 'layer3.26.bn1.weight': [3], 'layer3.26.bn1.bias': [3], 'layer3.26.conv2.weight': [3], 'layer3.26.bn2.weight': [3], 'layer3.26.bn2.bias': [3], 'layer3.26.conv3.weight': [3], 'layer3.26.bn3.weight': [3], 'layer3.26.bn3.bias': [3], 'layer3.27.conv1.weight': [3], 'layer3.27.bn1.weight': [3], 'layer3.27.bn1.bias': [3], 'layer3.27.conv2.weight': [3], 'layer3.27.bn2.weight': [3], 'layer3.27.bn2.bias': [3], 'layer3.27.conv3.weight': [3], 'layer3.27.bn3.weight': [3], 'layer3.27.bn3.bias': [3], 'layer3.28.conv1.weight': [3], 'layer3.28.bn1.weight': [3], 'layer3.28.bn1.bias': [3], 'layer3.28.conv2.weight': [3], 'layer3.28.bn2.weight': [3], 'layer3.28.bn2.bias': [3], 'layer3.28.conv3.weight': [3], 'layer3.28.bn3.weight': [3], 'layer3.28.bn3.bias': [3], 'layer3.29.conv1.weight': [3], 'layer3.29.bn1.weight': [3], 'layer3.29.bn1.bias': [3], 'layer3.29.conv2.weight': [3], 'layer3.29.bn2.weight': [3], 'layer3.29.bn2.bias': [3], 'layer3.29.conv3.weight': [3], 'layer3.29.bn3.weight': [3], 'layer3.29.bn3.bias': [3], 'layer3.30.conv1.weight': [3], 'layer3.30.bn1.weight': [3], 'layer3.30.bn1.bias': [3], 'layer3.30.conv2.weight': [3], 'layer3.30.bn2.weight': [3], 'layer3.30.bn2.bias': [3], 'layer3.30.conv3.weight': [3], 'layer3.30.bn3.weight': [3], 'layer3.30.bn3.bias': [3], 'layer3.31.conv1.weight': [3], 'layer3.31.bn1.weight': [3], 'layer3.31.bn1.bias': [3], 'layer3.31.conv2.weight': [3], 'layer3.31.bn2.weight': [3], 'layer3.31.bn2.bias': [3], 'layer3.31.conv3.weight': [3], 'layer3.31.bn3.weight': [3], 'layer3.31.bn3.bias': [3], 'layer3.32.conv1.weight': [3, 4], 'layer3.32.bn1.weight': [4], 'layer3.32.bn1.bias': [4], 'layer3.32.conv2.weight': [4], 'layer3.32.bn2.weight': [4], 'layer3.32.bn2.bias': [4], 'layer3.32.conv3.weight': [4], 'layer3.32.bn3.weight': [4], 'layer3.32.bn3.bias': [4], 'layer3.33.conv1.weight': [4], 'layer3.33.bn1.weight': [4], 'layer3.33.bn1.bias': [4], 'layer3.33.conv2.weight': [4], 'layer3.33.bn2.weight': [4], 'layer3.33.bn2.bias': [4], 'layer3.33.conv3.weight': [4], 'layer3.33.bn3.weight': [4], 'layer3.33.bn3.bias': [4], 'layer3.34.conv1.weight': [4], 'layer3.34.bn1.weight': [4], 'layer3.34.bn1.bias': [4], 'layer3.34.conv2.weight': [4], 'layer3.34.bn2.weight': [4], 'layer3.34.bn2.bias': [4], 'layer3.34.conv3.weight': [4], 'layer3.34.bn3.weight': [4], 'layer3.34.bn3.bias': [4], 'layer3.35.conv1.weight': [4], 'layer3.35.bn1.weight': [4], 'layer3.35.bn1.bias': [4], 'layer3.35.conv2.weight': [4], 'layer3.35.bn2.weight': [4], 'layer3.35.bn2.bias': [4], 'layer3.35.conv3.weight': [4], 'layer3.35.bn3.weight': [4], 'layer3.35.bn3.bias': [4], 'layer4.0.conv1.weight': [4], 'layer4.0.bn1.weight': [4], 'layer4.0.bn1.bias': [4], 'layer4.0.conv2.weight': [4], 'layer4.0.bn2.weight': [4], 'layer4.0.bn2.bias': [4], 'layer4.0.conv3.weight': [4], 'layer4.0.bn3.weight': [4], 'layer4.0.bn3.bias': [4], 'layer4.0.downsample.0.weight': [4, 5], 'layer4.0.downsample.1.weight': [5], 'layer4.0.downsample.1.bias': [5], 'layer4.1.conv1.weight': [5], 'layer4.1.bn1.weight': [5], 'layer4.1.bn1.bias': [5], 'layer4.1.conv2.weight': [5], 'layer4.1.bn2.weight': [5], 'layer4.1.bn2.bias': [5], 'layer4.1.conv3.weight': [5], 'layer4.1.bn3.weight': [5], 'layer4.1.bn3.bias': [5], 'layer4.2.conv1.weight': [5], 'layer4.2.bn1.weight': [5], 'layer4.2.bn1.bias': [5], 'layer4.2.conv2.weight': [5], 'layer4.2.bn2.weight': [5], 'layer4.2.bn2.bias': [5], 'layer4.2.conv3.weight': [5], 'layer4.2.bn3.weight': [5], 'layer4.2.bn3.bias': [5], 'fc.weight': [5], 'fc.bias': [5]}
2025-06-08 08:37:42,668 [allreducer.py:984] INFO Allreducer thread started ...
2025-06-08 08:37:42,669 [main_trainer.py:130] INFO Start training ....
2025-06-08 08:42:40,903 [main_trainer.py:298] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-08 08:42:40,903 [main_trainer.py:299] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-08 08:42:46,621 [dl_trainer.py:292] INFO target_sparsities: [1.0]
2025-06-08 08:42:46,622 [dl_trainer.py:302] INFO num_batches_per_epoch: 520
2025-06-08 08:42:46,623 [main_trainer.py:88] INFO Broadcast parameters....
2025-06-08 08:42:47,762 [main_trainer.py:107] INFO Broadcast parameters finished....
2025-06-08 08:42:47,850 [allreducer.py:282] INFO density: 0.010000
2025-06-08 08:42:47,851 [allreducer.py:283] INFO threshold scale: 1.092000
2025-06-08 08:42:47,854 [allreducer.py:671] INFO groups: [['fc.bias', 'fc.weight', 'layer4.2.bn3.bias', 'layer4.2.bn3.weight', 'layer4.2.conv3.weight', 'layer4.2.bn2.bias', 'layer4.2.bn2.weight', 'layer4.2.conv2.weight', 'layer4.2.bn1.bias', 'layer4.2.bn1.weight', 'layer4.2.conv1.weight', 'layer4.1.bn3.bias', 'layer4.1.bn3.weight', 'layer4.1.conv3.weight', 'layer4.1.bn2.bias', 'layer4.1.bn2.weight', 'layer4.1.conv2.weight', 'layer4.1.bn1.bias', 'layer4.1.bn1.weight', 'layer4.1.conv1.weight', 'layer4.0.downsample.1.bias', 'layer4.0.downsample.1.weight', 'layer4.0.downsample.0.weight', 'layer4.0.bn3.bias', 'layer4.0.bn3.weight', 'layer4.0.conv3.weight', 'layer4.0.bn2.bias', 'layer4.0.bn2.weight', 'layer4.0.conv2.weight', 'layer4.0.bn1.bias', 'layer4.0.bn1.weight', 'layer4.0.conv1.weight', 'layer3.35.bn3.bias', 'layer3.35.bn3.weight', 'layer3.35.conv3.weight', 'layer3.35.bn2.bias', 'layer3.35.bn2.weight', 'layer3.35.conv2.weight', 'layer3.35.bn1.bias', 'layer3.35.bn1.weight', 'layer3.35.conv1.weight', 'layer3.34.bn3.bias', 'layer3.34.bn3.weight', 'layer3.34.conv3.weight', 'layer3.34.bn2.bias', 'layer3.34.bn2.weight', 'layer3.34.conv2.weight', 'layer3.34.bn1.bias', 'layer3.34.bn1.weight', 'layer3.34.conv1.weight', 'layer3.33.bn3.bias', 'layer3.33.bn3.weight', 'layer3.33.conv3.weight', 'layer3.33.bn2.bias', 'layer3.33.bn2.weight', 'layer3.33.conv2.weight', 'layer3.33.bn1.bias', 'layer3.33.bn1.weight', 'layer3.33.conv1.weight', 'layer3.32.bn3.bias', 'layer3.32.bn3.weight', 'layer3.32.conv3.weight', 'layer3.32.bn2.bias', 'layer3.32.bn2.weight', 'layer3.32.conv2.weight', 'layer3.32.bn1.bias', 'layer3.32.bn1.weight', 'layer3.32.conv1.weight', 'layer3.31.bn3.bias', 'layer3.31.bn3.weight', 'layer3.31.conv3.weight', 'layer3.31.bn2.bias', 'layer3.31.bn2.weight', 'layer3.31.conv2.weight', 'layer3.31.bn1.bias', 'layer3.31.bn1.weight', 'layer3.31.conv1.weight', 'layer3.30.bn3.bias', 'layer3.30.bn3.weight', 'layer3.30.conv3.weight', 'layer3.30.bn2.bias', 'layer3.30.bn2.weight', 'layer3.30.conv2.weight', 'layer3.30.bn1.bias', 'layer3.30.bn1.weight', 'layer3.30.conv1.weight', 'layer3.29.bn3.bias', 'layer3.29.bn3.weight', 'layer3.29.conv3.weight', 'layer3.29.bn2.bias', 'layer3.29.bn2.weight', 'layer3.29.conv2.weight', 'layer3.29.bn1.bias', 'layer3.29.bn1.weight', 'layer3.29.conv1.weight', 'layer3.28.bn3.bias', 'layer3.28.bn3.weight', 'layer3.28.conv3.weight', 'layer3.28.bn2.bias', 'layer3.28.bn2.weight', 'layer3.28.conv2.weight', 'layer3.28.bn1.bias', 'layer3.28.bn1.weight', 'layer3.28.conv1.weight', 'layer3.27.bn3.bias', 'layer3.27.bn3.weight', 'layer3.27.conv3.weight', 'layer3.27.bn2.bias', 'layer3.27.bn2.weight', 'layer3.27.conv2.weight', 'layer3.27.bn1.bias', 'layer3.27.bn1.weight', 'layer3.27.conv1.weight', 'layer3.26.bn3.bias', 'layer3.26.bn3.weight', 'layer3.26.conv3.weight', 'layer3.26.bn2.bias', 'layer3.26.bn2.weight', 'layer3.26.conv2.weight', 'layer3.26.bn1.bias', 'layer3.26.bn1.weight', 'layer3.26.conv1.weight', 'layer3.25.bn3.bias', 'layer3.25.bn3.weight', 'layer3.25.conv3.weight', 'layer3.25.bn2.bias', 'layer3.25.bn2.weight', 'layer3.25.conv2.weight', 'layer3.25.bn1.bias', 'layer3.25.bn1.weight', 'layer3.25.conv1.weight', 'layer3.24.bn3.bias', 'layer3.24.bn3.weight', 'layer3.24.conv3.weight', 'layer3.24.bn2.bias', 'layer3.24.bn2.weight', 'layer3.24.conv2.weight', 'layer3.24.bn1.bias', 'layer3.24.bn1.weight', 'layer3.24.conv1.weight', 'layer3.23.bn3.bias', 'layer3.23.bn3.weight', 'layer3.23.conv3.weight', 'layer3.23.bn2.bias', 'layer3.23.bn2.weight', 'layer3.23.conv2.weight', 'layer3.23.bn1.bias', 'layer3.23.bn1.weight', 'layer3.23.conv1.weight', 'layer3.22.bn3.bias', 'layer3.22.bn3.weight', 'layer3.22.conv3.weight', 'layer3.22.bn2.bias', 'layer3.22.bn2.weight', 'layer3.22.conv2.weight', 'layer3.22.bn1.bias', 'layer3.22.bn1.weight', 'layer3.22.conv1.weight', 'layer3.21.bn3.bias', 'layer3.21.bn3.weight', 'layer3.21.conv3.weight', 'layer3.21.bn2.bias', 'layer3.21.bn2.weight', 'layer3.21.conv2.weight', 'layer3.21.bn1.bias', 'layer3.21.bn1.weight', 'layer3.21.conv1.weight', 'layer3.20.bn3.bias', 'layer3.20.bn3.weight', 'layer3.20.conv3.weight', 'layer3.20.bn2.bias', 'layer3.20.bn2.weight', 'layer3.20.conv2.weight', 'layer3.20.bn1.bias', 'layer3.20.bn1.weight', 'layer3.20.conv1.weight', 'layer3.19.bn3.bias', 'layer3.19.bn3.weight', 'layer3.19.conv3.weight', 'layer3.19.bn2.bias', 'layer3.19.bn2.weight', 'layer3.19.conv2.weight', 'layer3.19.bn1.bias', 'layer3.19.bn1.weight', 'layer3.19.conv1.weight', 'layer3.18.bn3.bias', 'layer3.18.bn3.weight', 'layer3.18.conv3.weight', 'layer3.18.bn2.bias', 'layer3.18.bn2.weight', 'layer3.18.conv2.weight', 'layer3.18.bn1.bias', 'layer3.18.bn1.weight', 'layer3.18.conv1.weight', 'layer3.17.bn3.bias', 'layer3.17.bn3.weight', 'layer3.17.conv3.weight', 'layer3.17.bn2.bias', 'layer3.17.bn2.weight', 'layer3.17.conv2.weight', 'layer3.17.bn1.bias', 'layer3.17.bn1.weight', 'layer3.17.conv1.weight', 'layer3.16.bn3.bias', 'layer3.16.bn3.weight', 'layer3.16.conv3.weight', 'layer3.16.bn2.bias', 'layer3.16.bn2.weight', 'layer3.16.conv2.weight', 'layer3.16.bn1.bias', 'layer3.16.bn1.weight', 'layer3.16.conv1.weight', 'layer3.15.bn3.bias', 'layer3.15.bn3.weight', 'layer3.15.conv3.weight', 'layer3.15.bn2.bias', 'layer3.15.bn2.weight', 'layer3.15.conv2.weight', 'layer3.15.bn1.bias', 'layer3.15.bn1.weight', 'layer3.15.conv1.weight', 'layer3.14.bn3.bias', 'layer3.14.bn3.weight', 'layer3.14.conv3.weight', 'layer3.14.bn2.bias', 'layer3.14.bn2.weight', 'layer3.14.conv2.weight', 'layer3.14.bn1.bias', 'layer3.14.bn1.weight', 'layer3.14.conv1.weight', 'layer3.13.bn3.bias', 'layer3.13.bn3.weight', 'layer3.13.conv3.weight', 'layer3.13.bn2.bias', 'layer3.13.bn2.weight', 'layer3.13.conv2.weight', 'layer3.13.bn1.bias', 'layer3.13.bn1.weight', 'layer3.13.conv1.weight', 'layer3.12.bn3.bias', 'layer3.12.bn3.weight', 'layer3.12.conv3.weight', 'layer3.12.bn2.bias', 'layer3.12.bn2.weight', 'layer3.12.conv2.weight', 'layer3.12.bn1.bias', 'layer3.12.bn1.weight', 'layer3.12.conv1.weight', 'layer3.11.bn3.bias', 'layer3.11.bn3.weight', 'layer3.11.conv3.weight', 'layer3.11.bn2.bias', 'layer3.11.bn2.weight', 'layer3.11.conv2.weight', 'layer3.11.bn1.bias', 'layer3.11.bn1.weight', 'layer3.11.conv1.weight', 'layer3.10.bn3.bias', 'layer3.10.bn3.weight', 'layer3.10.conv3.weight', 'layer3.10.bn2.bias', 'layer3.10.bn2.weight', 'layer3.10.conv2.weight', 'layer3.10.bn1.bias', 'layer3.10.bn1.weight', 'layer3.10.conv1.weight', 'layer3.9.bn3.bias', 'layer3.9.bn3.weight', 'layer3.9.conv3.weight', 'layer3.9.bn2.bias', 'layer3.9.bn2.weight', 'layer3.9.conv2.weight', 'layer3.9.bn1.bias', 'layer3.9.bn1.weight', 'layer3.9.conv1.weight', 'layer3.8.bn3.bias', 'layer3.8.bn3.weight', 'layer3.8.conv3.weight', 'layer3.8.bn2.bias', 'layer3.8.bn2.weight', 'layer3.8.conv2.weight', 'layer3.8.bn1.bias', 'layer3.8.bn1.weight', 'layer3.8.conv1.weight', 'layer3.7.bn3.bias', 'layer3.7.bn3.weight', 'layer3.7.conv3.weight', 'layer3.7.bn2.bias', 'layer3.7.bn2.weight', 'layer3.7.conv2.weight', 'layer3.7.bn1.bias', 'layer3.7.bn1.weight', 'layer3.7.conv1.weight', 'layer3.6.bn3.bias', 'layer3.6.bn3.weight', 'layer3.6.conv3.weight', 'layer3.6.bn2.bias', 'layer3.6.bn2.weight', 'layer3.6.conv2.weight', 'layer3.6.bn1.bias', 'layer3.6.bn1.weight', 'layer3.6.conv1.weight', 'layer3.5.bn3.bias', 'layer3.5.bn3.weight', 'layer3.5.conv3.weight', 'layer3.5.bn2.bias', 'layer3.5.bn2.weight', 'layer3.5.conv2.weight', 'layer3.5.bn1.bias', 'layer3.5.bn1.weight', 'layer3.5.conv1.weight', 'layer3.4.bn3.bias', 'layer3.4.bn3.weight', 'layer3.4.conv3.weight', 'layer3.4.bn2.bias', 'layer3.4.bn2.weight', 'layer3.4.conv2.weight', 'layer3.4.bn1.bias', 'layer3.4.bn1.weight', 'layer3.4.conv1.weight', 'layer3.3.bn3.bias', 'layer3.3.bn3.weight', 'layer3.3.conv3.weight', 'layer3.3.bn2.bias', 'layer3.3.bn2.weight', 'layer3.3.conv2.weight', 'layer3.3.bn1.bias', 'layer3.3.bn1.weight', 'layer3.3.conv1.weight', 'layer3.2.bn3.bias', 'layer3.2.bn3.weight', 'layer3.2.conv3.weight', 'layer3.2.bn2.bias', 'layer3.2.bn2.weight', 'layer3.2.conv2.weight', 'layer3.2.bn1.bias', 'layer3.2.bn1.weight', 'layer3.2.conv1.weight', 'layer3.1.bn3.bias', 'layer3.1.bn3.weight', 'layer3.1.conv3.weight', 'layer3.1.bn2.bias', 'layer3.1.bn2.weight', 'layer3.1.conv2.weight', 'layer3.1.bn1.bias', 'layer3.1.bn1.weight', 'layer3.1.conv1.weight', 'layer3.0.downsample.1.bias', 'layer3.0.downsample.1.weight', 'layer3.0.downsample.0.weight', 'layer3.0.bn3.bias', 'layer3.0.bn3.weight', 'layer3.0.conv3.weight', 'layer3.0.bn2.bias', 'layer3.0.bn2.weight', 'layer3.0.conv2.weight', 'layer3.0.bn1.bias', 'layer3.0.bn1.weight', 'layer3.0.conv1.weight', 'layer2.7.bn3.bias', 'layer2.7.bn3.weight', 'layer2.7.conv3.weight', 'layer2.7.bn2.bias', 'layer2.7.bn2.weight', 'layer2.7.conv2.weight', 'layer2.7.bn1.bias', 'layer2.7.bn1.weight', 'layer2.7.conv1.weight', 'layer2.6.bn3.bias', 'layer2.6.bn3.weight', 'layer2.6.conv3.weight', 'layer2.6.bn2.bias', 'layer2.6.bn2.weight', 'layer2.6.conv2.weight', 'layer2.6.bn1.bias', 'layer2.6.bn1.weight', 'layer2.6.conv1.weight', 'layer2.5.bn3.bias', 'layer2.5.bn3.weight', 'layer2.5.conv3.weight', 'layer2.5.bn2.bias', 'layer2.5.bn2.weight', 'layer2.5.conv2.weight', 'layer2.5.bn1.bias', 'layer2.5.bn1.weight', 'layer2.5.conv1.weight', 'layer2.4.bn3.bias', 'layer2.4.bn3.weight', 'layer2.4.conv3.weight', 'layer2.4.bn2.bias', 'layer2.4.bn2.weight', 'layer2.4.conv2.weight', 'layer2.4.bn1.bias', 'layer2.4.bn1.weight', 'layer2.4.conv1.weight', 'layer2.3.bn3.bias', 'layer2.3.bn3.weight', 'layer2.3.conv3.weight', 'layer2.3.bn2.bias', 'layer2.3.bn2.weight', 'layer2.3.conv2.weight', 'layer2.3.bn1.bias', 'layer2.3.bn1.weight', 'layer2.3.conv1.weight', 'layer2.2.bn3.bias', 'layer2.2.bn3.weight', 'layer2.2.conv3.weight', 'layer2.2.bn2.bias', 'layer2.2.bn2.weight', 'layer2.2.conv2.weight', 'layer2.2.bn1.bias', 'layer2.2.bn1.weight', 'layer2.2.conv1.weight', 'layer2.1.bn3.bias', 'layer2.1.bn3.weight', 'layer2.1.conv3.weight', 'layer2.1.bn2.bias', 'layer2.1.bn2.weight', 'layer2.1.conv2.weight', 'layer2.1.bn1.bias', 'layer2.1.bn1.weight', 'layer2.1.conv1.weight', 'layer2.0.downsample.1.bias', 'layer2.0.downsample.1.weight', 'layer2.0.downsample.0.weight', 'layer2.0.bn3.bias', 'layer2.0.bn3.weight', 'layer2.0.conv3.weight', 'layer2.0.bn2.bias', 'layer2.0.bn2.weight', 'layer2.0.conv2.weight', 'layer2.0.bn1.bias', 'layer2.0.bn1.weight', 'layer2.0.conv1.weight', 'layer1.2.bn3.bias', 'layer1.2.bn3.weight', 'layer1.2.conv3.weight', 'layer1.2.bn2.bias', 'layer1.2.bn2.weight', 'layer1.2.conv2.weight', 'layer1.2.bn1.bias', 'layer1.2.bn1.weight', 'layer1.2.conv1.weight', 'layer1.1.bn3.bias', 'layer1.1.bn3.weight', 'layer1.1.conv3.weight', 'layer1.1.bn2.bias', 'layer1.1.bn2.weight', 'layer1.1.conv2.weight', 'layer1.1.bn1.bias', 'layer1.1.bn1.weight', 'layer1.1.conv1.weight', 'layer1.0.downsample.1.bias', 'layer1.0.downsample.1.weight', 'layer1.0.downsample.0.weight', 'layer1.0.bn3.bias', 'layer1.0.bn3.weight', 'layer1.0.conv3.weight', 'layer1.0.bn2.bias', 'layer1.0.bn2.weight', 'layer1.0.conv2.weight', 'layer1.0.bn1.bias', 'layer1.0.bn1.weight', 'layer1.0.conv1.weight', 'bn1.bias', 'bn1.weight', 'conv1.weight']]
2025-06-08 08:42:47,854 [allreducer.py:672] INFO key_groupidx_maps: {'fc.bias': 0, 'fc.weight': 0, 'layer4.2.bn3.bias': 0, 'layer4.2.bn3.weight': 0, 'layer4.2.conv3.weight': 0, 'layer4.2.bn2.bias': 0, 'layer4.2.bn2.weight': 0, 'layer4.2.conv2.weight': 0, 'layer4.2.bn1.bias': 0, 'layer4.2.bn1.weight': 0, 'layer4.2.conv1.weight': 0, 'layer4.1.bn3.bias': 0, 'layer4.1.bn3.weight': 0, 'layer4.1.conv3.weight': 0, 'layer4.1.bn2.bias': 0, 'layer4.1.bn2.weight': 0, 'layer4.1.conv2.weight': 0, 'layer4.1.bn1.bias': 0, 'layer4.1.bn1.weight': 0, 'layer4.1.conv1.weight': 0, 'layer4.0.downsample.1.bias': 0, 'layer4.0.downsample.1.weight': 0, 'layer4.0.downsample.0.weight': 0, 'layer4.0.bn3.bias': 0, 'layer4.0.bn3.weight': 0, 'layer4.0.conv3.weight': 0, 'layer4.0.bn2.bias': 0, 'layer4.0.bn2.weight': 0, 'layer4.0.conv2.weight': 0, 'layer4.0.bn1.bias': 0, 'layer4.0.bn1.weight': 0, 'layer4.0.conv1.weight': 0, 'layer3.35.bn3.bias': 0, 'layer3.35.bn3.weight': 0, 'layer3.35.conv3.weight': 0, 'layer3.35.bn2.bias': 0, 'layer3.35.bn2.weight': 0, 'layer3.35.conv2.weight': 0, 'layer3.35.bn1.bias': 0, 'layer3.35.bn1.weight': 0, 'layer3.35.conv1.weight': 0, 'layer3.34.bn3.bias': 0, 'layer3.34.bn3.weight': 0, 'layer3.34.conv3.weight': 0, 'layer3.34.bn2.bias': 0, 'layer3.34.bn2.weight': 0, 'layer3.34.conv2.weight': 0, 'layer3.34.bn1.bias': 0, 'layer3.34.bn1.weight': 0, 'layer3.34.conv1.weight': 0, 'layer3.33.bn3.bias': 0, 'layer3.33.bn3.weight': 0, 'layer3.33.conv3.weight': 0, 'layer3.33.bn2.bias': 0, 'layer3.33.bn2.weight': 0, 'layer3.33.conv2.weight': 0, 'layer3.33.bn1.bias': 0, 'layer3.33.bn1.weight': 0, 'layer3.33.conv1.weight': 0, 'layer3.32.bn3.bias': 0, 'layer3.32.bn3.weight': 0, 'layer3.32.conv3.weight': 0, 'layer3.32.bn2.bias': 0, 'layer3.32.bn2.weight': 0, 'layer3.32.conv2.weight': 0, 'layer3.32.bn1.bias': 0, 'layer3.32.bn1.weight': 0, 'layer3.32.conv1.weight': 0, 'layer3.31.bn3.bias': 0, 'layer3.31.bn3.weight': 0, 'layer3.31.conv3.weight': 0, 'layer3.31.bn2.bias': 0, 'layer3.31.bn2.weight': 0, 'layer3.31.conv2.weight': 0, 'layer3.31.bn1.bias': 0, 'layer3.31.bn1.weight': 0, 'layer3.31.conv1.weight': 0, 'layer3.30.bn3.bias': 0, 'layer3.30.bn3.weight': 0, 'layer3.30.conv3.weight': 0, 'layer3.30.bn2.bias': 0, 'layer3.30.bn2.weight': 0, 'layer3.30.conv2.weight': 0, 'layer3.30.bn1.bias': 0, 'layer3.30.bn1.weight': 0, 'layer3.30.conv1.weight': 0, 'layer3.29.bn3.bias': 0, 'layer3.29.bn3.weight': 0, 'layer3.29.conv3.weight': 0, 'layer3.29.bn2.bias': 0, 'layer3.29.bn2.weight': 0, 'layer3.29.conv2.weight': 0, 'layer3.29.bn1.bias': 0, 'layer3.29.bn1.weight': 0, 'layer3.29.conv1.weight': 0, 'layer3.28.bn3.bias': 0, 'layer3.28.bn3.weight': 0, 'layer3.28.conv3.weight': 0, 'layer3.28.bn2.bias': 0, 'layer3.28.bn2.weight': 0, 'layer3.28.conv2.weight': 0, 'layer3.28.bn1.bias': 0, 'layer3.28.bn1.weight': 0, 'layer3.28.conv1.weight': 0, 'layer3.27.bn3.bias': 0, 'layer3.27.bn3.weight': 0, 'layer3.27.conv3.weight': 0, 'layer3.27.bn2.bias': 0, 'layer3.27.bn2.weight': 0, 'layer3.27.conv2.weight': 0, 'layer3.27.bn1.bias': 0, 'layer3.27.bn1.weight': 0, 'layer3.27.conv1.weight': 0, 'layer3.26.bn3.bias': 0, 'layer3.26.bn3.weight': 0, 'layer3.26.conv3.weight': 0, 'layer3.26.bn2.bias': 0, 'layer3.26.bn2.weight': 0, 'layer3.26.conv2.weight': 0, 'layer3.26.bn1.bias': 0, 'layer3.26.bn1.weight': 0, 'layer3.26.conv1.weight': 0, 'layer3.25.bn3.bias': 0, 'layer3.25.bn3.weight': 0, 'layer3.25.conv3.weight': 0, 'layer3.25.bn2.bias': 0, 'layer3.25.bn2.weight': 0, 'layer3.25.conv2.weight': 0, 'layer3.25.bn1.bias': 0, 'layer3.25.bn1.weight': 0, 'layer3.25.conv1.weight': 0, 'layer3.24.bn3.bias': 0, 'layer3.24.bn3.weight': 0, 'layer3.24.conv3.weight': 0, 'layer3.24.bn2.bias': 0, 'layer3.24.bn2.weight': 0, 'layer3.24.conv2.weight': 0, 'layer3.24.bn1.bias': 0, 'layer3.24.bn1.weight': 0, 'layer3.24.conv1.weight': 0, 'layer3.23.bn3.bias': 0, 'layer3.23.bn3.weight': 0, 'layer3.23.conv3.weight': 0, 'layer3.23.bn2.bias': 0, 'layer3.23.bn2.weight': 0, 'layer3.23.conv2.weight': 0, 'layer3.23.bn1.bias': 0, 'layer3.23.bn1.weight': 0, 'layer3.23.conv1.weight': 0, 'layer3.22.bn3.bias': 0, 'layer3.22.bn3.weight': 0, 'layer3.22.conv3.weight': 0, 'layer3.22.bn2.bias': 0, 'layer3.22.bn2.weight': 0, 'layer3.22.conv2.weight': 0, 'layer3.22.bn1.bias': 0, 'layer3.22.bn1.weight': 0, 'layer3.22.conv1.weight': 0, 'layer3.21.bn3.bias': 0, 'layer3.21.bn3.weight': 0, 'layer3.21.conv3.weight': 0, 'layer3.21.bn2.bias': 0, 'layer3.21.bn2.weight': 0, 'layer3.21.conv2.weight': 0, 'layer3.21.bn1.bias': 0, 'layer3.21.bn1.weight': 0, 'layer3.21.conv1.weight': 0, 'layer3.20.bn3.bias': 0, 'layer3.20.bn3.weight': 0, 'layer3.20.conv3.weight': 0, 'layer3.20.bn2.bias': 0, 'layer3.20.bn2.weight': 0, 'layer3.20.conv2.weight': 0, 'layer3.20.bn1.bias': 0, 'layer3.20.bn1.weight': 0, 'layer3.20.conv1.weight': 0, 'layer3.19.bn3.bias': 0, 'layer3.19.bn3.weight': 0, 'layer3.19.conv3.weight': 0, 'layer3.19.bn2.bias': 0, 'layer3.19.bn2.weight': 0, 'layer3.19.conv2.weight': 0, 'layer3.19.bn1.bias': 0, 'layer3.19.bn1.weight': 0, 'layer3.19.conv1.weight': 0, 'layer3.18.bn3.bias': 0, 'layer3.18.bn3.weight': 0, 'layer3.18.conv3.weight': 0, 'layer3.18.bn2.bias': 0, 'layer3.18.bn2.weight': 0, 'layer3.18.conv2.weight': 0, 'layer3.18.bn1.bias': 0, 'layer3.18.bn1.weight': 0, 'layer3.18.conv1.weight': 0, 'layer3.17.bn3.bias': 0, 'layer3.17.bn3.weight': 0, 'layer3.17.conv3.weight': 0, 'layer3.17.bn2.bias': 0, 'layer3.17.bn2.weight': 0, 'layer3.17.conv2.weight': 0, 'layer3.17.bn1.bias': 0, 'layer3.17.bn1.weight': 0, 'layer3.17.conv1.weight': 0, 'layer3.16.bn3.bias': 0, 'layer3.16.bn3.weight': 0, 'layer3.16.conv3.weight': 0, 'layer3.16.bn2.bias': 0, 'layer3.16.bn2.weight': 0, 'layer3.16.conv2.weight': 0, 'layer3.16.bn1.bias': 0, 'layer3.16.bn1.weight': 0, 'layer3.16.conv1.weight': 0, 'layer3.15.bn3.bias': 0, 'layer3.15.bn3.weight': 0, 'layer3.15.conv3.weight': 0, 'layer3.15.bn2.bias': 0, 'layer3.15.bn2.weight': 0, 'layer3.15.conv2.weight': 0, 'layer3.15.bn1.bias': 0, 'layer3.15.bn1.weight': 0, 'layer3.15.conv1.weight': 0, 'layer3.14.bn3.bias': 0, 'layer3.14.bn3.weight': 0, 'layer3.14.conv3.weight': 0, 'layer3.14.bn2.bias': 0, 'layer3.14.bn2.weight': 0, 'layer3.14.conv2.weight': 0, 'layer3.14.bn1.bias': 0, 'layer3.14.bn1.weight': 0, 'layer3.14.conv1.weight': 0, 'layer3.13.bn3.bias': 0, 'layer3.13.bn3.weight': 0, 'layer3.13.conv3.weight': 0, 'layer3.13.bn2.bias': 0, 'layer3.13.bn2.weight': 0, 'layer3.13.conv2.weight': 0, 'layer3.13.bn1.bias': 0, 'layer3.13.bn1.weight': 0, 'layer3.13.conv1.weight': 0, 'layer3.12.bn3.bias': 0, 'layer3.12.bn3.weight': 0, 'layer3.12.conv3.weight': 0, 'layer3.12.bn2.bias': 0, 'layer3.12.bn2.weight': 0, 'layer3.12.conv2.weight': 0, 'layer3.12.bn1.bias': 0, 'layer3.12.bn1.weight': 0, 'layer3.12.conv1.weight': 0, 'layer3.11.bn3.bias': 0, 'layer3.11.bn3.weight': 0, 'layer3.11.conv3.weight': 0, 'layer3.11.bn2.bias': 0, 'layer3.11.bn2.weight': 0, 'layer3.11.conv2.weight': 0, 'layer3.11.bn1.bias': 0, 'layer3.11.bn1.weight': 0, 'layer3.11.conv1.weight': 0, 'layer3.10.bn3.bias': 0, 'layer3.10.bn3.weight': 0, 'layer3.10.conv3.weight': 0, 'layer3.10.bn2.bias': 0, 'layer3.10.bn2.weight': 0, 'layer3.10.conv2.weight': 0, 'layer3.10.bn1.bias': 0, 'layer3.10.bn1.weight': 0, 'layer3.10.conv1.weight': 0, 'layer3.9.bn3.bias': 0, 'layer3.9.bn3.weight': 0, 'layer3.9.conv3.weight': 0, 'layer3.9.bn2.bias': 0, 'layer3.9.bn2.weight': 0, 'layer3.9.conv2.weight': 0, 'layer3.9.bn1.bias': 0, 'layer3.9.bn1.weight': 0, 'layer3.9.conv1.weight': 0, 'layer3.8.bn3.bias': 0, 'layer3.8.bn3.weight': 0, 'layer3.8.conv3.weight': 0, 'layer3.8.bn2.bias': 0, 'layer3.8.bn2.weight': 0, 'layer3.8.conv2.weight': 0, 'layer3.8.bn1.bias': 0, 'layer3.8.bn1.weight': 0, 'layer3.8.conv1.weight': 0, 'layer3.7.bn3.bias': 0, 'layer3.7.bn3.weight': 0, 'layer3.7.conv3.weight': 0, 'layer3.7.bn2.bias': 0, 'layer3.7.bn2.weight': 0, 'layer3.7.conv2.weight': 0, 'layer3.7.bn1.bias': 0, 'layer3.7.bn1.weight': 0, 'layer3.7.conv1.weight': 0, 'layer3.6.bn3.bias': 0, 'layer3.6.bn3.weight': 0, 'layer3.6.conv3.weight': 0, 'layer3.6.bn2.bias': 0, 'layer3.6.bn2.weight': 0, 'layer3.6.conv2.weight': 0, 'layer3.6.bn1.bias': 0, 'layer3.6.bn1.weight': 0, 'layer3.6.conv1.weight': 0, 'layer3.5.bn3.bias': 0, 'layer3.5.bn3.weight': 0, 'layer3.5.conv3.weight': 0, 'layer3.5.bn2.bias': 0, 'layer3.5.bn2.weight': 0, 'layer3.5.conv2.weight': 0, 'layer3.5.bn1.bias': 0, 'layer3.5.bn1.weight': 0, 'layer3.5.conv1.weight': 0, 'layer3.4.bn3.bias': 0, 'layer3.4.bn3.weight': 0, 'layer3.4.conv3.weight': 0, 'layer3.4.bn2.bias': 0, 'layer3.4.bn2.weight': 0, 'layer3.4.conv2.weight': 0, 'layer3.4.bn1.bias': 0, 'layer3.4.bn1.weight': 0, 'layer3.4.conv1.weight': 0, 'layer3.3.bn3.bias': 0, 'layer3.3.bn3.weight': 0, 'layer3.3.conv3.weight': 0, 'layer3.3.bn2.bias': 0, 'layer3.3.bn2.weight': 0, 'layer3.3.conv2.weight': 0, 'layer3.3.bn1.bias': 0, 'layer3.3.bn1.weight': 0, 'layer3.3.conv1.weight': 0, 'layer3.2.bn3.bias': 0, 'layer3.2.bn3.weight': 0, 'layer3.2.conv3.weight': 0, 'layer3.2.bn2.bias': 0, 'layer3.2.bn2.weight': 0, 'layer3.2.conv2.weight': 0, 'layer3.2.bn1.bias': 0, 'layer3.2.bn1.weight': 0, 'layer3.2.conv1.weight': 0, 'layer3.1.bn3.bias': 0, 'layer3.1.bn3.weight': 0, 'layer3.1.conv3.weight': 0, 'layer3.1.bn2.bias': 0, 'layer3.1.bn2.weight': 0, 'layer3.1.conv2.weight': 0, 'layer3.1.bn1.bias': 0, 'layer3.1.bn1.weight': 0, 'layer3.1.conv1.weight': 0, 'layer3.0.downsample.1.bias': 0, 'layer3.0.downsample.1.weight': 0, 'layer3.0.downsample.0.weight': 0, 'layer3.0.bn3.bias': 0, 'layer3.0.bn3.weight': 0, 'layer3.0.conv3.weight': 0, 'layer3.0.bn2.bias': 0, 'layer3.0.bn2.weight': 0, 'layer3.0.conv2.weight': 0, 'layer3.0.bn1.bias': 0, 'layer3.0.bn1.weight': 0, 'layer3.0.conv1.weight': 0, 'layer2.7.bn3.bias': 0, 'layer2.7.bn3.weight': 0, 'layer2.7.conv3.weight': 0, 'layer2.7.bn2.bias': 0, 'layer2.7.bn2.weight': 0, 'layer2.7.conv2.weight': 0, 'layer2.7.bn1.bias': 0, 'layer2.7.bn1.weight': 0, 'layer2.7.conv1.weight': 0, 'layer2.6.bn3.bias': 0, 'layer2.6.bn3.weight': 0, 'layer2.6.conv3.weight': 0, 'layer2.6.bn2.bias': 0, 'layer2.6.bn2.weight': 0, 'layer2.6.conv2.weight': 0, 'layer2.6.bn1.bias': 0, 'layer2.6.bn1.weight': 0, 'layer2.6.conv1.weight': 0, 'layer2.5.bn3.bias': 0, 'layer2.5.bn3.weight': 0, 'layer2.5.conv3.weight': 0, 'layer2.5.bn2.bias': 0, 'layer2.5.bn2.weight': 0, 'layer2.5.conv2.weight': 0, 'layer2.5.bn1.bias': 0, 'layer2.5.bn1.weight': 0, 'layer2.5.conv1.weight': 0, 'layer2.4.bn3.bias': 0, 'layer2.4.bn3.weight': 0, 'layer2.4.conv3.weight': 0, 'layer2.4.bn2.bias': 0, 'layer2.4.bn2.weight': 0, 'layer2.4.conv2.weight': 0, 'layer2.4.bn1.bias': 0, 'layer2.4.bn1.weight': 0, 'layer2.4.conv1.weight': 0, 'layer2.3.bn3.bias': 0, 'layer2.3.bn3.weight': 0, 'layer2.3.conv3.weight': 0, 'layer2.3.bn2.bias': 0, 'layer2.3.bn2.weight': 0, 'layer2.3.conv2.weight': 0, 'layer2.3.bn1.bias': 0, 'layer2.3.bn1.weight': 0, 'layer2.3.conv1.weight': 0, 'layer2.2.bn3.bias': 0, 'layer2.2.bn3.weight': 0, 'layer2.2.conv3.weight': 0, 'layer2.2.bn2.bias': 0, 'layer2.2.bn2.weight': 0, 'layer2.2.conv2.weight': 0, 'layer2.2.bn1.bias': 0, 'layer2.2.bn1.weight': 0, 'layer2.2.conv1.weight': 0, 'layer2.1.bn3.bias': 0, 'layer2.1.bn3.weight': 0, 'layer2.1.conv3.weight': 0, 'layer2.1.bn2.bias': 0, 'layer2.1.bn2.weight': 0, 'layer2.1.conv2.weight': 0, 'layer2.1.bn1.bias': 0, 'layer2.1.bn1.weight': 0, 'layer2.1.conv1.weight': 0, 'layer2.0.downsample.1.bias': 0, 'layer2.0.downsample.1.weight': 0, 'layer2.0.downsample.0.weight': 0, 'layer2.0.bn3.bias': 0, 'layer2.0.bn3.weight': 0, 'layer2.0.conv3.weight': 0, 'layer2.0.bn2.bias': 0, 'layer2.0.bn2.weight': 0, 'layer2.0.conv2.weight': 0, 'layer2.0.bn1.bias': 0, 'layer2.0.bn1.weight': 0, 'layer2.0.conv1.weight': 0, 'layer1.2.bn3.bias': 0, 'layer1.2.bn3.weight': 0, 'layer1.2.conv3.weight': 0, 'layer1.2.bn2.bias': 0, 'layer1.2.bn2.weight': 0, 'layer1.2.conv2.weight': 0, 'layer1.2.bn1.bias': 0, 'layer1.2.bn1.weight': 0, 'layer1.2.conv1.weight': 0, 'layer1.1.bn3.bias': 0, 'layer1.1.bn3.weight': 0, 'layer1.1.conv3.weight': 0, 'layer1.1.bn2.bias': 0, 'layer1.1.bn2.weight': 0, 'layer1.1.conv2.weight': 0, 'layer1.1.bn1.bias': 0, 'layer1.1.bn1.weight': 0, 'layer1.1.conv1.weight': 0, 'layer1.0.downsample.1.bias': 0, 'layer1.0.downsample.1.weight': 0, 'layer1.0.downsample.0.weight': 0, 'layer1.0.bn3.bias': 0, 'layer1.0.bn3.weight': 0, 'layer1.0.conv3.weight': 0, 'layer1.0.bn2.bias': 0, 'layer1.0.bn2.weight': 0, 'layer1.0.conv2.weight': 0, 'layer1.0.bn1.bias': 0, 'layer1.0.bn1.weight': 0, 'layer1.0.conv1.weight': 0, 'bn1.bias': 0, 'bn1.weight': 0, 'conv1.weight': 0}
2025-06-08 08:42:47,860 [allreducer.py:708] INFO offsets: 
2025-06-08 08:42:47,860 [allreducer.py:345] INFO dynamic densities = [0.01]
2025-06-08 08:42:47,873 [allreducer.py:659] INFO spar_groups: [{'conv1.weight': ((0, 9408), (0, 9408)), 'bn1.weight': ((0, 64), (9408, 9472)), 'bn1.bias': ((0, 64), (9472, 9536)), 'layer1.0.conv1.weight': ((0, 4096), (9536, 13632)), 'layer1.0.bn1.weight': ((0, 64), (13632, 13696)), 'layer1.0.bn1.bias': ((0, 64), (13696, 13760)), 'layer1.0.conv2.weight': ((0, 36864), (13760, 50624)), 'layer1.0.bn2.weight': ((0, 64), (50624, 50688)), 'layer1.0.bn2.bias': ((0, 64), (50688, 50752)), 'layer1.0.conv3.weight': ((0, 16384), (50752, 67136)), 'layer1.0.bn3.weight': ((0, 256), (67136, 67392)), 'layer1.0.bn3.bias': ((0, 256), (67392, 67648)), 'layer1.0.downsample.0.weight': ((0, 16384), (67648, 84032)), 'layer1.0.downsample.1.weight': ((0, 256), (84032, 84288)), 'layer1.0.downsample.1.bias': ((0, 256), (84288, 84544)), 'layer1.1.conv1.weight': ((0, 16384), (84544, 100928)), 'layer1.1.bn1.weight': ((0, 64), (100928, 100992)), 'layer1.1.bn1.bias': ((0, 64), (100992, 101056)), 'layer1.1.conv2.weight': ((0, 36864), (101056, 137920)), 'layer1.1.bn2.weight': ((0, 64), (137920, 137984)), 'layer1.1.bn2.bias': ((0, 64), (137984, 138048)), 'layer1.1.conv3.weight': ((0, 16384), (138048, 154432)), 'layer1.1.bn3.weight': ((0, 256), (154432, 154688)), 'layer1.1.bn3.bias': ((0, 256), (154688, 154944)), 'layer1.2.conv1.weight': ((0, 16384), (154944, 171328)), 'layer1.2.bn1.weight': ((0, 64), (171328, 171392)), 'layer1.2.bn1.bias': ((0, 64), (171392, 171456)), 'layer1.2.conv2.weight': ((0, 36864), (171456, 208320)), 'layer1.2.bn2.weight': ((0, 64), (208320, 208384)), 'layer1.2.bn2.bias': ((0, 64), (208384, 208448)), 'layer1.2.conv3.weight': ((0, 16384), (208448, 224832)), 'layer1.2.bn3.weight': ((0, 256), (224832, 225088)), 'layer1.2.bn3.bias': ((0, 256), (225088, 225344)), 'layer2.0.conv1.weight': ((0, 32768), (225344, 258112)), 'layer2.0.bn1.weight': ((0, 128), (258112, 258240)), 'layer2.0.bn1.bias': ((0, 128), (258240, 258368)), 'layer2.0.conv2.weight': ((0, 147456), (258368, 405824)), 'layer2.0.bn2.weight': ((0, 128), (405824, 405952)), 'layer2.0.bn2.bias': ((0, 128), (405952, 406080)), 'layer2.0.conv3.weight': ((0, 65536), (406080, 471616)), 'layer2.0.bn3.weight': ((0, 512), (471616, 472128)), 'layer2.0.bn3.bias': ((0, 512), (472128, 472640)), 'layer2.0.downsample.0.weight': ((0, 131072), (472640, 603712)), 'layer2.0.downsample.1.weight': ((0, 512), (603712, 604224)), 'layer2.0.downsample.1.bias': ((0, 512), (604224, 604736)), 'layer2.1.conv1.weight': ((0, 65536), (604736, 670272)), 'layer2.1.bn1.weight': ((0, 128), (670272, 670400)), 'layer2.1.bn1.bias': ((0, 128), (670400, 670528)), 'layer2.1.conv2.weight': ((0, 147456), (670528, 817984)), 'layer2.1.bn2.weight': ((0, 128), (817984, 818112)), 'layer2.1.bn2.bias': ((0, 128), (818112, 818240)), 'layer2.1.conv3.weight': ((0, 65536), (818240, 883776)), 'layer2.1.bn3.weight': ((0, 512), (883776, 884288)), 'layer2.1.bn3.bias': ((0, 512), (884288, 884800)), 'layer2.2.conv1.weight': ((0, 65536), (884800, 950336)), 'layer2.2.bn1.weight': ((0, 128), (950336, 950464)), 'layer2.2.bn1.bias': ((0, 128), (950464, 950592)), 'layer2.2.conv2.weight': ((0, 147456), (950592, 1098048)), 'layer2.2.bn2.weight': ((0, 128), (1098048, 1098176)), 'layer2.2.bn2.bias': ((0, 128), (1098176, 1098304)), 'layer2.2.conv3.weight': ((0, 65536), (1098304, 1163840)), 'layer2.2.bn3.weight': ((0, 512), (1163840, 1164352)), 'layer2.2.bn3.bias': ((0, 512), (1164352, 1164864)), 'layer2.3.conv1.weight': ((0, 65536), (1164864, 1230400)), 'layer2.3.bn1.weight': ((0, 128), (1230400, 1230528)), 'layer2.3.bn1.bias': ((0, 128), (1230528, 1230656)), 'layer2.3.conv2.weight': ((0, 147456), (1230656, 1378112)), 'layer2.3.bn2.weight': ((0, 128), (1378112, 1378240)), 'layer2.3.bn2.bias': ((0, 128), (1378240, 1378368)), 'layer2.3.conv3.weight': ((0, 65536), (1378368, 1443904)), 'layer2.3.bn3.weight': ((0, 512), (1443904, 1444416)), 'layer2.3.bn3.bias': ((0, 512), (1444416, 1444928)), 'layer2.4.conv1.weight': ((0, 65536), (1444928, 1510464)), 'layer2.4.bn1.weight': ((0, 128), (1510464, 1510592)), 'layer2.4.bn1.bias': ((0, 128), (1510592, 1510720)), 'layer2.4.conv2.weight': ((0, 147456), (1510720, 1658176)), 'layer2.4.bn2.weight': ((0, 128), (1658176, 1658304)), 'layer2.4.bn2.bias': ((0, 128), (1658304, 1658432)), 'layer2.4.conv3.weight': ((0, 65536), (1658432, 1723968)), 'layer2.4.bn3.weight': ((0, 512), (1723968, 1724480)), 'layer2.4.bn3.bias': ((0, 512), (1724480, 1724992)), 'layer2.5.conv1.weight': ((0, 65536), (1724992, 1790528)), 'layer2.5.bn1.weight': ((0, 128), (1790528, 1790656)), 'layer2.5.bn1.bias': ((0, 128), (1790656, 1790784)), 'layer2.5.conv2.weight': ((0, 147456), (1790784, 1938240)), 'layer2.5.bn2.weight': ((0, 128), (1938240, 1938368)), 'layer2.5.bn2.bias': ((0, 128), (1938368, 1938496)), 'layer2.5.conv3.weight': ((0, 65536), (1938496, 2004032)), 'layer2.5.bn3.weight': ((0, 512), (2004032, 2004544)), 'layer2.5.bn3.bias': ((0, 512), (2004544, 2005056)), 'layer2.6.conv1.weight': ((0, 65536), (2005056, 2070592)), 'layer2.6.bn1.weight': ((0, 128), (2070592, 2070720)), 'layer2.6.bn1.bias': ((0, 128), (2070720, 2070848)), 'layer2.6.conv2.weight': ((0, 147456), (2070848, 2218304)), 'layer2.6.bn2.weight': ((0, 128), (2218304, 2218432)), 'layer2.6.bn2.bias': ((0, 128), (2218432, 2218560)), 'layer2.6.conv3.weight': ((0, 65536), (2218560, 2284096)), 'layer2.6.bn3.weight': ((0, 512), (2284096, 2284608)), 'layer2.6.bn3.bias': ((0, 512), (2284608, 2285120)), 'layer2.7.conv1.weight': ((0, 65536), (2285120, 2350656)), 'layer2.7.bn1.weight': ((0, 128), (2350656, 2350784)), 'layer2.7.bn1.bias': ((0, 128), (2350784, 2350912)), 'layer2.7.conv2.weight': ((0, 147456), (2350912, 2498368)), 'layer2.7.bn2.weight': ((0, 128), (2498368, 2498496)), 'layer2.7.bn2.bias': ((0, 128), (2498496, 2498624)), 'layer2.7.conv3.weight': ((0, 65536), (2498624, 2564160)), 'layer2.7.bn3.weight': ((0, 512), (2564160, 2564672)), 'layer2.7.bn3.bias': ((0, 512), (2564672, 2565184)), 'layer3.0.conv1.weight': ((0, 131072), (2565184, 2696256)), 'layer3.0.bn1.weight': ((0, 256), (2696256, 2696512)), 'layer3.0.bn1.bias': ((0, 256), (2696512, 2696768)), 'layer3.0.conv2.weight': ((0, 589824), (2696768, 3286592)), 'layer3.0.bn2.weight': ((0, 256), (3286592, 3286848)), 'layer3.0.bn2.bias': ((0, 256), (3286848, 3287104)), 'layer3.0.conv3.weight': ((0, 262144), (3287104, 3549248)), 'layer3.0.bn3.weight': ((0, 1024), (3549248, 3550272)), 'layer3.0.bn3.bias': ((0, 1024), (3550272, 3551296)), 'layer3.0.downsample.0.weight': ((0, 524288), (3551296, 4075584)), 'layer3.0.downsample.1.weight': ((0, 1024), (4075584, 4076608)), 'layer3.0.downsample.1.bias': ((0, 1024), (4076608, 4077632)), 'layer3.1.conv1.weight': ((0, 262144), (4077632, 4339776)), 'layer3.1.bn1.weight': ((0, 256), (4339776, 4340032)), 'layer3.1.bn1.bias': ((0, 256), (4340032, 4340288)), 'layer3.1.conv2.weight': ((0, 589824), (4340288, 4930112)), 'layer3.1.bn2.weight': ((0, 256), (4930112, 4930368)), 'layer3.1.bn2.bias': ((0, 256), (4930368, 4930624)), 'layer3.1.conv3.weight': ((0, 262144), (4930624, 5192768)), 'layer3.1.bn3.weight': ((0, 1024), (5192768, 5193792)), 'layer3.1.bn3.bias': ((0, 1024), (5193792, 5194816)), 'layer3.2.conv1.weight': ((0, 262144), (5194816, 5456960)), 'layer3.2.bn1.weight': ((0, 256), (5456960, 5457216)), 'layer3.2.bn1.bias': ((0, 256), (5457216, 5457472)), 'layer3.2.conv2.weight': ((0, 589824), (5457472, 6047296)), 'layer3.2.bn2.weight': ((0, 256), (6047296, 6047552)), 'layer3.2.bn2.bias': ((0, 256), (6047552, 6047808)), 'layer3.2.conv3.weight': ((0, 262144), (6047808, 6309952)), 'layer3.2.bn3.weight': ((0, 1024), (6309952, 6310976)), 'layer3.2.bn3.bias': ((0, 1024), (6310976, 6312000)), 'layer3.3.conv1.weight': ((0, 262144), (6312000, 6574144)), 'layer3.3.bn1.weight': ((0, 256), (6574144, 6574400)), 'layer3.3.bn1.bias': ((0, 256), (6574400, 6574656)), 'layer3.3.conv2.weight': ((0, 589824), (6574656, 7164480)), 'layer3.3.bn2.weight': ((0, 256), (7164480, 7164736)), 'layer3.3.bn2.bias': ((0, 256), (7164736, 7164992)), 'layer3.3.conv3.weight': ((0, 262144), (7164992, 7427136)), 'layer3.3.bn3.weight': ((0, 1024), (7427136, 7428160)), 'layer3.3.bn3.bias': ((0, 1024), (7428160, 7429184)), 'layer3.4.conv1.weight': ((0, 262144), (7429184, 7691328)), 'layer3.4.bn1.weight': ((0, 256), (7691328, 7691584)), 'layer3.4.bn1.bias': ((0, 256), (7691584, 7691840)), 'layer3.4.conv2.weight': ((0, 589824), (7691840, 8281664)), 'layer3.4.bn2.weight': ((0, 256), (8281664, 8281920)), 'layer3.4.bn2.bias': ((0, 256), (8281920, 8282176)), 'layer3.4.conv3.weight': ((0, 262144), (8282176, 8544320)), 'layer3.4.bn3.weight': ((0, 1024), (8544320, 8545344)), 'layer3.4.bn3.bias': ((0, 1024), (8545344, 8546368)), 'layer3.5.conv1.weight': ((0, 262144), (8546368, 8808512)), 'layer3.5.bn1.weight': ((0, 256), (8808512, 8808768)), 'layer3.5.bn1.bias': ((0, 256), (8808768, 8809024)), 'layer3.5.conv2.weight': ((0, 589824), (8809024, 9398848)), 'layer3.5.bn2.weight': ((0, 256), (9398848, 9399104)), 'layer3.5.bn2.bias': ((0, 256), (9399104, 9399360)), 'layer3.5.conv3.weight': ((0, 262144), (9399360, 9661504)), 'layer3.5.bn3.weight': ((0, 1024), (9661504, 9662528)), 'layer3.5.bn3.bias': ((0, 1024), (9662528, 9663552)), 'layer3.6.conv1.weight': ((0, 61233), (9663552, 9724785))}, {'layer3.6.conv1.weight': ((61233, 262144), (0, 200911)), 'layer3.6.bn1.weight': ((0, 256), (200911, 201167)), 'layer3.6.bn1.bias': ((0, 256), (201167, 201423)), 'layer3.6.conv2.weight': ((0, 589824), (201423, 791247)), 'layer3.6.bn2.weight': ((0, 256), (791247, 791503)), 'layer3.6.bn2.bias': ((0, 256), (791503, 791759)), 'layer3.6.conv3.weight': ((0, 262144), (791759, 1053903)), 'layer3.6.bn3.weight': ((0, 1024), (1053903, 1054927)), 'layer3.6.bn3.bias': ((0, 1024), (1054927, 1055951)), 'layer3.7.conv1.weight': ((0, 262144), (1055951, 1318095)), 'layer3.7.bn1.weight': ((0, 256), (1318095, 1318351)), 'layer3.7.bn1.bias': ((0, 256), (1318351, 1318607)), 'layer3.7.conv2.weight': ((0, 589824), (1318607, 1908431)), 'layer3.7.bn2.weight': ((0, 256), (1908431, 1908687)), 'layer3.7.bn2.bias': ((0, 256), (1908687, 1908943)), 'layer3.7.conv3.weight': ((0, 262144), (1908943, 2171087)), 'layer3.7.bn3.weight': ((0, 1024), (2171087, 2172111)), 'layer3.7.bn3.bias': ((0, 1024), (2172111, 2173135)), 'layer3.8.conv1.weight': ((0, 262144), (2173135, 2435279)), 'layer3.8.bn1.weight': ((0, 256), (2435279, 2435535)), 'layer3.8.bn1.bias': ((0, 256), (2435535, 2435791)), 'layer3.8.conv2.weight': ((0, 589824), (2435791, 3025615)), 'layer3.8.bn2.weight': ((0, 256), (3025615, 3025871)), 'layer3.8.bn2.bias': ((0, 256), (3025871, 3026127)), 'layer3.8.conv3.weight': ((0, 262144), (3026127, 3288271)), 'layer3.8.bn3.weight': ((0, 1024), (3288271, 3289295)), 'layer3.8.bn3.bias': ((0, 1024), (3289295, 3290319)), 'layer3.9.conv1.weight': ((0, 262144), (3290319, 3552463)), 'layer3.9.bn1.weight': ((0, 256), (3552463, 3552719)), 'layer3.9.bn1.bias': ((0, 256), (3552719, 3552975)), 'layer3.9.conv2.weight': ((0, 589824), (3552975, 4142799)), 'layer3.9.bn2.weight': ((0, 256), (4142799, 4143055)), 'layer3.9.bn2.bias': ((0, 256), (4143055, 4143311)), 'layer3.9.conv3.weight': ((0, 262144), (4143311, 4405455)), 'layer3.9.bn3.weight': ((0, 1024), (4405455, 4406479)), 'layer3.9.bn3.bias': ((0, 1024), (4406479, 4407503)), 'layer3.10.conv1.weight': ((0, 262144), (4407503, 4669647)), 'layer3.10.bn1.weight': ((0, 256), (4669647, 4669903)), 'layer3.10.bn1.bias': ((0, 256), (4669903, 4670159)), 'layer3.10.conv2.weight': ((0, 589824), (4670159, 5259983)), 'layer3.10.bn2.weight': ((0, 256), (5259983, 5260239)), 'layer3.10.bn2.bias': ((0, 256), (5260239, 5260495)), 'layer3.10.conv3.weight': ((0, 262144), (5260495, 5522639)), 'layer3.10.bn3.weight': ((0, 1024), (5522639, 5523663)), 'layer3.10.bn3.bias': ((0, 1024), (5523663, 5524687)), 'layer3.11.conv1.weight': ((0, 262144), (5524687, 5786831)), 'layer3.11.bn1.weight': ((0, 256), (5786831, 5787087)), 'layer3.11.bn1.bias': ((0, 256), (5787087, 5787343)), 'layer3.11.conv2.weight': ((0, 589824), (5787343, 6377167)), 'layer3.11.bn2.weight': ((0, 256), (6377167, 6377423)), 'layer3.11.bn2.bias': ((0, 256), (6377423, 6377679)), 'layer3.11.conv3.weight': ((0, 262144), (6377679, 6639823)), 'layer3.11.bn3.weight': ((0, 1024), (6639823, 6640847)), 'layer3.11.bn3.bias': ((0, 1024), (6640847, 6641871)), 'layer3.12.conv1.weight': ((0, 262144), (6641871, 6904015)), 'layer3.12.bn1.weight': ((0, 256), (6904015, 6904271)), 'layer3.12.bn1.bias': ((0, 256), (6904271, 6904527)), 'layer3.12.conv2.weight': ((0, 589824), (6904527, 7494351)), 'layer3.12.bn2.weight': ((0, 256), (7494351, 7494607)), 'layer3.12.bn2.bias': ((0, 256), (7494607, 7494863)), 'layer3.12.conv3.weight': ((0, 262144), (7494863, 7757007)), 'layer3.12.bn3.weight': ((0, 1024), (7757007, 7758031)), 'layer3.12.bn3.bias': ((0, 1024), (7758031, 7759055)), 'layer3.13.conv1.weight': ((0, 262144), (7759055, 8021199)), 'layer3.13.bn1.weight': ((0, 256), (8021199, 8021455)), 'layer3.13.bn1.bias': ((0, 256), (8021455, 8021711)), 'layer3.13.conv2.weight': ((0, 589824), (8021711, 8611535)), 'layer3.13.bn2.weight': ((0, 256), (8611535, 8611791)), 'layer3.13.bn2.bias': ((0, 256), (8611791, 8612047)), 'layer3.13.conv3.weight': ((0, 262144), (8612047, 8874191)), 'layer3.13.bn3.weight': ((0, 1024), (8874191, 8875215)), 'layer3.13.bn3.bias': ((0, 1024), (8875215, 8876239)), 'layer3.14.conv1.weight': ((0, 262144), (8876239, 9138383)), 'layer3.14.bn1.weight': ((0, 256), (9138383, 9138639)), 'layer3.14.bn1.bias': ((0, 256), (9138639, 9138895)), 'layer3.14.conv2.weight': ((0, 585890), (9138895, 9724785))}, {'layer3.14.conv2.weight': ((585890, 589824), (0, 3934)), 'layer3.14.bn2.weight': ((0, 256), (3934, 4190)), 'layer3.14.bn2.bias': ((0, 256), (4190, 4446)), 'layer3.14.conv3.weight': ((0, 262144), (4446, 266590)), 'layer3.14.bn3.weight': ((0, 1024), (266590, 267614)), 'layer3.14.bn3.bias': ((0, 1024), (267614, 268638)), 'layer3.15.conv1.weight': ((0, 262144), (268638, 530782)), 'layer3.15.bn1.weight': ((0, 256), (530782, 531038)), 'layer3.15.bn1.bias': ((0, 256), (531038, 531294)), 'layer3.15.conv2.weight': ((0, 589824), (531294, 1121118)), 'layer3.15.bn2.weight': ((0, 256), (1121118, 1121374)), 'layer3.15.bn2.bias': ((0, 256), (1121374, 1121630)), 'layer3.15.conv3.weight': ((0, 262144), (1121630, 1383774)), 'layer3.15.bn3.weight': ((0, 1024), (1383774, 1384798)), 'layer3.15.bn3.bias': ((0, 1024), (1384798, 1385822)), 'layer3.16.conv1.weight': ((0, 262144), (1385822, 1647966)), 'layer3.16.bn1.weight': ((0, 256), (1647966, 1648222)), 'layer3.16.bn1.bias': ((0, 256), (1648222, 1648478)), 'layer3.16.conv2.weight': ((0, 589824), (1648478, 2238302)), 'layer3.16.bn2.weight': ((0, 256), (2238302, 2238558)), 'layer3.16.bn2.bias': ((0, 256), (2238558, 2238814)), 'layer3.16.conv3.weight': ((0, 262144), (2238814, 2500958)), 'layer3.16.bn3.weight': ((0, 1024), (2500958, 2501982)), 'layer3.16.bn3.bias': ((0, 1024), (2501982, 2503006)), 'layer3.17.conv1.weight': ((0, 262144), (2503006, 2765150)), 'layer3.17.bn1.weight': ((0, 256), (2765150, 2765406)), 'layer3.17.bn1.bias': ((0, 256), (2765406, 2765662)), 'layer3.17.conv2.weight': ((0, 589824), (2765662, 3355486)), 'layer3.17.bn2.weight': ((0, 256), (3355486, 3355742)), 'layer3.17.bn2.bias': ((0, 256), (3355742, 3355998)), 'layer3.17.conv3.weight': ((0, 262144), (3355998, 3618142)), 'layer3.17.bn3.weight': ((0, 1024), (3618142, 3619166)), 'layer3.17.bn3.bias': ((0, 1024), (3619166, 3620190)), 'layer3.18.conv1.weight': ((0, 262144), (3620190, 3882334)), 'layer3.18.bn1.weight': ((0, 256), (3882334, 3882590)), 'layer3.18.bn1.bias': ((0, 256), (3882590, 3882846)), 'layer3.18.conv2.weight': ((0, 589824), (3882846, 4472670)), 'layer3.18.bn2.weight': ((0, 256), (4472670, 4472926)), 'layer3.18.bn2.bias': ((0, 256), (4472926, 4473182)), 'layer3.18.conv3.weight': ((0, 262144), (4473182, 4735326)), 'layer3.18.bn3.weight': ((0, 1024), (4735326, 4736350)), 'layer3.18.bn3.bias': ((0, 1024), (4736350, 4737374)), 'layer3.19.conv1.weight': ((0, 262144), (4737374, 4999518)), 'layer3.19.bn1.weight': ((0, 256), (4999518, 4999774)), 'layer3.19.bn1.bias': ((0, 256), (4999774, 5000030)), 'layer3.19.conv2.weight': ((0, 589824), (5000030, 5589854)), 'layer3.19.bn2.weight': ((0, 256), (5589854, 5590110)), 'layer3.19.bn2.bias': ((0, 256), (5590110, 5590366)), 'layer3.19.conv3.weight': ((0, 262144), (5590366, 5852510)), 'layer3.19.bn3.weight': ((0, 1024), (5852510, 5853534)), 'layer3.19.bn3.bias': ((0, 1024), (5853534, 5854558)), 'layer3.20.conv1.weight': ((0, 262144), (5854558, 6116702)), 'layer3.20.bn1.weight': ((0, 256), (6116702, 6116958)), 'layer3.20.bn1.bias': ((0, 256), (6116958, 6117214)), 'layer3.20.conv2.weight': ((0, 589824), (6117214, 6707038)), 'layer3.20.bn2.weight': ((0, 256), (6707038, 6707294)), 'layer3.20.bn2.bias': ((0, 256), (6707294, 6707550)), 'layer3.20.conv3.weight': ((0, 262144), (6707550, 6969694)), 'layer3.20.bn3.weight': ((0, 1024), (6969694, 6970718)), 'layer3.20.bn3.bias': ((0, 1024), (6970718, 6971742)), 'layer3.21.conv1.weight': ((0, 262144), (6971742, 7233886)), 'layer3.21.bn1.weight': ((0, 256), (7233886, 7234142)), 'layer3.21.bn1.bias': ((0, 256), (7234142, 7234398)), 'layer3.21.conv2.weight': ((0, 589824), (7234398, 7824222)), 'layer3.21.bn2.weight': ((0, 256), (7824222, 7824478)), 'layer3.21.bn2.bias': ((0, 256), (7824478, 7824734)), 'layer3.21.conv3.weight': ((0, 262144), (7824734, 8086878)), 'layer3.21.bn3.weight': ((0, 1024), (8086878, 8087902)), 'layer3.21.bn3.bias': ((0, 1024), (8087902, 8088926)), 'layer3.22.conv1.weight': ((0, 262144), (8088926, 8351070)), 'layer3.22.bn1.weight': ((0, 256), (8351070, 8351326)), 'layer3.22.bn1.bias': ((0, 256), (8351326, 8351582)), 'layer3.22.conv2.weight': ((0, 589824), (8351582, 8941406)), 'layer3.22.bn2.weight': ((0, 256), (8941406, 8941662)), 'layer3.22.bn2.bias': ((0, 256), (8941662, 8941918)), 'layer3.22.conv3.weight': ((0, 262144), (8941918, 9204062)), 'layer3.22.bn3.weight': ((0, 1024), (9204062, 9205086)), 'layer3.22.bn3.bias': ((0, 1024), (9205086, 9206110)), 'layer3.23.conv1.weight': ((0, 262144), (9206110, 9468254)), 'layer3.23.bn1.weight': ((0, 256), (9468254, 9468510)), 'layer3.23.bn1.bias': ((0, 256), (9468510, 9468766)), 'layer3.23.conv2.weight': ((0, 256019), (9468766, 9724785))}, {'layer3.23.conv2.weight': ((256019, 589824), (0, 333805)), 'layer3.23.bn2.weight': ((0, 256), (333805, 334061)), 'layer3.23.bn2.bias': ((0, 256), (334061, 334317)), 'layer3.23.conv3.weight': ((0, 262144), (334317, 596461)), 'layer3.23.bn3.weight': ((0, 1024), (596461, 597485)), 'layer3.23.bn3.bias': ((0, 1024), (597485, 598509)), 'layer3.24.conv1.weight': ((0, 262144), (598509, 860653)), 'layer3.24.bn1.weight': ((0, 256), (860653, 860909)), 'layer3.24.bn1.bias': ((0, 256), (860909, 861165)), 'layer3.24.conv2.weight': ((0, 589824), (861165, 1450989)), 'layer3.24.bn2.weight': ((0, 256), (1450989, 1451245)), 'layer3.24.bn2.bias': ((0, 256), (1451245, 1451501)), 'layer3.24.conv3.weight': ((0, 262144), (1451501, 1713645)), 'layer3.24.bn3.weight': ((0, 1024), (1713645, 1714669)), 'layer3.24.bn3.bias': ((0, 1024), (1714669, 1715693)), 'layer3.25.conv1.weight': ((0, 262144), (1715693, 1977837)), 'layer3.25.bn1.weight': ((0, 256), (1977837, 1978093)), 'layer3.25.bn1.bias': ((0, 256), (1978093, 1978349)), 'layer3.25.conv2.weight': ((0, 589824), (1978349, 2568173)), 'layer3.25.bn2.weight': ((0, 256), (2568173, 2568429)), 'layer3.25.bn2.bias': ((0, 256), (2568429, 2568685)), 'layer3.25.conv3.weight': ((0, 262144), (2568685, 2830829)), 'layer3.25.bn3.weight': ((0, 1024), (2830829, 2831853)), 'layer3.25.bn3.bias': ((0, 1024), (2831853, 2832877)), 'layer3.26.conv1.weight': ((0, 262144), (2832877, 3095021)), 'layer3.26.bn1.weight': ((0, 256), (3095021, 3095277)), 'layer3.26.bn1.bias': ((0, 256), (3095277, 3095533)), 'layer3.26.conv2.weight': ((0, 589824), (3095533, 3685357)), 'layer3.26.bn2.weight': ((0, 256), (3685357, 3685613)), 'layer3.26.bn2.bias': ((0, 256), (3685613, 3685869)), 'layer3.26.conv3.weight': ((0, 262144), (3685869, 3948013)), 'layer3.26.bn3.weight': ((0, 1024), (3948013, 3949037)), 'layer3.26.bn3.bias': ((0, 1024), (3949037, 3950061)), 'layer3.27.conv1.weight': ((0, 262144), (3950061, 4212205)), 'layer3.27.bn1.weight': ((0, 256), (4212205, 4212461)), 'layer3.27.bn1.bias': ((0, 256), (4212461, 4212717)), 'layer3.27.conv2.weight': ((0, 589824), (4212717, 4802541)), 'layer3.27.bn2.weight': ((0, 256), (4802541, 4802797)), 'layer3.27.bn2.bias': ((0, 256), (4802797, 4803053)), 'layer3.27.conv3.weight': ((0, 262144), (4803053, 5065197)), 'layer3.27.bn3.weight': ((0, 1024), (5065197, 5066221)), 'layer3.27.bn3.bias': ((0, 1024), (5066221, 5067245)), 'layer3.28.conv1.weight': ((0, 262144), (5067245, 5329389)), 'layer3.28.bn1.weight': ((0, 256), (5329389, 5329645)), 'layer3.28.bn1.bias': ((0, 256), (5329645, 5329901)), 'layer3.28.conv2.weight': ((0, 589824), (5329901, 5919725)), 'layer3.28.bn2.weight': ((0, 256), (5919725, 5919981)), 'layer3.28.bn2.bias': ((0, 256), (5919981, 5920237)), 'layer3.28.conv3.weight': ((0, 262144), (5920237, 6182381)), 'layer3.28.bn3.weight': ((0, 1024), (6182381, 6183405)), 'layer3.28.bn3.bias': ((0, 1024), (6183405, 6184429)), 'layer3.29.conv1.weight': ((0, 262144), (6184429, 6446573)), 'layer3.29.bn1.weight': ((0, 256), (6446573, 6446829)), 'layer3.29.bn1.bias': ((0, 256), (6446829, 6447085)), 'layer3.29.conv2.weight': ((0, 589824), (6447085, 7036909)), 'layer3.29.bn2.weight': ((0, 256), (7036909, 7037165)), 'layer3.29.bn2.bias': ((0, 256), (7037165, 7037421)), 'layer3.29.conv3.weight': ((0, 262144), (7037421, 7299565)), 'layer3.29.bn3.weight': ((0, 1024), (7299565, 7300589)), 'layer3.29.bn3.bias': ((0, 1024), (7300589, 7301613)), 'layer3.30.conv1.weight': ((0, 262144), (7301613, 7563757)), 'layer3.30.bn1.weight': ((0, 256), (7563757, 7564013)), 'layer3.30.bn1.bias': ((0, 256), (7564013, 7564269)), 'layer3.30.conv2.weight': ((0, 589824), (7564269, 8154093)), 'layer3.30.bn2.weight': ((0, 256), (8154093, 8154349)), 'layer3.30.bn2.bias': ((0, 256), (8154349, 8154605)), 'layer3.30.conv3.weight': ((0, 262144), (8154605, 8416749)), 'layer3.30.bn3.weight': ((0, 1024), (8416749, 8417773)), 'layer3.30.bn3.bias': ((0, 1024), (8417773, 8418797)), 'layer3.31.conv1.weight': ((0, 262144), (8418797, 8680941)), 'layer3.31.bn1.weight': ((0, 256), (8680941, 8681197)), 'layer3.31.bn1.bias': ((0, 256), (8681197, 8681453)), 'layer3.31.conv2.weight': ((0, 589824), (8681453, 9271277)), 'layer3.31.bn2.weight': ((0, 256), (9271277, 9271533)), 'layer3.31.bn2.bias': ((0, 256), (9271533, 9271789)), 'layer3.31.conv3.weight': ((0, 262144), (9271789, 9533933)), 'layer3.31.bn3.weight': ((0, 1024), (9533933, 9534957)), 'layer3.31.bn3.bias': ((0, 1024), (9534957, 9535981)), 'layer3.32.conv1.weight': ((0, 188804), (9535981, 9724785))}, {'layer3.32.conv1.weight': ((188804, 262144), (0, 73340)), 'layer3.32.bn1.weight': ((0, 256), (73340, 73596)), 'layer3.32.bn1.bias': ((0, 256), (73596, 73852)), 'layer3.32.conv2.weight': ((0, 589824), (73852, 663676)), 'layer3.32.bn2.weight': ((0, 256), (663676, 663932)), 'layer3.32.bn2.bias': ((0, 256), (663932, 664188)), 'layer3.32.conv3.weight': ((0, 262144), (664188, 926332)), 'layer3.32.bn3.weight': ((0, 1024), (926332, 927356)), 'layer3.32.bn3.bias': ((0, 1024), (927356, 928380)), 'layer3.33.conv1.weight': ((0, 262144), (928380, 1190524)), 'layer3.33.bn1.weight': ((0, 256), (1190524, 1190780)), 'layer3.33.bn1.bias': ((0, 256), (1190780, 1191036)), 'layer3.33.conv2.weight': ((0, 589824), (1191036, 1780860)), 'layer3.33.bn2.weight': ((0, 256), (1780860, 1781116)), 'layer3.33.bn2.bias': ((0, 256), (1781116, 1781372)), 'layer3.33.conv3.weight': ((0, 262144), (1781372, 2043516)), 'layer3.33.bn3.weight': ((0, 1024), (2043516, 2044540)), 'layer3.33.bn3.bias': ((0, 1024), (2044540, 2045564)), 'layer3.34.conv1.weight': ((0, 262144), (2045564, 2307708)), 'layer3.34.bn1.weight': ((0, 256), (2307708, 2307964)), 'layer3.34.bn1.bias': ((0, 256), (2307964, 2308220)), 'layer3.34.conv2.weight': ((0, 589824), (2308220, 2898044)), 'layer3.34.bn2.weight': ((0, 256), (2898044, 2898300)), 'layer3.34.bn2.bias': ((0, 256), (2898300, 2898556)), 'layer3.34.conv3.weight': ((0, 262144), (2898556, 3160700)), 'layer3.34.bn3.weight': ((0, 1024), (3160700, 3161724)), 'layer3.34.bn3.bias': ((0, 1024), (3161724, 3162748)), 'layer3.35.conv1.weight': ((0, 262144), (3162748, 3424892)), 'layer3.35.bn1.weight': ((0, 256), (3424892, 3425148)), 'layer3.35.bn1.bias': ((0, 256), (3425148, 3425404)), 'layer3.35.conv2.weight': ((0, 589824), (3425404, 4015228)), 'layer3.35.bn2.weight': ((0, 256), (4015228, 4015484)), 'layer3.35.bn2.bias': ((0, 256), (4015484, 4015740)), 'layer3.35.conv3.weight': ((0, 262144), (4015740, 4277884)), 'layer3.35.bn3.weight': ((0, 1024), (4277884, 4278908)), 'layer3.35.bn3.bias': ((0, 1024), (4278908, 4279932)), 'layer4.0.conv1.weight': ((0, 524288), (4279932, 4804220)), 'layer4.0.bn1.weight': ((0, 512), (4804220, 4804732)), 'layer4.0.bn1.bias': ((0, 512), (4804732, 4805244)), 'layer4.0.conv2.weight': ((0, 2359296), (4805244, 7164540)), 'layer4.0.bn2.weight': ((0, 512), (7164540, 7165052)), 'layer4.0.bn2.bias': ((0, 512), (7165052, 7165564)), 'layer4.0.conv3.weight': ((0, 1048576), (7165564, 8214140)), 'layer4.0.bn3.weight': ((0, 2048), (8214140, 8216188)), 'layer4.0.bn3.bias': ((0, 2048), (8216188, 8218236)), 'layer4.0.downsample.0.weight': ((0, 1506549), (8218236, 9724785))}, {'layer4.0.downsample.0.weight': ((1506549, 2097152), (0, 590603)), 'layer4.0.downsample.1.weight': ((0, 2048), (590603, 592651)), 'layer4.0.downsample.1.bias': ((0, 2048), (592651, 594699)), 'layer4.1.conv1.weight': ((0, 1048576), (594699, 1643275)), 'layer4.1.bn1.weight': ((0, 512), (1643275, 1643787)), 'layer4.1.bn1.bias': ((0, 512), (1643787, 1644299)), 'layer4.1.conv2.weight': ((0, 2359296), (1644299, 4003595)), 'layer4.1.bn2.weight': ((0, 512), (4003595, 4004107)), 'layer4.1.bn2.bias': ((0, 512), (4004107, 4004619)), 'layer4.1.conv3.weight': ((0, 1048576), (4004619, 5053195)), 'layer4.1.bn3.weight': ((0, 2048), (5053195, 5055243)), 'layer4.1.bn3.bias': ((0, 2048), (5055243, 5057291)), 'layer4.2.conv1.weight': ((0, 1048576), (5057291, 6105867)), 'layer4.2.bn1.weight': ((0, 512), (6105867, 6106379)), 'layer4.2.bn1.bias': ((0, 512), (6106379, 6106891)), 'layer4.2.conv2.weight': ((0, 2359296), (6106891, 8466187)), 'layer4.2.bn2.weight': ((0, 512), (8466187, 8466699)), 'layer4.2.bn2.bias': ((0, 512), (8466699, 8467211)), 'layer4.2.conv3.weight': ((0, 1048576), (8467211, 9515787)), 'layer4.2.bn3.weight': ((0, 2048), (9515787, 9517835)), 'layer4.2.bn3.bias': ((0, 2048), (9517835, 9519883)), 'fc.weight': ((0, 204800), (9519883, 9724683)), 'fc.bias': ((0, 100), (9724683, 9724783))}]
2025-06-08 08:42:47,875 [allreducer.py:660] INFO spar_key_groupidx_maps: {'conv1.weight': [0], 'bn1.weight': [0], 'bn1.bias': [0], 'layer1.0.conv1.weight': [0], 'layer1.0.bn1.weight': [0], 'layer1.0.bn1.bias': [0], 'layer1.0.conv2.weight': [0], 'layer1.0.bn2.weight': [0], 'layer1.0.bn2.bias': [0], 'layer1.0.conv3.weight': [0], 'layer1.0.bn3.weight': [0], 'layer1.0.bn3.bias': [0], 'layer1.0.downsample.0.weight': [0], 'layer1.0.downsample.1.weight': [0], 'layer1.0.downsample.1.bias': [0], 'layer1.1.conv1.weight': [0], 'layer1.1.bn1.weight': [0], 'layer1.1.bn1.bias': [0], 'layer1.1.conv2.weight': [0], 'layer1.1.bn2.weight': [0], 'layer1.1.bn2.bias': [0], 'layer1.1.conv3.weight': [0], 'layer1.1.bn3.weight': [0], 'layer1.1.bn3.bias': [0], 'layer1.2.conv1.weight': [0], 'layer1.2.bn1.weight': [0], 'layer1.2.bn1.bias': [0], 'layer1.2.conv2.weight': [0], 'layer1.2.bn2.weight': [0], 'layer1.2.bn2.bias': [0], 'layer1.2.conv3.weight': [0], 'layer1.2.bn3.weight': [0], 'layer1.2.bn3.bias': [0], 'layer2.0.conv1.weight': [0], 'layer2.0.bn1.weight': [0], 'layer2.0.bn1.bias': [0], 'layer2.0.conv2.weight': [0], 'layer2.0.bn2.weight': [0], 'layer2.0.bn2.bias': [0], 'layer2.0.conv3.weight': [0], 'layer2.0.bn3.weight': [0], 'layer2.0.bn3.bias': [0], 'layer2.0.downsample.0.weight': [0], 'layer2.0.downsample.1.weight': [0], 'layer2.0.downsample.1.bias': [0], 'layer2.1.conv1.weight': [0], 'layer2.1.bn1.weight': [0], 'layer2.1.bn1.bias': [0], 'layer2.1.conv2.weight': [0], 'layer2.1.bn2.weight': [0], 'layer2.1.bn2.bias': [0], 'layer2.1.conv3.weight': [0], 'layer2.1.bn3.weight': [0], 'layer2.1.bn3.bias': [0], 'layer2.2.conv1.weight': [0], 'layer2.2.bn1.weight': [0], 'layer2.2.bn1.bias': [0], 'layer2.2.conv2.weight': [0], 'layer2.2.bn2.weight': [0], 'layer2.2.bn2.bias': [0], 'layer2.2.conv3.weight': [0], 'layer2.2.bn3.weight': [0], 'layer2.2.bn3.bias': [0], 'layer2.3.conv1.weight': [0], 'layer2.3.bn1.weight': [0], 'layer2.3.bn1.bias': [0], 'layer2.3.conv2.weight': [0], 'layer2.3.bn2.weight': [0], 'layer2.3.bn2.bias': [0], 'layer2.3.conv3.weight': [0], 'layer2.3.bn3.weight': [0], 'layer2.3.bn3.bias': [0], 'layer2.4.conv1.weight': [0], 'layer2.4.bn1.weight': [0], 'layer2.4.bn1.bias': [0], 'layer2.4.conv2.weight': [0], 'layer2.4.bn2.weight': [0], 'layer2.4.bn2.bias': [0], 'layer2.4.conv3.weight': [0], 'layer2.4.bn3.weight': [0], 'layer2.4.bn3.bias': [0], 'layer2.5.conv1.weight': [0], 'layer2.5.bn1.weight': [0], 'layer2.5.bn1.bias': [0], 'layer2.5.conv2.weight': [0], 'layer2.5.bn2.weight': [0], 'layer2.5.bn2.bias': [0], 'layer2.5.conv3.weight': [0], 'layer2.5.bn3.weight': [0], 'layer2.5.bn3.bias': [0], 'layer2.6.conv1.weight': [0], 'layer2.6.bn1.weight': [0], 'layer2.6.bn1.bias': [0], 'layer2.6.conv2.weight': [0], 'layer2.6.bn2.weight': [0], 'layer2.6.bn2.bias': [0], 'layer2.6.conv3.weight': [0], 'layer2.6.bn3.weight': [0], 'layer2.6.bn3.bias': [0], 'layer2.7.conv1.weight': [0], 'layer2.7.bn1.weight': [0], 'layer2.7.bn1.bias': [0], 'layer2.7.conv2.weight': [0], 'layer2.7.bn2.weight': [0], 'layer2.7.bn2.bias': [0], 'layer2.7.conv3.weight': [0], 'layer2.7.bn3.weight': [0], 'layer2.7.bn3.bias': [0], 'layer3.0.conv1.weight': [0], 'layer3.0.bn1.weight': [0], 'layer3.0.bn1.bias': [0], 'layer3.0.conv2.weight': [0], 'layer3.0.bn2.weight': [0], 'layer3.0.bn2.bias': [0], 'layer3.0.conv3.weight': [0], 'layer3.0.bn3.weight': [0], 'layer3.0.bn3.bias': [0], 'layer3.0.downsample.0.weight': [0], 'layer3.0.downsample.1.weight': [0], 'layer3.0.downsample.1.bias': [0], 'layer3.1.conv1.weight': [0], 'layer3.1.bn1.weight': [0], 'layer3.1.bn1.bias': [0], 'layer3.1.conv2.weight': [0], 'layer3.1.bn2.weight': [0], 'layer3.1.bn2.bias': [0], 'layer3.1.conv3.weight': [0], 'layer3.1.bn3.weight': [0], 'layer3.1.bn3.bias': [0], 'layer3.2.conv1.weight': [0], 'layer3.2.bn1.weight': [0], 'layer3.2.bn1.bias': [0], 'layer3.2.conv2.weight': [0], 'layer3.2.bn2.weight': [0], 'layer3.2.bn2.bias': [0], 'layer3.2.conv3.weight': [0], 'layer3.2.bn3.weight': [0], 'layer3.2.bn3.bias': [0], 'layer3.3.conv1.weight': [0], 'layer3.3.bn1.weight': [0], 'layer3.3.bn1.bias': [0], 'layer3.3.conv2.weight': [0], 'layer3.3.bn2.weight': [0], 'layer3.3.bn2.bias': [0], 'layer3.3.conv3.weight': [0], 'layer3.3.bn3.weight': [0], 'layer3.3.bn3.bias': [0], 'layer3.4.conv1.weight': [0], 'layer3.4.bn1.weight': [0], 'layer3.4.bn1.bias': [0], 'layer3.4.conv2.weight': [0], 'layer3.4.bn2.weight': [0], 'layer3.4.bn2.bias': [0], 'layer3.4.conv3.weight': [0], 'layer3.4.bn3.weight': [0], 'layer3.4.bn3.bias': [0], 'layer3.5.conv1.weight': [0], 'layer3.5.bn1.weight': [0], 'layer3.5.bn1.bias': [0], 'layer3.5.conv2.weight': [0], 'layer3.5.bn2.weight': [0], 'layer3.5.bn2.bias': [0], 'layer3.5.conv3.weight': [0], 'layer3.5.bn3.weight': [0], 'layer3.5.bn3.bias': [0], 'layer3.6.conv1.weight': [0, 1], 'layer3.6.bn1.weight': [1], 'layer3.6.bn1.bias': [1], 'layer3.6.conv2.weight': [1], 'layer3.6.bn2.weight': [1], 'layer3.6.bn2.bias': [1], 'layer3.6.conv3.weight': [1], 'layer3.6.bn3.weight': [1], 'layer3.6.bn3.bias': [1], 'layer3.7.conv1.weight': [1], 'layer3.7.bn1.weight': [1], 'layer3.7.bn1.bias': [1], 'layer3.7.conv2.weight': [1], 'layer3.7.bn2.weight': [1], 'layer3.7.bn2.bias': [1], 'layer3.7.conv3.weight': [1], 'layer3.7.bn3.weight': [1], 'layer3.7.bn3.bias': [1], 'layer3.8.conv1.weight': [1], 'layer3.8.bn1.weight': [1], 'layer3.8.bn1.bias': [1], 'layer3.8.conv2.weight': [1], 'layer3.8.bn2.weight': [1], 'layer3.8.bn2.bias': [1], 'layer3.8.conv3.weight': [1], 'layer3.8.bn3.weight': [1], 'layer3.8.bn3.bias': [1], 'layer3.9.conv1.weight': [1], 'layer3.9.bn1.weight': [1], 'layer3.9.bn1.bias': [1], 'layer3.9.conv2.weight': [1], 'layer3.9.bn2.weight': [1], 'layer3.9.bn2.bias': [1], 'layer3.9.conv3.weight': [1], 'layer3.9.bn3.weight': [1], 'layer3.9.bn3.bias': [1], 'layer3.10.conv1.weight': [1], 'layer3.10.bn1.weight': [1], 'layer3.10.bn1.bias': [1], 'layer3.10.conv2.weight': [1], 'layer3.10.bn2.weight': [1], 'layer3.10.bn2.bias': [1], 'layer3.10.conv3.weight': [1], 'layer3.10.bn3.weight': [1], 'layer3.10.bn3.bias': [1], 'layer3.11.conv1.weight': [1], 'layer3.11.bn1.weight': [1], 'layer3.11.bn1.bias': [1], 'layer3.11.conv2.weight': [1], 'layer3.11.bn2.weight': [1], 'layer3.11.bn2.bias': [1], 'layer3.11.conv3.weight': [1], 'layer3.11.bn3.weight': [1], 'layer3.11.bn3.bias': [1], 'layer3.12.conv1.weight': [1], 'layer3.12.bn1.weight': [1], 'layer3.12.bn1.bias': [1], 'layer3.12.conv2.weight': [1], 'layer3.12.bn2.weight': [1], 'layer3.12.bn2.bias': [1], 'layer3.12.conv3.weight': [1], 'layer3.12.bn3.weight': [1], 'layer3.12.bn3.bias': [1], 'layer3.13.conv1.weight': [1], 'layer3.13.bn1.weight': [1], 'layer3.13.bn1.bias': [1], 'layer3.13.conv2.weight': [1], 'layer3.13.bn2.weight': [1], 'layer3.13.bn2.bias': [1], 'layer3.13.conv3.weight': [1], 'layer3.13.bn3.weight': [1], 'layer3.13.bn3.bias': [1], 'layer3.14.conv1.weight': [1], 'layer3.14.bn1.weight': [1], 'layer3.14.bn1.bias': [1], 'layer3.14.conv2.weight': [1, 2], 'layer3.14.bn2.weight': [2], 'layer3.14.bn2.bias': [2], 'layer3.14.conv3.weight': [2], 'layer3.14.bn3.weight': [2], 'layer3.14.bn3.bias': [2], 'layer3.15.conv1.weight': [2], 'layer3.15.bn1.weight': [2], 'layer3.15.bn1.bias': [2], 'layer3.15.conv2.weight': [2], 'layer3.15.bn2.weight': [2], 'layer3.15.bn2.bias': [2], 'layer3.15.conv3.weight': [2], 'layer3.15.bn3.weight': [2], 'layer3.15.bn3.bias': [2], 'layer3.16.conv1.weight': [2], 'layer3.16.bn1.weight': [2], 'layer3.16.bn1.bias': [2], 'layer3.16.conv2.weight': [2], 'layer3.16.bn2.weight': [2], 'layer3.16.bn2.bias': [2], 'layer3.16.conv3.weight': [2], 'layer3.16.bn3.weight': [2], 'layer3.16.bn3.bias': [2], 'layer3.17.conv1.weight': [2], 'layer3.17.bn1.weight': [2], 'layer3.17.bn1.bias': [2], 'layer3.17.conv2.weight': [2], 'layer3.17.bn2.weight': [2], 'layer3.17.bn2.bias': [2], 'layer3.17.conv3.weight': [2], 'layer3.17.bn3.weight': [2], 'layer3.17.bn3.bias': [2], 'layer3.18.conv1.weight': [2], 'layer3.18.bn1.weight': [2], 'layer3.18.bn1.bias': [2], 'layer3.18.conv2.weight': [2], 'layer3.18.bn2.weight': [2], 'layer3.18.bn2.bias': [2], 'layer3.18.conv3.weight': [2], 'layer3.18.bn3.weight': [2], 'layer3.18.bn3.bias': [2], 'layer3.19.conv1.weight': [2], 'layer3.19.bn1.weight': [2], 'layer3.19.bn1.bias': [2], 'layer3.19.conv2.weight': [2], 'layer3.19.bn2.weight': [2], 'layer3.19.bn2.bias': [2], 'layer3.19.conv3.weight': [2], 'layer3.19.bn3.weight': [2], 'layer3.19.bn3.bias': [2], 'layer3.20.conv1.weight': [2], 'layer3.20.bn1.weight': [2], 'layer3.20.bn1.bias': [2], 'layer3.20.conv2.weight': [2], 'layer3.20.bn2.weight': [2], 'layer3.20.bn2.bias': [2], 'layer3.20.conv3.weight': [2], 'layer3.20.bn3.weight': [2], 'layer3.20.bn3.bias': [2], 'layer3.21.conv1.weight': [2], 'layer3.21.bn1.weight': [2], 'layer3.21.bn1.bias': [2], 'layer3.21.conv2.weight': [2], 'layer3.21.bn2.weight': [2], 'layer3.21.bn2.bias': [2], 'layer3.21.conv3.weight': [2], 'layer3.21.bn3.weight': [2], 'layer3.21.bn3.bias': [2], 'layer3.22.conv1.weight': [2], 'layer3.22.bn1.weight': [2], 'layer3.22.bn1.bias': [2], 'layer3.22.conv2.weight': [2], 'layer3.22.bn2.weight': [2], 'layer3.22.bn2.bias': [2], 'layer3.22.conv3.weight': [2], 'layer3.22.bn3.weight': [2], 'layer3.22.bn3.bias': [2], 'layer3.23.conv1.weight': [2], 'layer3.23.bn1.weight': [2], 'layer3.23.bn1.bias': [2], 'layer3.23.conv2.weight': [2, 3], 'layer3.23.bn2.weight': [3], 'layer3.23.bn2.bias': [3], 'layer3.23.conv3.weight': [3], 'layer3.23.bn3.weight': [3], 'layer3.23.bn3.bias': [3], 'layer3.24.conv1.weight': [3], 'layer3.24.bn1.weight': [3], 'layer3.24.bn1.bias': [3], 'layer3.24.conv2.weight': [3], 'layer3.24.bn2.weight': [3], 'layer3.24.bn2.bias': [3], 'layer3.24.conv3.weight': [3], 'layer3.24.bn3.weight': [3], 'layer3.24.bn3.bias': [3], 'layer3.25.conv1.weight': [3], 'layer3.25.bn1.weight': [3], 'layer3.25.bn1.bias': [3], 'layer3.25.conv2.weight': [3], 'layer3.25.bn2.weight': [3], 'layer3.25.bn2.bias': [3], 'layer3.25.conv3.weight': [3], 'layer3.25.bn3.weight': [3], 'layer3.25.bn3.bias': [3], 'layer3.26.conv1.weight': [3], 'layer3.26.bn1.weight': [3], 'layer3.26.bn1.bias': [3], 'layer3.26.conv2.weight': [3], 'layer3.26.bn2.weight': [3], 'layer3.26.bn2.bias': [3], 'layer3.26.conv3.weight': [3], 'layer3.26.bn3.weight': [3], 'layer3.26.bn3.bias': [3], 'layer3.27.conv1.weight': [3], 'layer3.27.bn1.weight': [3], 'layer3.27.bn1.bias': [3], 'layer3.27.conv2.weight': [3], 'layer3.27.bn2.weight': [3], 'layer3.27.bn2.bias': [3], 'layer3.27.conv3.weight': [3], 'layer3.27.bn3.weight': [3], 'layer3.27.bn3.bias': [3], 'layer3.28.conv1.weight': [3], 'layer3.28.bn1.weight': [3], 'layer3.28.bn1.bias': [3], 'layer3.28.conv2.weight': [3], 'layer3.28.bn2.weight': [3], 'layer3.28.bn2.bias': [3], 'layer3.28.conv3.weight': [3], 'layer3.28.bn3.weight': [3], 'layer3.28.bn3.bias': [3], 'layer3.29.conv1.weight': [3], 'layer3.29.bn1.weight': [3], 'layer3.29.bn1.bias': [3], 'layer3.29.conv2.weight': [3], 'layer3.29.bn2.weight': [3], 'layer3.29.bn2.bias': [3], 'layer3.29.conv3.weight': [3], 'layer3.29.bn3.weight': [3], 'layer3.29.bn3.bias': [3], 'layer3.30.conv1.weight': [3], 'layer3.30.bn1.weight': [3], 'layer3.30.bn1.bias': [3], 'layer3.30.conv2.weight': [3], 'layer3.30.bn2.weight': [3], 'layer3.30.bn2.bias': [3], 'layer3.30.conv3.weight': [3], 'layer3.30.bn3.weight': [3], 'layer3.30.bn3.bias': [3], 'layer3.31.conv1.weight': [3], 'layer3.31.bn1.weight': [3], 'layer3.31.bn1.bias': [3], 'layer3.31.conv2.weight': [3], 'layer3.31.bn2.weight': [3], 'layer3.31.bn2.bias': [3], 'layer3.31.conv3.weight': [3], 'layer3.31.bn3.weight': [3], 'layer3.31.bn3.bias': [3], 'layer3.32.conv1.weight': [3, 4], 'layer3.32.bn1.weight': [4], 'layer3.32.bn1.bias': [4], 'layer3.32.conv2.weight': [4], 'layer3.32.bn2.weight': [4], 'layer3.32.bn2.bias': [4], 'layer3.32.conv3.weight': [4], 'layer3.32.bn3.weight': [4], 'layer3.32.bn3.bias': [4], 'layer3.33.conv1.weight': [4], 'layer3.33.bn1.weight': [4], 'layer3.33.bn1.bias': [4], 'layer3.33.conv2.weight': [4], 'layer3.33.bn2.weight': [4], 'layer3.33.bn2.bias': [4], 'layer3.33.conv3.weight': [4], 'layer3.33.bn3.weight': [4], 'layer3.33.bn3.bias': [4], 'layer3.34.conv1.weight': [4], 'layer3.34.bn1.weight': [4], 'layer3.34.bn1.bias': [4], 'layer3.34.conv2.weight': [4], 'layer3.34.bn2.weight': [4], 'layer3.34.bn2.bias': [4], 'layer3.34.conv3.weight': [4], 'layer3.34.bn3.weight': [4], 'layer3.34.bn3.bias': [4], 'layer3.35.conv1.weight': [4], 'layer3.35.bn1.weight': [4], 'layer3.35.bn1.bias': [4], 'layer3.35.conv2.weight': [4], 'layer3.35.bn2.weight': [4], 'layer3.35.bn2.bias': [4], 'layer3.35.conv3.weight': [4], 'layer3.35.bn3.weight': [4], 'layer3.35.bn3.bias': [4], 'layer4.0.conv1.weight': [4], 'layer4.0.bn1.weight': [4], 'layer4.0.bn1.bias': [4], 'layer4.0.conv2.weight': [4], 'layer4.0.bn2.weight': [4], 'layer4.0.bn2.bias': [4], 'layer4.0.conv3.weight': [4], 'layer4.0.bn3.weight': [4], 'layer4.0.bn3.bias': [4], 'layer4.0.downsample.0.weight': [4, 5], 'layer4.0.downsample.1.weight': [5], 'layer4.0.downsample.1.bias': [5], 'layer4.1.conv1.weight': [5], 'layer4.1.bn1.weight': [5], 'layer4.1.bn1.bias': [5], 'layer4.1.conv2.weight': [5], 'layer4.1.bn2.weight': [5], 'layer4.1.bn2.bias': [5], 'layer4.1.conv3.weight': [5], 'layer4.1.bn3.weight': [5], 'layer4.1.bn3.bias': [5], 'layer4.2.conv1.weight': [5], 'layer4.2.bn1.weight': [5], 'layer4.2.bn1.bias': [5], 'layer4.2.conv2.weight': [5], 'layer4.2.bn2.weight': [5], 'layer4.2.bn2.bias': [5], 'layer4.2.conv3.weight': [5], 'layer4.2.bn3.weight': [5], 'layer4.2.bn3.bias': [5], 'fc.weight': [5], 'fc.bias': [5]}
2025-06-08 08:42:47,876 [allreducer.py:985] INFO Allreducer thread started ...
2025-06-08 08:42:47,877 [main_trainer.py:131] INFO Start training ....
2025-06-08 08:47:21,958 [main_trainer.py:298] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-08 08:47:21,959 [main_trainer.py:299] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-08 08:48:21,054 [main_trainer.py:298] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-08 08:48:21,054 [main_trainer.py:299] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-08 08:49:07,960 [main_trainer.py:298] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-08 08:49:07,960 [main_trainer.py:299] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-08 08:49:26,806 [main_trainer.py:298] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-08 08:49:26,807 [main_trainer.py:299] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-08 08:49:32,283 [dl_trainer.py:295] INFO target_sparsities: [1.0]
2025-06-08 08:49:32,284 [dl_trainer.py:305] INFO num_batches_per_epoch: 520
2025-06-08 08:49:32,284 [main_trainer.py:88] INFO Broadcast parameters....
2025-06-08 08:49:33,506 [main_trainer.py:107] INFO Broadcast parameters finished....
2025-06-08 08:49:33,575 [allreducer.py:282] INFO density: 0.010000
2025-06-08 08:49:33,576 [allreducer.py:283] INFO threshold scale: 1.092000
2025-06-08 08:49:33,581 [allreducer.py:671] INFO groups: [['fc.bias', 'fc.weight', 'conv5_x.2.residual_function.7.bias', 'conv5_x.2.residual_function.7.weight', 'conv5_x.2.residual_function.6.weight', 'conv5_x.2.residual_function.4.bias', 'conv5_x.2.residual_function.4.weight', 'conv5_x.2.residual_function.3.weight', 'conv5_x.2.residual_function.1.bias', 'conv5_x.2.residual_function.1.weight', 'conv5_x.2.residual_function.0.weight', 'conv5_x.1.residual_function.7.bias', 'conv5_x.1.residual_function.7.weight', 'conv5_x.1.residual_function.6.weight', 'conv5_x.1.residual_function.4.bias', 'conv5_x.1.residual_function.4.weight', 'conv5_x.1.residual_function.3.weight', 'conv5_x.1.residual_function.1.bias', 'conv5_x.1.residual_function.1.weight', 'conv5_x.1.residual_function.0.weight', 'conv5_x.0.shortcut.1.bias', 'conv5_x.0.shortcut.1.weight', 'conv5_x.0.shortcut.0.weight', 'conv5_x.0.residual_function.7.bias', 'conv5_x.0.residual_function.7.weight', 'conv5_x.0.residual_function.6.weight', 'conv5_x.0.residual_function.4.bias', 'conv5_x.0.residual_function.4.weight', 'conv5_x.0.residual_function.3.weight', 'conv5_x.0.residual_function.1.bias', 'conv5_x.0.residual_function.1.weight', 'conv5_x.0.residual_function.0.weight', 'conv4_x.35.residual_function.7.bias', 'conv4_x.35.residual_function.7.weight', 'conv4_x.35.residual_function.6.weight', 'conv4_x.35.residual_function.4.bias', 'conv4_x.35.residual_function.4.weight', 'conv4_x.35.residual_function.3.weight', 'conv4_x.35.residual_function.1.bias', 'conv4_x.35.residual_function.1.weight', 'conv4_x.35.residual_function.0.weight', 'conv4_x.34.residual_function.7.bias', 'conv4_x.34.residual_function.7.weight', 'conv4_x.34.residual_function.6.weight', 'conv4_x.34.residual_function.4.bias', 'conv4_x.34.residual_function.4.weight', 'conv4_x.34.residual_function.3.weight', 'conv4_x.34.residual_function.1.bias', 'conv4_x.34.residual_function.1.weight', 'conv4_x.34.residual_function.0.weight', 'conv4_x.33.residual_function.7.bias', 'conv4_x.33.residual_function.7.weight', 'conv4_x.33.residual_function.6.weight', 'conv4_x.33.residual_function.4.bias', 'conv4_x.33.residual_function.4.weight', 'conv4_x.33.residual_function.3.weight', 'conv4_x.33.residual_function.1.bias', 'conv4_x.33.residual_function.1.weight', 'conv4_x.33.residual_function.0.weight', 'conv4_x.32.residual_function.7.bias', 'conv4_x.32.residual_function.7.weight', 'conv4_x.32.residual_function.6.weight', 'conv4_x.32.residual_function.4.bias', 'conv4_x.32.residual_function.4.weight', 'conv4_x.32.residual_function.3.weight', 'conv4_x.32.residual_function.1.bias', 'conv4_x.32.residual_function.1.weight', 'conv4_x.32.residual_function.0.weight', 'conv4_x.31.residual_function.7.bias', 'conv4_x.31.residual_function.7.weight', 'conv4_x.31.residual_function.6.weight', 'conv4_x.31.residual_function.4.bias', 'conv4_x.31.residual_function.4.weight', 'conv4_x.31.residual_function.3.weight', 'conv4_x.31.residual_function.1.bias', 'conv4_x.31.residual_function.1.weight', 'conv4_x.31.residual_function.0.weight', 'conv4_x.30.residual_function.7.bias', 'conv4_x.30.residual_function.7.weight', 'conv4_x.30.residual_function.6.weight', 'conv4_x.30.residual_function.4.bias', 'conv4_x.30.residual_function.4.weight', 'conv4_x.30.residual_function.3.weight', 'conv4_x.30.residual_function.1.bias', 'conv4_x.30.residual_function.1.weight', 'conv4_x.30.residual_function.0.weight', 'conv4_x.29.residual_function.7.bias', 'conv4_x.29.residual_function.7.weight', 'conv4_x.29.residual_function.6.weight', 'conv4_x.29.residual_function.4.bias', 'conv4_x.29.residual_function.4.weight', 'conv4_x.29.residual_function.3.weight', 'conv4_x.29.residual_function.1.bias', 'conv4_x.29.residual_function.1.weight', 'conv4_x.29.residual_function.0.weight', 'conv4_x.28.residual_function.7.bias', 'conv4_x.28.residual_function.7.weight', 'conv4_x.28.residual_function.6.weight', 'conv4_x.28.residual_function.4.bias', 'conv4_x.28.residual_function.4.weight', 'conv4_x.28.residual_function.3.weight', 'conv4_x.28.residual_function.1.bias', 'conv4_x.28.residual_function.1.weight', 'conv4_x.28.residual_function.0.weight', 'conv4_x.27.residual_function.7.bias', 'conv4_x.27.residual_function.7.weight', 'conv4_x.27.residual_function.6.weight', 'conv4_x.27.residual_function.4.bias', 'conv4_x.27.residual_function.4.weight', 'conv4_x.27.residual_function.3.weight', 'conv4_x.27.residual_function.1.bias', 'conv4_x.27.residual_function.1.weight', 'conv4_x.27.residual_function.0.weight', 'conv4_x.26.residual_function.7.bias', 'conv4_x.26.residual_function.7.weight', 'conv4_x.26.residual_function.6.weight', 'conv4_x.26.residual_function.4.bias', 'conv4_x.26.residual_function.4.weight', 'conv4_x.26.residual_function.3.weight', 'conv4_x.26.residual_function.1.bias', 'conv4_x.26.residual_function.1.weight', 'conv4_x.26.residual_function.0.weight', 'conv4_x.25.residual_function.7.bias', 'conv4_x.25.residual_function.7.weight', 'conv4_x.25.residual_function.6.weight', 'conv4_x.25.residual_function.4.bias', 'conv4_x.25.residual_function.4.weight', 'conv4_x.25.residual_function.3.weight', 'conv4_x.25.residual_function.1.bias', 'conv4_x.25.residual_function.1.weight', 'conv4_x.25.residual_function.0.weight', 'conv4_x.24.residual_function.7.bias', 'conv4_x.24.residual_function.7.weight', 'conv4_x.24.residual_function.6.weight', 'conv4_x.24.residual_function.4.bias', 'conv4_x.24.residual_function.4.weight', 'conv4_x.24.residual_function.3.weight', 'conv4_x.24.residual_function.1.bias', 'conv4_x.24.residual_function.1.weight', 'conv4_x.24.residual_function.0.weight', 'conv4_x.23.residual_function.7.bias', 'conv4_x.23.residual_function.7.weight', 'conv4_x.23.residual_function.6.weight', 'conv4_x.23.residual_function.4.bias', 'conv4_x.23.residual_function.4.weight', 'conv4_x.23.residual_function.3.weight', 'conv4_x.23.residual_function.1.bias', 'conv4_x.23.residual_function.1.weight', 'conv4_x.23.residual_function.0.weight', 'conv4_x.22.residual_function.7.bias', 'conv4_x.22.residual_function.7.weight', 'conv4_x.22.residual_function.6.weight', 'conv4_x.22.residual_function.4.bias', 'conv4_x.22.residual_function.4.weight', 'conv4_x.22.residual_function.3.weight', 'conv4_x.22.residual_function.1.bias', 'conv4_x.22.residual_function.1.weight', 'conv4_x.22.residual_function.0.weight', 'conv4_x.21.residual_function.7.bias', 'conv4_x.21.residual_function.7.weight', 'conv4_x.21.residual_function.6.weight', 'conv4_x.21.residual_function.4.bias', 'conv4_x.21.residual_function.4.weight', 'conv4_x.21.residual_function.3.weight', 'conv4_x.21.residual_function.1.bias', 'conv4_x.21.residual_function.1.weight', 'conv4_x.21.residual_function.0.weight', 'conv4_x.20.residual_function.7.bias', 'conv4_x.20.residual_function.7.weight', 'conv4_x.20.residual_function.6.weight', 'conv4_x.20.residual_function.4.bias', 'conv4_x.20.residual_function.4.weight', 'conv4_x.20.residual_function.3.weight', 'conv4_x.20.residual_function.1.bias', 'conv4_x.20.residual_function.1.weight', 'conv4_x.20.residual_function.0.weight', 'conv4_x.19.residual_function.7.bias', 'conv4_x.19.residual_function.7.weight', 'conv4_x.19.residual_function.6.weight', 'conv4_x.19.residual_function.4.bias', 'conv4_x.19.residual_function.4.weight', 'conv4_x.19.residual_function.3.weight', 'conv4_x.19.residual_function.1.bias', 'conv4_x.19.residual_function.1.weight', 'conv4_x.19.residual_function.0.weight', 'conv4_x.18.residual_function.7.bias', 'conv4_x.18.residual_function.7.weight', 'conv4_x.18.residual_function.6.weight', 'conv4_x.18.residual_function.4.bias', 'conv4_x.18.residual_function.4.weight', 'conv4_x.18.residual_function.3.weight', 'conv4_x.18.residual_function.1.bias', 'conv4_x.18.residual_function.1.weight', 'conv4_x.18.residual_function.0.weight', 'conv4_x.17.residual_function.7.bias', 'conv4_x.17.residual_function.7.weight', 'conv4_x.17.residual_function.6.weight', 'conv4_x.17.residual_function.4.bias', 'conv4_x.17.residual_function.4.weight', 'conv4_x.17.residual_function.3.weight', 'conv4_x.17.residual_function.1.bias', 'conv4_x.17.residual_function.1.weight', 'conv4_x.17.residual_function.0.weight', 'conv4_x.16.residual_function.7.bias', 'conv4_x.16.residual_function.7.weight', 'conv4_x.16.residual_function.6.weight', 'conv4_x.16.residual_function.4.bias', 'conv4_x.16.residual_function.4.weight', 'conv4_x.16.residual_function.3.weight', 'conv4_x.16.residual_function.1.bias', 'conv4_x.16.residual_function.1.weight', 'conv4_x.16.residual_function.0.weight', 'conv4_x.15.residual_function.7.bias', 'conv4_x.15.residual_function.7.weight', 'conv4_x.15.residual_function.6.weight', 'conv4_x.15.residual_function.4.bias', 'conv4_x.15.residual_function.4.weight', 'conv4_x.15.residual_function.3.weight', 'conv4_x.15.residual_function.1.bias', 'conv4_x.15.residual_function.1.weight', 'conv4_x.15.residual_function.0.weight', 'conv4_x.14.residual_function.7.bias', 'conv4_x.14.residual_function.7.weight', 'conv4_x.14.residual_function.6.weight', 'conv4_x.14.residual_function.4.bias', 'conv4_x.14.residual_function.4.weight', 'conv4_x.14.residual_function.3.weight', 'conv4_x.14.residual_function.1.bias', 'conv4_x.14.residual_function.1.weight', 'conv4_x.14.residual_function.0.weight', 'conv4_x.13.residual_function.7.bias', 'conv4_x.13.residual_function.7.weight', 'conv4_x.13.residual_function.6.weight', 'conv4_x.13.residual_function.4.bias', 'conv4_x.13.residual_function.4.weight', 'conv4_x.13.residual_function.3.weight', 'conv4_x.13.residual_function.1.bias', 'conv4_x.13.residual_function.1.weight', 'conv4_x.13.residual_function.0.weight', 'conv4_x.12.residual_function.7.bias', 'conv4_x.12.residual_function.7.weight', 'conv4_x.12.residual_function.6.weight', 'conv4_x.12.residual_function.4.bias', 'conv4_x.12.residual_function.4.weight', 'conv4_x.12.residual_function.3.weight', 'conv4_x.12.residual_function.1.bias', 'conv4_x.12.residual_function.1.weight', 'conv4_x.12.residual_function.0.weight', 'conv4_x.11.residual_function.7.bias', 'conv4_x.11.residual_function.7.weight', 'conv4_x.11.residual_function.6.weight', 'conv4_x.11.residual_function.4.bias', 'conv4_x.11.residual_function.4.weight', 'conv4_x.11.residual_function.3.weight', 'conv4_x.11.residual_function.1.bias', 'conv4_x.11.residual_function.1.weight', 'conv4_x.11.residual_function.0.weight', 'conv4_x.10.residual_function.7.bias', 'conv4_x.10.residual_function.7.weight', 'conv4_x.10.residual_function.6.weight', 'conv4_x.10.residual_function.4.bias', 'conv4_x.10.residual_function.4.weight', 'conv4_x.10.residual_function.3.weight', 'conv4_x.10.residual_function.1.bias', 'conv4_x.10.residual_function.1.weight', 'conv4_x.10.residual_function.0.weight', 'conv4_x.9.residual_function.7.bias', 'conv4_x.9.residual_function.7.weight', 'conv4_x.9.residual_function.6.weight', 'conv4_x.9.residual_function.4.bias', 'conv4_x.9.residual_function.4.weight', 'conv4_x.9.residual_function.3.weight', 'conv4_x.9.residual_function.1.bias', 'conv4_x.9.residual_function.1.weight', 'conv4_x.9.residual_function.0.weight', 'conv4_x.8.residual_function.7.bias', 'conv4_x.8.residual_function.7.weight', 'conv4_x.8.residual_function.6.weight', 'conv4_x.8.residual_function.4.bias', 'conv4_x.8.residual_function.4.weight', 'conv4_x.8.residual_function.3.weight', 'conv4_x.8.residual_function.1.bias', 'conv4_x.8.residual_function.1.weight', 'conv4_x.8.residual_function.0.weight', 'conv4_x.7.residual_function.7.bias', 'conv4_x.7.residual_function.7.weight', 'conv4_x.7.residual_function.6.weight', 'conv4_x.7.residual_function.4.bias', 'conv4_x.7.residual_function.4.weight', 'conv4_x.7.residual_function.3.weight', 'conv4_x.7.residual_function.1.bias', 'conv4_x.7.residual_function.1.weight', 'conv4_x.7.residual_function.0.weight', 'conv4_x.6.residual_function.7.bias', 'conv4_x.6.residual_function.7.weight', 'conv4_x.6.residual_function.6.weight', 'conv4_x.6.residual_function.4.bias', 'conv4_x.6.residual_function.4.weight', 'conv4_x.6.residual_function.3.weight', 'conv4_x.6.residual_function.1.bias', 'conv4_x.6.residual_function.1.weight', 'conv4_x.6.residual_function.0.weight', 'conv4_x.5.residual_function.7.bias', 'conv4_x.5.residual_function.7.weight', 'conv4_x.5.residual_function.6.weight', 'conv4_x.5.residual_function.4.bias', 'conv4_x.5.residual_function.4.weight', 'conv4_x.5.residual_function.3.weight', 'conv4_x.5.residual_function.1.bias', 'conv4_x.5.residual_function.1.weight', 'conv4_x.5.residual_function.0.weight', 'conv4_x.4.residual_function.7.bias', 'conv4_x.4.residual_function.7.weight', 'conv4_x.4.residual_function.6.weight', 'conv4_x.4.residual_function.4.bias', 'conv4_x.4.residual_function.4.weight', 'conv4_x.4.residual_function.3.weight', 'conv4_x.4.residual_function.1.bias', 'conv4_x.4.residual_function.1.weight', 'conv4_x.4.residual_function.0.weight', 'conv4_x.3.residual_function.7.bias', 'conv4_x.3.residual_function.7.weight', 'conv4_x.3.residual_function.6.weight', 'conv4_x.3.residual_function.4.bias', 'conv4_x.3.residual_function.4.weight', 'conv4_x.3.residual_function.3.weight', 'conv4_x.3.residual_function.1.bias', 'conv4_x.3.residual_function.1.weight', 'conv4_x.3.residual_function.0.weight', 'conv4_x.2.residual_function.7.bias', 'conv4_x.2.residual_function.7.weight', 'conv4_x.2.residual_function.6.weight', 'conv4_x.2.residual_function.4.bias', 'conv4_x.2.residual_function.4.weight', 'conv4_x.2.residual_function.3.weight', 'conv4_x.2.residual_function.1.bias', 'conv4_x.2.residual_function.1.weight', 'conv4_x.2.residual_function.0.weight', 'conv4_x.1.residual_function.7.bias', 'conv4_x.1.residual_function.7.weight', 'conv4_x.1.residual_function.6.weight', 'conv4_x.1.residual_function.4.bias', 'conv4_x.1.residual_function.4.weight', 'conv4_x.1.residual_function.3.weight', 'conv4_x.1.residual_function.1.bias', 'conv4_x.1.residual_function.1.weight', 'conv4_x.1.residual_function.0.weight', 'conv4_x.0.shortcut.1.bias', 'conv4_x.0.shortcut.1.weight', 'conv4_x.0.shortcut.0.weight', 'conv4_x.0.residual_function.7.bias', 'conv4_x.0.residual_function.7.weight', 'conv4_x.0.residual_function.6.weight', 'conv4_x.0.residual_function.4.bias', 'conv4_x.0.residual_function.4.weight', 'conv4_x.0.residual_function.3.weight', 'conv4_x.0.residual_function.1.bias', 'conv4_x.0.residual_function.1.weight', 'conv4_x.0.residual_function.0.weight', 'conv3_x.7.residual_function.7.bias', 'conv3_x.7.residual_function.7.weight', 'conv3_x.7.residual_function.6.weight', 'conv3_x.7.residual_function.4.bias', 'conv3_x.7.residual_function.4.weight', 'conv3_x.7.residual_function.3.weight', 'conv3_x.7.residual_function.1.bias', 'conv3_x.7.residual_function.1.weight', 'conv3_x.7.residual_function.0.weight', 'conv3_x.6.residual_function.7.bias', 'conv3_x.6.residual_function.7.weight', 'conv3_x.6.residual_function.6.weight', 'conv3_x.6.residual_function.4.bias', 'conv3_x.6.residual_function.4.weight', 'conv3_x.6.residual_function.3.weight', 'conv3_x.6.residual_function.1.bias', 'conv3_x.6.residual_function.1.weight', 'conv3_x.6.residual_function.0.weight', 'conv3_x.5.residual_function.7.bias', 'conv3_x.5.residual_function.7.weight', 'conv3_x.5.residual_function.6.weight', 'conv3_x.5.residual_function.4.bias', 'conv3_x.5.residual_function.4.weight', 'conv3_x.5.residual_function.3.weight', 'conv3_x.5.residual_function.1.bias', 'conv3_x.5.residual_function.1.weight', 'conv3_x.5.residual_function.0.weight', 'conv3_x.4.residual_function.7.bias', 'conv3_x.4.residual_function.7.weight', 'conv3_x.4.residual_function.6.weight', 'conv3_x.4.residual_function.4.bias', 'conv3_x.4.residual_function.4.weight', 'conv3_x.4.residual_function.3.weight', 'conv3_x.4.residual_function.1.bias', 'conv3_x.4.residual_function.1.weight', 'conv3_x.4.residual_function.0.weight', 'conv3_x.3.residual_function.7.bias', 'conv3_x.3.residual_function.7.weight', 'conv3_x.3.residual_function.6.weight', 'conv3_x.3.residual_function.4.bias', 'conv3_x.3.residual_function.4.weight', 'conv3_x.3.residual_function.3.weight', 'conv3_x.3.residual_function.1.bias', 'conv3_x.3.residual_function.1.weight', 'conv3_x.3.residual_function.0.weight', 'conv3_x.2.residual_function.7.bias', 'conv3_x.2.residual_function.7.weight', 'conv3_x.2.residual_function.6.weight', 'conv3_x.2.residual_function.4.bias', 'conv3_x.2.residual_function.4.weight', 'conv3_x.2.residual_function.3.weight', 'conv3_x.2.residual_function.1.bias', 'conv3_x.2.residual_function.1.weight', 'conv3_x.2.residual_function.0.weight', 'conv3_x.1.residual_function.7.bias', 'conv3_x.1.residual_function.7.weight', 'conv3_x.1.residual_function.6.weight', 'conv3_x.1.residual_function.4.bias', 'conv3_x.1.residual_function.4.weight', 'conv3_x.1.residual_function.3.weight', 'conv3_x.1.residual_function.1.bias', 'conv3_x.1.residual_function.1.weight', 'conv3_x.1.residual_function.0.weight', 'conv3_x.0.shortcut.1.bias', 'conv3_x.0.shortcut.1.weight', 'conv3_x.0.shortcut.0.weight', 'conv3_x.0.residual_function.7.bias', 'conv3_x.0.residual_function.7.weight', 'conv3_x.0.residual_function.6.weight', 'conv3_x.0.residual_function.4.bias', 'conv3_x.0.residual_function.4.weight', 'conv3_x.0.residual_function.3.weight', 'conv3_x.0.residual_function.1.bias', 'conv3_x.0.residual_function.1.weight', 'conv3_x.0.residual_function.0.weight', 'conv2_x.2.residual_function.7.bias', 'conv2_x.2.residual_function.7.weight', 'conv2_x.2.residual_function.6.weight', 'conv2_x.2.residual_function.4.bias', 'conv2_x.2.residual_function.4.weight', 'conv2_x.2.residual_function.3.weight', 'conv2_x.2.residual_function.1.bias', 'conv2_x.2.residual_function.1.weight', 'conv2_x.2.residual_function.0.weight', 'conv2_x.1.residual_function.7.bias', 'conv2_x.1.residual_function.7.weight', 'conv2_x.1.residual_function.6.weight', 'conv2_x.1.residual_function.4.bias', 'conv2_x.1.residual_function.4.weight', 'conv2_x.1.residual_function.3.weight', 'conv2_x.1.residual_function.1.bias', 'conv2_x.1.residual_function.1.weight', 'conv2_x.1.residual_function.0.weight', 'conv2_x.0.shortcut.1.bias', 'conv2_x.0.shortcut.1.weight', 'conv2_x.0.shortcut.0.weight', 'conv2_x.0.residual_function.7.bias', 'conv2_x.0.residual_function.7.weight', 'conv2_x.0.residual_function.6.weight', 'conv2_x.0.residual_function.4.bias', 'conv2_x.0.residual_function.4.weight', 'conv2_x.0.residual_function.3.weight', 'conv2_x.0.residual_function.1.bias', 'conv2_x.0.residual_function.1.weight', 'conv2_x.0.residual_function.0.weight', 'conv1.1.bias', 'conv1.1.weight', 'conv1.0.weight']]
2025-06-08 08:49:33,582 [allreducer.py:672] INFO key_groupidx_maps: {'fc.bias': 0, 'fc.weight': 0, 'conv5_x.2.residual_function.7.bias': 0, 'conv5_x.2.residual_function.7.weight': 0, 'conv5_x.2.residual_function.6.weight': 0, 'conv5_x.2.residual_function.4.bias': 0, 'conv5_x.2.residual_function.4.weight': 0, 'conv5_x.2.residual_function.3.weight': 0, 'conv5_x.2.residual_function.1.bias': 0, 'conv5_x.2.residual_function.1.weight': 0, 'conv5_x.2.residual_function.0.weight': 0, 'conv5_x.1.residual_function.7.bias': 0, 'conv5_x.1.residual_function.7.weight': 0, 'conv5_x.1.residual_function.6.weight': 0, 'conv5_x.1.residual_function.4.bias': 0, 'conv5_x.1.residual_function.4.weight': 0, 'conv5_x.1.residual_function.3.weight': 0, 'conv5_x.1.residual_function.1.bias': 0, 'conv5_x.1.residual_function.1.weight': 0, 'conv5_x.1.residual_function.0.weight': 0, 'conv5_x.0.shortcut.1.bias': 0, 'conv5_x.0.shortcut.1.weight': 0, 'conv5_x.0.shortcut.0.weight': 0, 'conv5_x.0.residual_function.7.bias': 0, 'conv5_x.0.residual_function.7.weight': 0, 'conv5_x.0.residual_function.6.weight': 0, 'conv5_x.0.residual_function.4.bias': 0, 'conv5_x.0.residual_function.4.weight': 0, 'conv5_x.0.residual_function.3.weight': 0, 'conv5_x.0.residual_function.1.bias': 0, 'conv5_x.0.residual_function.1.weight': 0, 'conv5_x.0.residual_function.0.weight': 0, 'conv4_x.35.residual_function.7.bias': 0, 'conv4_x.35.residual_function.7.weight': 0, 'conv4_x.35.residual_function.6.weight': 0, 'conv4_x.35.residual_function.4.bias': 0, 'conv4_x.35.residual_function.4.weight': 0, 'conv4_x.35.residual_function.3.weight': 0, 'conv4_x.35.residual_function.1.bias': 0, 'conv4_x.35.residual_function.1.weight': 0, 'conv4_x.35.residual_function.0.weight': 0, 'conv4_x.34.residual_function.7.bias': 0, 'conv4_x.34.residual_function.7.weight': 0, 'conv4_x.34.residual_function.6.weight': 0, 'conv4_x.34.residual_function.4.bias': 0, 'conv4_x.34.residual_function.4.weight': 0, 'conv4_x.34.residual_function.3.weight': 0, 'conv4_x.34.residual_function.1.bias': 0, 'conv4_x.34.residual_function.1.weight': 0, 'conv4_x.34.residual_function.0.weight': 0, 'conv4_x.33.residual_function.7.bias': 0, 'conv4_x.33.residual_function.7.weight': 0, 'conv4_x.33.residual_function.6.weight': 0, 'conv4_x.33.residual_function.4.bias': 0, 'conv4_x.33.residual_function.4.weight': 0, 'conv4_x.33.residual_function.3.weight': 0, 'conv4_x.33.residual_function.1.bias': 0, 'conv4_x.33.residual_function.1.weight': 0, 'conv4_x.33.residual_function.0.weight': 0, 'conv4_x.32.residual_function.7.bias': 0, 'conv4_x.32.residual_function.7.weight': 0, 'conv4_x.32.residual_function.6.weight': 0, 'conv4_x.32.residual_function.4.bias': 0, 'conv4_x.32.residual_function.4.weight': 0, 'conv4_x.32.residual_function.3.weight': 0, 'conv4_x.32.residual_function.1.bias': 0, 'conv4_x.32.residual_function.1.weight': 0, 'conv4_x.32.residual_function.0.weight': 0, 'conv4_x.31.residual_function.7.bias': 0, 'conv4_x.31.residual_function.7.weight': 0, 'conv4_x.31.residual_function.6.weight': 0, 'conv4_x.31.residual_function.4.bias': 0, 'conv4_x.31.residual_function.4.weight': 0, 'conv4_x.31.residual_function.3.weight': 0, 'conv4_x.31.residual_function.1.bias': 0, 'conv4_x.31.residual_function.1.weight': 0, 'conv4_x.31.residual_function.0.weight': 0, 'conv4_x.30.residual_function.7.bias': 0, 'conv4_x.30.residual_function.7.weight': 0, 'conv4_x.30.residual_function.6.weight': 0, 'conv4_x.30.residual_function.4.bias': 0, 'conv4_x.30.residual_function.4.weight': 0, 'conv4_x.30.residual_function.3.weight': 0, 'conv4_x.30.residual_function.1.bias': 0, 'conv4_x.30.residual_function.1.weight': 0, 'conv4_x.30.residual_function.0.weight': 0, 'conv4_x.29.residual_function.7.bias': 0, 'conv4_x.29.residual_function.7.weight': 0, 'conv4_x.29.residual_function.6.weight': 0, 'conv4_x.29.residual_function.4.bias': 0, 'conv4_x.29.residual_function.4.weight': 0, 'conv4_x.29.residual_function.3.weight': 0, 'conv4_x.29.residual_function.1.bias': 0, 'conv4_x.29.residual_function.1.weight': 0, 'conv4_x.29.residual_function.0.weight': 0, 'conv4_x.28.residual_function.7.bias': 0, 'conv4_x.28.residual_function.7.weight': 0, 'conv4_x.28.residual_function.6.weight': 0, 'conv4_x.28.residual_function.4.bias': 0, 'conv4_x.28.residual_function.4.weight': 0, 'conv4_x.28.residual_function.3.weight': 0, 'conv4_x.28.residual_function.1.bias': 0, 'conv4_x.28.residual_function.1.weight': 0, 'conv4_x.28.residual_function.0.weight': 0, 'conv4_x.27.residual_function.7.bias': 0, 'conv4_x.27.residual_function.7.weight': 0, 'conv4_x.27.residual_function.6.weight': 0, 'conv4_x.27.residual_function.4.bias': 0, 'conv4_x.27.residual_function.4.weight': 0, 'conv4_x.27.residual_function.3.weight': 0, 'conv4_x.27.residual_function.1.bias': 0, 'conv4_x.27.residual_function.1.weight': 0, 'conv4_x.27.residual_function.0.weight': 0, 'conv4_x.26.residual_function.7.bias': 0, 'conv4_x.26.residual_function.7.weight': 0, 'conv4_x.26.residual_function.6.weight': 0, 'conv4_x.26.residual_function.4.bias': 0, 'conv4_x.26.residual_function.4.weight': 0, 'conv4_x.26.residual_function.3.weight': 0, 'conv4_x.26.residual_function.1.bias': 0, 'conv4_x.26.residual_function.1.weight': 0, 'conv4_x.26.residual_function.0.weight': 0, 'conv4_x.25.residual_function.7.bias': 0, 'conv4_x.25.residual_function.7.weight': 0, 'conv4_x.25.residual_function.6.weight': 0, 'conv4_x.25.residual_function.4.bias': 0, 'conv4_x.25.residual_function.4.weight': 0, 'conv4_x.25.residual_function.3.weight': 0, 'conv4_x.25.residual_function.1.bias': 0, 'conv4_x.25.residual_function.1.weight': 0, 'conv4_x.25.residual_function.0.weight': 0, 'conv4_x.24.residual_function.7.bias': 0, 'conv4_x.24.residual_function.7.weight': 0, 'conv4_x.24.residual_function.6.weight': 0, 'conv4_x.24.residual_function.4.bias': 0, 'conv4_x.24.residual_function.4.weight': 0, 'conv4_x.24.residual_function.3.weight': 0, 'conv4_x.24.residual_function.1.bias': 0, 'conv4_x.24.residual_function.1.weight': 0, 'conv4_x.24.residual_function.0.weight': 0, 'conv4_x.23.residual_function.7.bias': 0, 'conv4_x.23.residual_function.7.weight': 0, 'conv4_x.23.residual_function.6.weight': 0, 'conv4_x.23.residual_function.4.bias': 0, 'conv4_x.23.residual_function.4.weight': 0, 'conv4_x.23.residual_function.3.weight': 0, 'conv4_x.23.residual_function.1.bias': 0, 'conv4_x.23.residual_function.1.weight': 0, 'conv4_x.23.residual_function.0.weight': 0, 'conv4_x.22.residual_function.7.bias': 0, 'conv4_x.22.residual_function.7.weight': 0, 'conv4_x.22.residual_function.6.weight': 0, 'conv4_x.22.residual_function.4.bias': 0, 'conv4_x.22.residual_function.4.weight': 0, 'conv4_x.22.residual_function.3.weight': 0, 'conv4_x.22.residual_function.1.bias': 0, 'conv4_x.22.residual_function.1.weight': 0, 'conv4_x.22.residual_function.0.weight': 0, 'conv4_x.21.residual_function.7.bias': 0, 'conv4_x.21.residual_function.7.weight': 0, 'conv4_x.21.residual_function.6.weight': 0, 'conv4_x.21.residual_function.4.bias': 0, 'conv4_x.21.residual_function.4.weight': 0, 'conv4_x.21.residual_function.3.weight': 0, 'conv4_x.21.residual_function.1.bias': 0, 'conv4_x.21.residual_function.1.weight': 0, 'conv4_x.21.residual_function.0.weight': 0, 'conv4_x.20.residual_function.7.bias': 0, 'conv4_x.20.residual_function.7.weight': 0, 'conv4_x.20.residual_function.6.weight': 0, 'conv4_x.20.residual_function.4.bias': 0, 'conv4_x.20.residual_function.4.weight': 0, 'conv4_x.20.residual_function.3.weight': 0, 'conv4_x.20.residual_function.1.bias': 0, 'conv4_x.20.residual_function.1.weight': 0, 'conv4_x.20.residual_function.0.weight': 0, 'conv4_x.19.residual_function.7.bias': 0, 'conv4_x.19.residual_function.7.weight': 0, 'conv4_x.19.residual_function.6.weight': 0, 'conv4_x.19.residual_function.4.bias': 0, 'conv4_x.19.residual_function.4.weight': 0, 'conv4_x.19.residual_function.3.weight': 0, 'conv4_x.19.residual_function.1.bias': 0, 'conv4_x.19.residual_function.1.weight': 0, 'conv4_x.19.residual_function.0.weight': 0, 'conv4_x.18.residual_function.7.bias': 0, 'conv4_x.18.residual_function.7.weight': 0, 'conv4_x.18.residual_function.6.weight': 0, 'conv4_x.18.residual_function.4.bias': 0, 'conv4_x.18.residual_function.4.weight': 0, 'conv4_x.18.residual_function.3.weight': 0, 'conv4_x.18.residual_function.1.bias': 0, 'conv4_x.18.residual_function.1.weight': 0, 'conv4_x.18.residual_function.0.weight': 0, 'conv4_x.17.residual_function.7.bias': 0, 'conv4_x.17.residual_function.7.weight': 0, 'conv4_x.17.residual_function.6.weight': 0, 'conv4_x.17.residual_function.4.bias': 0, 'conv4_x.17.residual_function.4.weight': 0, 'conv4_x.17.residual_function.3.weight': 0, 'conv4_x.17.residual_function.1.bias': 0, 'conv4_x.17.residual_function.1.weight': 0, 'conv4_x.17.residual_function.0.weight': 0, 'conv4_x.16.residual_function.7.bias': 0, 'conv4_x.16.residual_function.7.weight': 0, 'conv4_x.16.residual_function.6.weight': 0, 'conv4_x.16.residual_function.4.bias': 0, 'conv4_x.16.residual_function.4.weight': 0, 'conv4_x.16.residual_function.3.weight': 0, 'conv4_x.16.residual_function.1.bias': 0, 'conv4_x.16.residual_function.1.weight': 0, 'conv4_x.16.residual_function.0.weight': 0, 'conv4_x.15.residual_function.7.bias': 0, 'conv4_x.15.residual_function.7.weight': 0, 'conv4_x.15.residual_function.6.weight': 0, 'conv4_x.15.residual_function.4.bias': 0, 'conv4_x.15.residual_function.4.weight': 0, 'conv4_x.15.residual_function.3.weight': 0, 'conv4_x.15.residual_function.1.bias': 0, 'conv4_x.15.residual_function.1.weight': 0, 'conv4_x.15.residual_function.0.weight': 0, 'conv4_x.14.residual_function.7.bias': 0, 'conv4_x.14.residual_function.7.weight': 0, 'conv4_x.14.residual_function.6.weight': 0, 'conv4_x.14.residual_function.4.bias': 0, 'conv4_x.14.residual_function.4.weight': 0, 'conv4_x.14.residual_function.3.weight': 0, 'conv4_x.14.residual_function.1.bias': 0, 'conv4_x.14.residual_function.1.weight': 0, 'conv4_x.14.residual_function.0.weight': 0, 'conv4_x.13.residual_function.7.bias': 0, 'conv4_x.13.residual_function.7.weight': 0, 'conv4_x.13.residual_function.6.weight': 0, 'conv4_x.13.residual_function.4.bias': 0, 'conv4_x.13.residual_function.4.weight': 0, 'conv4_x.13.residual_function.3.weight': 0, 'conv4_x.13.residual_function.1.bias': 0, 'conv4_x.13.residual_function.1.weight': 0, 'conv4_x.13.residual_function.0.weight': 0, 'conv4_x.12.residual_function.7.bias': 0, 'conv4_x.12.residual_function.7.weight': 0, 'conv4_x.12.residual_function.6.weight': 0, 'conv4_x.12.residual_function.4.bias': 0, 'conv4_x.12.residual_function.4.weight': 0, 'conv4_x.12.residual_function.3.weight': 0, 'conv4_x.12.residual_function.1.bias': 0, 'conv4_x.12.residual_function.1.weight': 0, 'conv4_x.12.residual_function.0.weight': 0, 'conv4_x.11.residual_function.7.bias': 0, 'conv4_x.11.residual_function.7.weight': 0, 'conv4_x.11.residual_function.6.weight': 0, 'conv4_x.11.residual_function.4.bias': 0, 'conv4_x.11.residual_function.4.weight': 0, 'conv4_x.11.residual_function.3.weight': 0, 'conv4_x.11.residual_function.1.bias': 0, 'conv4_x.11.residual_function.1.weight': 0, 'conv4_x.11.residual_function.0.weight': 0, 'conv4_x.10.residual_function.7.bias': 0, 'conv4_x.10.residual_function.7.weight': 0, 'conv4_x.10.residual_function.6.weight': 0, 'conv4_x.10.residual_function.4.bias': 0, 'conv4_x.10.residual_function.4.weight': 0, 'conv4_x.10.residual_function.3.weight': 0, 'conv4_x.10.residual_function.1.bias': 0, 'conv4_x.10.residual_function.1.weight': 0, 'conv4_x.10.residual_function.0.weight': 0, 'conv4_x.9.residual_function.7.bias': 0, 'conv4_x.9.residual_function.7.weight': 0, 'conv4_x.9.residual_function.6.weight': 0, 'conv4_x.9.residual_function.4.bias': 0, 'conv4_x.9.residual_function.4.weight': 0, 'conv4_x.9.residual_function.3.weight': 0, 'conv4_x.9.residual_function.1.bias': 0, 'conv4_x.9.residual_function.1.weight': 0, 'conv4_x.9.residual_function.0.weight': 0, 'conv4_x.8.residual_function.7.bias': 0, 'conv4_x.8.residual_function.7.weight': 0, 'conv4_x.8.residual_function.6.weight': 0, 'conv4_x.8.residual_function.4.bias': 0, 'conv4_x.8.residual_function.4.weight': 0, 'conv4_x.8.residual_function.3.weight': 0, 'conv4_x.8.residual_function.1.bias': 0, 'conv4_x.8.residual_function.1.weight': 0, 'conv4_x.8.residual_function.0.weight': 0, 'conv4_x.7.residual_function.7.bias': 0, 'conv4_x.7.residual_function.7.weight': 0, 'conv4_x.7.residual_function.6.weight': 0, 'conv4_x.7.residual_function.4.bias': 0, 'conv4_x.7.residual_function.4.weight': 0, 'conv4_x.7.residual_function.3.weight': 0, 'conv4_x.7.residual_function.1.bias': 0, 'conv4_x.7.residual_function.1.weight': 0, 'conv4_x.7.residual_function.0.weight': 0, 'conv4_x.6.residual_function.7.bias': 0, 'conv4_x.6.residual_function.7.weight': 0, 'conv4_x.6.residual_function.6.weight': 0, 'conv4_x.6.residual_function.4.bias': 0, 'conv4_x.6.residual_function.4.weight': 0, 'conv4_x.6.residual_function.3.weight': 0, 'conv4_x.6.residual_function.1.bias': 0, 'conv4_x.6.residual_function.1.weight': 0, 'conv4_x.6.residual_function.0.weight': 0, 'conv4_x.5.residual_function.7.bias': 0, 'conv4_x.5.residual_function.7.weight': 0, 'conv4_x.5.residual_function.6.weight': 0, 'conv4_x.5.residual_function.4.bias': 0, 'conv4_x.5.residual_function.4.weight': 0, 'conv4_x.5.residual_function.3.weight': 0, 'conv4_x.5.residual_function.1.bias': 0, 'conv4_x.5.residual_function.1.weight': 0, 'conv4_x.5.residual_function.0.weight': 0, 'conv4_x.4.residual_function.7.bias': 0, 'conv4_x.4.residual_function.7.weight': 0, 'conv4_x.4.residual_function.6.weight': 0, 'conv4_x.4.residual_function.4.bias': 0, 'conv4_x.4.residual_function.4.weight': 0, 'conv4_x.4.residual_function.3.weight': 0, 'conv4_x.4.residual_function.1.bias': 0, 'conv4_x.4.residual_function.1.weight': 0, 'conv4_x.4.residual_function.0.weight': 0, 'conv4_x.3.residual_function.7.bias': 0, 'conv4_x.3.residual_function.7.weight': 0, 'conv4_x.3.residual_function.6.weight': 0, 'conv4_x.3.residual_function.4.bias': 0, 'conv4_x.3.residual_function.4.weight': 0, 'conv4_x.3.residual_function.3.weight': 0, 'conv4_x.3.residual_function.1.bias': 0, 'conv4_x.3.residual_function.1.weight': 0, 'conv4_x.3.residual_function.0.weight': 0, 'conv4_x.2.residual_function.7.bias': 0, 'conv4_x.2.residual_function.7.weight': 0, 'conv4_x.2.residual_function.6.weight': 0, 'conv4_x.2.residual_function.4.bias': 0, 'conv4_x.2.residual_function.4.weight': 0, 'conv4_x.2.residual_function.3.weight': 0, 'conv4_x.2.residual_function.1.bias': 0, 'conv4_x.2.residual_function.1.weight': 0, 'conv4_x.2.residual_function.0.weight': 0, 'conv4_x.1.residual_function.7.bias': 0, 'conv4_x.1.residual_function.7.weight': 0, 'conv4_x.1.residual_function.6.weight': 0, 'conv4_x.1.residual_function.4.bias': 0, 'conv4_x.1.residual_function.4.weight': 0, 'conv4_x.1.residual_function.3.weight': 0, 'conv4_x.1.residual_function.1.bias': 0, 'conv4_x.1.residual_function.1.weight': 0, 'conv4_x.1.residual_function.0.weight': 0, 'conv4_x.0.shortcut.1.bias': 0, 'conv4_x.0.shortcut.1.weight': 0, 'conv4_x.0.shortcut.0.weight': 0, 'conv4_x.0.residual_function.7.bias': 0, 'conv4_x.0.residual_function.7.weight': 0, 'conv4_x.0.residual_function.6.weight': 0, 'conv4_x.0.residual_function.4.bias': 0, 'conv4_x.0.residual_function.4.weight': 0, 'conv4_x.0.residual_function.3.weight': 0, 'conv4_x.0.residual_function.1.bias': 0, 'conv4_x.0.residual_function.1.weight': 0, 'conv4_x.0.residual_function.0.weight': 0, 'conv3_x.7.residual_function.7.bias': 0, 'conv3_x.7.residual_function.7.weight': 0, 'conv3_x.7.residual_function.6.weight': 0, 'conv3_x.7.residual_function.4.bias': 0, 'conv3_x.7.residual_function.4.weight': 0, 'conv3_x.7.residual_function.3.weight': 0, 'conv3_x.7.residual_function.1.bias': 0, 'conv3_x.7.residual_function.1.weight': 0, 'conv3_x.7.residual_function.0.weight': 0, 'conv3_x.6.residual_function.7.bias': 0, 'conv3_x.6.residual_function.7.weight': 0, 'conv3_x.6.residual_function.6.weight': 0, 'conv3_x.6.residual_function.4.bias': 0, 'conv3_x.6.residual_function.4.weight': 0, 'conv3_x.6.residual_function.3.weight': 0, 'conv3_x.6.residual_function.1.bias': 0, 'conv3_x.6.residual_function.1.weight': 0, 'conv3_x.6.residual_function.0.weight': 0, 'conv3_x.5.residual_function.7.bias': 0, 'conv3_x.5.residual_function.7.weight': 0, 'conv3_x.5.residual_function.6.weight': 0, 'conv3_x.5.residual_function.4.bias': 0, 'conv3_x.5.residual_function.4.weight': 0, 'conv3_x.5.residual_function.3.weight': 0, 'conv3_x.5.residual_function.1.bias': 0, 'conv3_x.5.residual_function.1.weight': 0, 'conv3_x.5.residual_function.0.weight': 0, 'conv3_x.4.residual_function.7.bias': 0, 'conv3_x.4.residual_function.7.weight': 0, 'conv3_x.4.residual_function.6.weight': 0, 'conv3_x.4.residual_function.4.bias': 0, 'conv3_x.4.residual_function.4.weight': 0, 'conv3_x.4.residual_function.3.weight': 0, 'conv3_x.4.residual_function.1.bias': 0, 'conv3_x.4.residual_function.1.weight': 0, 'conv3_x.4.residual_function.0.weight': 0, 'conv3_x.3.residual_function.7.bias': 0, 'conv3_x.3.residual_function.7.weight': 0, 'conv3_x.3.residual_function.6.weight': 0, 'conv3_x.3.residual_function.4.bias': 0, 'conv3_x.3.residual_function.4.weight': 0, 'conv3_x.3.residual_function.3.weight': 0, 'conv3_x.3.residual_function.1.bias': 0, 'conv3_x.3.residual_function.1.weight': 0, 'conv3_x.3.residual_function.0.weight': 0, 'conv3_x.2.residual_function.7.bias': 0, 'conv3_x.2.residual_function.7.weight': 0, 'conv3_x.2.residual_function.6.weight': 0, 'conv3_x.2.residual_function.4.bias': 0, 'conv3_x.2.residual_function.4.weight': 0, 'conv3_x.2.residual_function.3.weight': 0, 'conv3_x.2.residual_function.1.bias': 0, 'conv3_x.2.residual_function.1.weight': 0, 'conv3_x.2.residual_function.0.weight': 0, 'conv3_x.1.residual_function.7.bias': 0, 'conv3_x.1.residual_function.7.weight': 0, 'conv3_x.1.residual_function.6.weight': 0, 'conv3_x.1.residual_function.4.bias': 0, 'conv3_x.1.residual_function.4.weight': 0, 'conv3_x.1.residual_function.3.weight': 0, 'conv3_x.1.residual_function.1.bias': 0, 'conv3_x.1.residual_function.1.weight': 0, 'conv3_x.1.residual_function.0.weight': 0, 'conv3_x.0.shortcut.1.bias': 0, 'conv3_x.0.shortcut.1.weight': 0, 'conv3_x.0.shortcut.0.weight': 0, 'conv3_x.0.residual_function.7.bias': 0, 'conv3_x.0.residual_function.7.weight': 0, 'conv3_x.0.residual_function.6.weight': 0, 'conv3_x.0.residual_function.4.bias': 0, 'conv3_x.0.residual_function.4.weight': 0, 'conv3_x.0.residual_function.3.weight': 0, 'conv3_x.0.residual_function.1.bias': 0, 'conv3_x.0.residual_function.1.weight': 0, 'conv3_x.0.residual_function.0.weight': 0, 'conv2_x.2.residual_function.7.bias': 0, 'conv2_x.2.residual_function.7.weight': 0, 'conv2_x.2.residual_function.6.weight': 0, 'conv2_x.2.residual_function.4.bias': 0, 'conv2_x.2.residual_function.4.weight': 0, 'conv2_x.2.residual_function.3.weight': 0, 'conv2_x.2.residual_function.1.bias': 0, 'conv2_x.2.residual_function.1.weight': 0, 'conv2_x.2.residual_function.0.weight': 0, 'conv2_x.1.residual_function.7.bias': 0, 'conv2_x.1.residual_function.7.weight': 0, 'conv2_x.1.residual_function.6.weight': 0, 'conv2_x.1.residual_function.4.bias': 0, 'conv2_x.1.residual_function.4.weight': 0, 'conv2_x.1.residual_function.3.weight': 0, 'conv2_x.1.residual_function.1.bias': 0, 'conv2_x.1.residual_function.1.weight': 0, 'conv2_x.1.residual_function.0.weight': 0, 'conv2_x.0.shortcut.1.bias': 0, 'conv2_x.0.shortcut.1.weight': 0, 'conv2_x.0.shortcut.0.weight': 0, 'conv2_x.0.residual_function.7.bias': 0, 'conv2_x.0.residual_function.7.weight': 0, 'conv2_x.0.residual_function.6.weight': 0, 'conv2_x.0.residual_function.4.bias': 0, 'conv2_x.0.residual_function.4.weight': 0, 'conv2_x.0.residual_function.3.weight': 0, 'conv2_x.0.residual_function.1.bias': 0, 'conv2_x.0.residual_function.1.weight': 0, 'conv2_x.0.residual_function.0.weight': 0, 'conv1.1.bias': 0, 'conv1.1.weight': 0, 'conv1.0.weight': 0}
2025-06-08 08:49:33,584 [allreducer.py:708] INFO offsets: 
2025-06-08 08:49:33,584 [allreducer.py:345] INFO dynamic densities = [0.01]
2025-06-08 08:49:33,594 [allreducer.py:659] INFO spar_groups: [{'conv1.0.weight': ((0, 1728), (0, 1728)), 'conv1.1.weight': ((0, 64), (1728, 1792)), 'conv1.1.bias': ((0, 64), (1792, 1856)), 'conv2_x.0.residual_function.0.weight': ((0, 4096), (1856, 5952)), 'conv2_x.0.residual_function.1.weight': ((0, 64), (5952, 6016)), 'conv2_x.0.residual_function.1.bias': ((0, 64), (6016, 6080)), 'conv2_x.0.residual_function.3.weight': ((0, 36864), (6080, 42944)), 'conv2_x.0.residual_function.4.weight': ((0, 64), (42944, 43008)), 'conv2_x.0.residual_function.4.bias': ((0, 64), (43008, 43072)), 'conv2_x.0.residual_function.6.weight': ((0, 16384), (43072, 59456)), 'conv2_x.0.residual_function.7.weight': ((0, 256), (59456, 59712)), 'conv2_x.0.residual_function.7.bias': ((0, 256), (59712, 59968)), 'conv2_x.0.shortcut.0.weight': ((0, 16384), (59968, 76352)), 'conv2_x.0.shortcut.1.weight': ((0, 256), (76352, 76608)), 'conv2_x.0.shortcut.1.bias': ((0, 256), (76608, 76864)), 'conv2_x.1.residual_function.0.weight': ((0, 16384), (76864, 93248)), 'conv2_x.1.residual_function.1.weight': ((0, 64), (93248, 93312)), 'conv2_x.1.residual_function.1.bias': ((0, 64), (93312, 93376)), 'conv2_x.1.residual_function.3.weight': ((0, 36864), (93376, 130240)), 'conv2_x.1.residual_function.4.weight': ((0, 64), (130240, 130304)), 'conv2_x.1.residual_function.4.bias': ((0, 64), (130304, 130368)), 'conv2_x.1.residual_function.6.weight': ((0, 16384), (130368, 146752)), 'conv2_x.1.residual_function.7.weight': ((0, 256), (146752, 147008)), 'conv2_x.1.residual_function.7.bias': ((0, 256), (147008, 147264)), 'conv2_x.2.residual_function.0.weight': ((0, 16384), (147264, 163648)), 'conv2_x.2.residual_function.1.weight': ((0, 64), (163648, 163712)), 'conv2_x.2.residual_function.1.bias': ((0, 64), (163712, 163776)), 'conv2_x.2.residual_function.3.weight': ((0, 36864), (163776, 200640)), 'conv2_x.2.residual_function.4.weight': ((0, 64), (200640, 200704)), 'conv2_x.2.residual_function.4.bias': ((0, 64), (200704, 200768)), 'conv2_x.2.residual_function.6.weight': ((0, 16384), (200768, 217152)), 'conv2_x.2.residual_function.7.weight': ((0, 256), (217152, 217408)), 'conv2_x.2.residual_function.7.bias': ((0, 256), (217408, 217664)), 'conv3_x.0.residual_function.0.weight': ((0, 32768), (217664, 250432)), 'conv3_x.0.residual_function.1.weight': ((0, 128), (250432, 250560)), 'conv3_x.0.residual_function.1.bias': ((0, 128), (250560, 250688)), 'conv3_x.0.residual_function.3.weight': ((0, 147456), (250688, 398144)), 'conv3_x.0.residual_function.4.weight': ((0, 128), (398144, 398272)), 'conv3_x.0.residual_function.4.bias': ((0, 128), (398272, 398400)), 'conv3_x.0.residual_function.6.weight': ((0, 65536), (398400, 463936)), 'conv3_x.0.residual_function.7.weight': ((0, 512), (463936, 464448)), 'conv3_x.0.residual_function.7.bias': ((0, 512), (464448, 464960)), 'conv3_x.0.shortcut.0.weight': ((0, 131072), (464960, 596032)), 'conv3_x.0.shortcut.1.weight': ((0, 512), (596032, 596544)), 'conv3_x.0.shortcut.1.bias': ((0, 512), (596544, 597056)), 'conv3_x.1.residual_function.0.weight': ((0, 65536), (597056, 662592)), 'conv3_x.1.residual_function.1.weight': ((0, 128), (662592, 662720)), 'conv3_x.1.residual_function.1.bias': ((0, 128), (662720, 662848)), 'conv3_x.1.residual_function.3.weight': ((0, 147456), (662848, 810304)), 'conv3_x.1.residual_function.4.weight': ((0, 128), (810304, 810432)), 'conv3_x.1.residual_function.4.bias': ((0, 128), (810432, 810560)), 'conv3_x.1.residual_function.6.weight': ((0, 65536), (810560, 876096)), 'conv3_x.1.residual_function.7.weight': ((0, 512), (876096, 876608)), 'conv3_x.1.residual_function.7.bias': ((0, 512), (876608, 877120)), 'conv3_x.2.residual_function.0.weight': ((0, 65536), (877120, 942656)), 'conv3_x.2.residual_function.1.weight': ((0, 128), (942656, 942784)), 'conv3_x.2.residual_function.1.bias': ((0, 128), (942784, 942912)), 'conv3_x.2.residual_function.3.weight': ((0, 147456), (942912, 1090368)), 'conv3_x.2.residual_function.4.weight': ((0, 128), (1090368, 1090496)), 'conv3_x.2.residual_function.4.bias': ((0, 128), (1090496, 1090624)), 'conv3_x.2.residual_function.6.weight': ((0, 65536), (1090624, 1156160)), 'conv3_x.2.residual_function.7.weight': ((0, 512), (1156160, 1156672)), 'conv3_x.2.residual_function.7.bias': ((0, 512), (1156672, 1157184)), 'conv3_x.3.residual_function.0.weight': ((0, 65536), (1157184, 1222720)), 'conv3_x.3.residual_function.1.weight': ((0, 128), (1222720, 1222848)), 'conv3_x.3.residual_function.1.bias': ((0, 128), (1222848, 1222976)), 'conv3_x.3.residual_function.3.weight': ((0, 147456), (1222976, 1370432)), 'conv3_x.3.residual_function.4.weight': ((0, 128), (1370432, 1370560)), 'conv3_x.3.residual_function.4.bias': ((0, 128), (1370560, 1370688)), 'conv3_x.3.residual_function.6.weight': ((0, 65536), (1370688, 1436224)), 'conv3_x.3.residual_function.7.weight': ((0, 512), (1436224, 1436736)), 'conv3_x.3.residual_function.7.bias': ((0, 512), (1436736, 1437248)), 'conv3_x.4.residual_function.0.weight': ((0, 65536), (1437248, 1502784)), 'conv3_x.4.residual_function.1.weight': ((0, 128), (1502784, 1502912)), 'conv3_x.4.residual_function.1.bias': ((0, 128), (1502912, 1503040)), 'conv3_x.4.residual_function.3.weight': ((0, 147456), (1503040, 1650496)), 'conv3_x.4.residual_function.4.weight': ((0, 128), (1650496, 1650624)), 'conv3_x.4.residual_function.4.bias': ((0, 128), (1650624, 1650752)), 'conv3_x.4.residual_function.6.weight': ((0, 65536), (1650752, 1716288)), 'conv3_x.4.residual_function.7.weight': ((0, 512), (1716288, 1716800)), 'conv3_x.4.residual_function.7.bias': ((0, 512), (1716800, 1717312)), 'conv3_x.5.residual_function.0.weight': ((0, 65536), (1717312, 1782848)), 'conv3_x.5.residual_function.1.weight': ((0, 128), (1782848, 1782976)), 'conv3_x.5.residual_function.1.bias': ((0, 128), (1782976, 1783104)), 'conv3_x.5.residual_function.3.weight': ((0, 147456), (1783104, 1930560)), 'conv3_x.5.residual_function.4.weight': ((0, 128), (1930560, 1930688)), 'conv3_x.5.residual_function.4.bias': ((0, 128), (1930688, 1930816)), 'conv3_x.5.residual_function.6.weight': ((0, 65536), (1930816, 1996352)), 'conv3_x.5.residual_function.7.weight': ((0, 512), (1996352, 1996864)), 'conv3_x.5.residual_function.7.bias': ((0, 512), (1996864, 1997376)), 'conv3_x.6.residual_function.0.weight': ((0, 65536), (1997376, 2062912)), 'conv3_x.6.residual_function.1.weight': ((0, 128), (2062912, 2063040)), 'conv3_x.6.residual_function.1.bias': ((0, 128), (2063040, 2063168)), 'conv3_x.6.residual_function.3.weight': ((0, 147456), (2063168, 2210624)), 'conv3_x.6.residual_function.4.weight': ((0, 128), (2210624, 2210752)), 'conv3_x.6.residual_function.4.bias': ((0, 128), (2210752, 2210880)), 'conv3_x.6.residual_function.6.weight': ((0, 65536), (2210880, 2276416)), 'conv3_x.6.residual_function.7.weight': ((0, 512), (2276416, 2276928)), 'conv3_x.6.residual_function.7.bias': ((0, 512), (2276928, 2277440)), 'conv3_x.7.residual_function.0.weight': ((0, 65536), (2277440, 2342976)), 'conv3_x.7.residual_function.1.weight': ((0, 128), (2342976, 2343104)), 'conv3_x.7.residual_function.1.bias': ((0, 128), (2343104, 2343232)), 'conv3_x.7.residual_function.3.weight': ((0, 147456), (2343232, 2490688)), 'conv3_x.7.residual_function.4.weight': ((0, 128), (2490688, 2490816)), 'conv3_x.7.residual_function.4.bias': ((0, 128), (2490816, 2490944)), 'conv3_x.7.residual_function.6.weight': ((0, 65536), (2490944, 2556480)), 'conv3_x.7.residual_function.7.weight': ((0, 512), (2556480, 2556992)), 'conv3_x.7.residual_function.7.bias': ((0, 512), (2556992, 2557504)), 'conv4_x.0.residual_function.0.weight': ((0, 131072), (2557504, 2688576)), 'conv4_x.0.residual_function.1.weight': ((0, 256), (2688576, 2688832)), 'conv4_x.0.residual_function.1.bias': ((0, 256), (2688832, 2689088)), 'conv4_x.0.residual_function.3.weight': ((0, 589824), (2689088, 3278912)), 'conv4_x.0.residual_function.4.weight': ((0, 256), (3278912, 3279168)), 'conv4_x.0.residual_function.4.bias': ((0, 256), (3279168, 3279424)), 'conv4_x.0.residual_function.6.weight': ((0, 262144), (3279424, 3541568)), 'conv4_x.0.residual_function.7.weight': ((0, 1024), (3541568, 3542592)), 'conv4_x.0.residual_function.7.bias': ((0, 1024), (3542592, 3543616)), 'conv4_x.0.shortcut.0.weight': ((0, 524288), (3543616, 4067904)), 'conv4_x.0.shortcut.1.weight': ((0, 1024), (4067904, 4068928)), 'conv4_x.0.shortcut.1.bias': ((0, 1024), (4068928, 4069952)), 'conv4_x.1.residual_function.0.weight': ((0, 262144), (4069952, 4332096)), 'conv4_x.1.residual_function.1.weight': ((0, 256), (4332096, 4332352)), 'conv4_x.1.residual_function.1.bias': ((0, 256), (4332352, 4332608)), 'conv4_x.1.residual_function.3.weight': ((0, 589824), (4332608, 4922432)), 'conv4_x.1.residual_function.4.weight': ((0, 256), (4922432, 4922688)), 'conv4_x.1.residual_function.4.bias': ((0, 256), (4922688, 4922944)), 'conv4_x.1.residual_function.6.weight': ((0, 262144), (4922944, 5185088)), 'conv4_x.1.residual_function.7.weight': ((0, 1024), (5185088, 5186112)), 'conv4_x.1.residual_function.7.bias': ((0, 1024), (5186112, 5187136)), 'conv4_x.2.residual_function.0.weight': ((0, 262144), (5187136, 5449280)), 'conv4_x.2.residual_function.1.weight': ((0, 256), (5449280, 5449536)), 'conv4_x.2.residual_function.1.bias': ((0, 256), (5449536, 5449792)), 'conv4_x.2.residual_function.3.weight': ((0, 589824), (5449792, 6039616)), 'conv4_x.2.residual_function.4.weight': ((0, 256), (6039616, 6039872)), 'conv4_x.2.residual_function.4.bias': ((0, 256), (6039872, 6040128)), 'conv4_x.2.residual_function.6.weight': ((0, 262144), (6040128, 6302272)), 'conv4_x.2.residual_function.7.weight': ((0, 1024), (6302272, 6303296)), 'conv4_x.2.residual_function.7.bias': ((0, 1024), (6303296, 6304320)), 'conv4_x.3.residual_function.0.weight': ((0, 262144), (6304320, 6566464)), 'conv4_x.3.residual_function.1.weight': ((0, 256), (6566464, 6566720)), 'conv4_x.3.residual_function.1.bias': ((0, 256), (6566720, 6566976)), 'conv4_x.3.residual_function.3.weight': ((0, 589824), (6566976, 7156800)), 'conv4_x.3.residual_function.4.weight': ((0, 256), (7156800, 7157056)), 'conv4_x.3.residual_function.4.bias': ((0, 256), (7157056, 7157312)), 'conv4_x.3.residual_function.6.weight': ((0, 262144), (7157312, 7419456)), 'conv4_x.3.residual_function.7.weight': ((0, 1024), (7419456, 7420480)), 'conv4_x.3.residual_function.7.bias': ((0, 1024), (7420480, 7421504)), 'conv4_x.4.residual_function.0.weight': ((0, 262144), (7421504, 7683648)), 'conv4_x.4.residual_function.1.weight': ((0, 256), (7683648, 7683904)), 'conv4_x.4.residual_function.1.bias': ((0, 256), (7683904, 7684160)), 'conv4_x.4.residual_function.3.weight': ((0, 589824), (7684160, 8273984)), 'conv4_x.4.residual_function.4.weight': ((0, 256), (8273984, 8274240)), 'conv4_x.4.residual_function.4.bias': ((0, 256), (8274240, 8274496)), 'conv4_x.4.residual_function.6.weight': ((0, 262144), (8274496, 8536640)), 'conv4_x.4.residual_function.7.weight': ((0, 1024), (8536640, 8537664)), 'conv4_x.4.residual_function.7.bias': ((0, 1024), (8537664, 8538688)), 'conv4_x.5.residual_function.0.weight': ((0, 262144), (8538688, 8800832)), 'conv4_x.5.residual_function.1.weight': ((0, 256), (8800832, 8801088)), 'conv4_x.5.residual_function.1.bias': ((0, 256), (8801088, 8801344)), 'conv4_x.5.residual_function.3.weight': ((0, 589824), (8801344, 9391168)), 'conv4_x.5.residual_function.4.weight': ((0, 256), (9391168, 9391424)), 'conv4_x.5.residual_function.4.bias': ((0, 256), (9391424, 9391680)), 'conv4_x.5.residual_function.6.weight': ((0, 262144), (9391680, 9653824)), 'conv4_x.5.residual_function.7.weight': ((0, 1024), (9653824, 9654848)), 'conv4_x.5.residual_function.7.bias': ((0, 1024), (9654848, 9655872)), 'conv4_x.6.residual_function.0.weight': ((0, 67633), (9655872, 9723505))}, {'conv4_x.6.residual_function.0.weight': ((67633, 262144), (0, 194511)), 'conv4_x.6.residual_function.1.weight': ((0, 256), (194511, 194767)), 'conv4_x.6.residual_function.1.bias': ((0, 256), (194767, 195023)), 'conv4_x.6.residual_function.3.weight': ((0, 589824), (195023, 784847)), 'conv4_x.6.residual_function.4.weight': ((0, 256), (784847, 785103)), 'conv4_x.6.residual_function.4.bias': ((0, 256), (785103, 785359)), 'conv4_x.6.residual_function.6.weight': ((0, 262144), (785359, 1047503)), 'conv4_x.6.residual_function.7.weight': ((0, 1024), (1047503, 1048527)), 'conv4_x.6.residual_function.7.bias': ((0, 1024), (1048527, 1049551)), 'conv4_x.7.residual_function.0.weight': ((0, 262144), (1049551, 1311695)), 'conv4_x.7.residual_function.1.weight': ((0, 256), (1311695, 1311951)), 'conv4_x.7.residual_function.1.bias': ((0, 256), (1311951, 1312207)), 'conv4_x.7.residual_function.3.weight': ((0, 589824), (1312207, 1902031)), 'conv4_x.7.residual_function.4.weight': ((0, 256), (1902031, 1902287)), 'conv4_x.7.residual_function.4.bias': ((0, 256), (1902287, 1902543)), 'conv4_x.7.residual_function.6.weight': ((0, 262144), (1902543, 2164687)), 'conv4_x.7.residual_function.7.weight': ((0, 1024), (2164687, 2165711)), 'conv4_x.7.residual_function.7.bias': ((0, 1024), (2165711, 2166735)), 'conv4_x.8.residual_function.0.weight': ((0, 262144), (2166735, 2428879)), 'conv4_x.8.residual_function.1.weight': ((0, 256), (2428879, 2429135)), 'conv4_x.8.residual_function.1.bias': ((0, 256), (2429135, 2429391)), 'conv4_x.8.residual_function.3.weight': ((0, 589824), (2429391, 3019215)), 'conv4_x.8.residual_function.4.weight': ((0, 256), (3019215, 3019471)), 'conv4_x.8.residual_function.4.bias': ((0, 256), (3019471, 3019727)), 'conv4_x.8.residual_function.6.weight': ((0, 262144), (3019727, 3281871)), 'conv4_x.8.residual_function.7.weight': ((0, 1024), (3281871, 3282895)), 'conv4_x.8.residual_function.7.bias': ((0, 1024), (3282895, 3283919)), 'conv4_x.9.residual_function.0.weight': ((0, 262144), (3283919, 3546063)), 'conv4_x.9.residual_function.1.weight': ((0, 256), (3546063, 3546319)), 'conv4_x.9.residual_function.1.bias': ((0, 256), (3546319, 3546575)), 'conv4_x.9.residual_function.3.weight': ((0, 589824), (3546575, 4136399)), 'conv4_x.9.residual_function.4.weight': ((0, 256), (4136399, 4136655)), 'conv4_x.9.residual_function.4.bias': ((0, 256), (4136655, 4136911)), 'conv4_x.9.residual_function.6.weight': ((0, 262144), (4136911, 4399055)), 'conv4_x.9.residual_function.7.weight': ((0, 1024), (4399055, 4400079)), 'conv4_x.9.residual_function.7.bias': ((0, 1024), (4400079, 4401103)), 'conv4_x.10.residual_function.0.weight': ((0, 262144), (4401103, 4663247)), 'conv4_x.10.residual_function.1.weight': ((0, 256), (4663247, 4663503)), 'conv4_x.10.residual_function.1.bias': ((0, 256), (4663503, 4663759)), 'conv4_x.10.residual_function.3.weight': ((0, 589824), (4663759, 5253583)), 'conv4_x.10.residual_function.4.weight': ((0, 256), (5253583, 5253839)), 'conv4_x.10.residual_function.4.bias': ((0, 256), (5253839, 5254095)), 'conv4_x.10.residual_function.6.weight': ((0, 262144), (5254095, 5516239)), 'conv4_x.10.residual_function.7.weight': ((0, 1024), (5516239, 5517263)), 'conv4_x.10.residual_function.7.bias': ((0, 1024), (5517263, 5518287)), 'conv4_x.11.residual_function.0.weight': ((0, 262144), (5518287, 5780431)), 'conv4_x.11.residual_function.1.weight': ((0, 256), (5780431, 5780687)), 'conv4_x.11.residual_function.1.bias': ((0, 256), (5780687, 5780943)), 'conv4_x.11.residual_function.3.weight': ((0, 589824), (5780943, 6370767)), 'conv4_x.11.residual_function.4.weight': ((0, 256), (6370767, 6371023)), 'conv4_x.11.residual_function.4.bias': ((0, 256), (6371023, 6371279)), 'conv4_x.11.residual_function.6.weight': ((0, 262144), (6371279, 6633423)), 'conv4_x.11.residual_function.7.weight': ((0, 1024), (6633423, 6634447)), 'conv4_x.11.residual_function.7.bias': ((0, 1024), (6634447, 6635471)), 'conv4_x.12.residual_function.0.weight': ((0, 262144), (6635471, 6897615)), 'conv4_x.12.residual_function.1.weight': ((0, 256), (6897615, 6897871)), 'conv4_x.12.residual_function.1.bias': ((0, 256), (6897871, 6898127)), 'conv4_x.12.residual_function.3.weight': ((0, 589824), (6898127, 7487951)), 'conv4_x.12.residual_function.4.weight': ((0, 256), (7487951, 7488207)), 'conv4_x.12.residual_function.4.bias': ((0, 256), (7488207, 7488463)), 'conv4_x.12.residual_function.6.weight': ((0, 262144), (7488463, 7750607)), 'conv4_x.12.residual_function.7.weight': ((0, 1024), (7750607, 7751631)), 'conv4_x.12.residual_function.7.bias': ((0, 1024), (7751631, 7752655)), 'conv4_x.13.residual_function.0.weight': ((0, 262144), (7752655, 8014799)), 'conv4_x.13.residual_function.1.weight': ((0, 256), (8014799, 8015055)), 'conv4_x.13.residual_function.1.bias': ((0, 256), (8015055, 8015311)), 'conv4_x.13.residual_function.3.weight': ((0, 589824), (8015311, 8605135)), 'conv4_x.13.residual_function.4.weight': ((0, 256), (8605135, 8605391)), 'conv4_x.13.residual_function.4.bias': ((0, 256), (8605391, 8605647)), 'conv4_x.13.residual_function.6.weight': ((0, 262144), (8605647, 8867791)), 'conv4_x.13.residual_function.7.weight': ((0, 1024), (8867791, 8868815)), 'conv4_x.13.residual_function.7.bias': ((0, 1024), (8868815, 8869839)), 'conv4_x.14.residual_function.0.weight': ((0, 262144), (8869839, 9131983)), 'conv4_x.14.residual_function.1.weight': ((0, 256), (9131983, 9132239)), 'conv4_x.14.residual_function.1.bias': ((0, 256), (9132239, 9132495)), 'conv4_x.14.residual_function.3.weight': ((0, 589824), (9132495, 9722319)), 'conv4_x.14.residual_function.4.weight': ((0, 256), (9722319, 9722575)), 'conv4_x.14.residual_function.4.bias': ((0, 256), (9722575, 9722831)), 'conv4_x.14.residual_function.6.weight': ((0, 674), (9722831, 9723505))}, {'conv4_x.14.residual_function.6.weight': ((674, 262144), (0, 261470)), 'conv4_x.14.residual_function.7.weight': ((0, 1024), (261470, 262494)), 'conv4_x.14.residual_function.7.bias': ((0, 1024), (262494, 263518)), 'conv4_x.15.residual_function.0.weight': ((0, 262144), (263518, 525662)), 'conv4_x.15.residual_function.1.weight': ((0, 256), (525662, 525918)), 'conv4_x.15.residual_function.1.bias': ((0, 256), (525918, 526174)), 'conv4_x.15.residual_function.3.weight': ((0, 589824), (526174, 1115998)), 'conv4_x.15.residual_function.4.weight': ((0, 256), (1115998, 1116254)), 'conv4_x.15.residual_function.4.bias': ((0, 256), (1116254, 1116510)), 'conv4_x.15.residual_function.6.weight': ((0, 262144), (1116510, 1378654)), 'conv4_x.15.residual_function.7.weight': ((0, 1024), (1378654, 1379678)), 'conv4_x.15.residual_function.7.bias': ((0, 1024), (1379678, 1380702)), 'conv4_x.16.residual_function.0.weight': ((0, 262144), (1380702, 1642846)), 'conv4_x.16.residual_function.1.weight': ((0, 256), (1642846, 1643102)), 'conv4_x.16.residual_function.1.bias': ((0, 256), (1643102, 1643358)), 'conv4_x.16.residual_function.3.weight': ((0, 589824), (1643358, 2233182)), 'conv4_x.16.residual_function.4.weight': ((0, 256), (2233182, 2233438)), 'conv4_x.16.residual_function.4.bias': ((0, 256), (2233438, 2233694)), 'conv4_x.16.residual_function.6.weight': ((0, 262144), (2233694, 2495838)), 'conv4_x.16.residual_function.7.weight': ((0, 1024), (2495838, 2496862)), 'conv4_x.16.residual_function.7.bias': ((0, 1024), (2496862, 2497886)), 'conv4_x.17.residual_function.0.weight': ((0, 262144), (2497886, 2760030)), 'conv4_x.17.residual_function.1.weight': ((0, 256), (2760030, 2760286)), 'conv4_x.17.residual_function.1.bias': ((0, 256), (2760286, 2760542)), 'conv4_x.17.residual_function.3.weight': ((0, 589824), (2760542, 3350366)), 'conv4_x.17.residual_function.4.weight': ((0, 256), (3350366, 3350622)), 'conv4_x.17.residual_function.4.bias': ((0, 256), (3350622, 3350878)), 'conv4_x.17.residual_function.6.weight': ((0, 262144), (3350878, 3613022)), 'conv4_x.17.residual_function.7.weight': ((0, 1024), (3613022, 3614046)), 'conv4_x.17.residual_function.7.bias': ((0, 1024), (3614046, 3615070)), 'conv4_x.18.residual_function.0.weight': ((0, 262144), (3615070, 3877214)), 'conv4_x.18.residual_function.1.weight': ((0, 256), (3877214, 3877470)), 'conv4_x.18.residual_function.1.bias': ((0, 256), (3877470, 3877726)), 'conv4_x.18.residual_function.3.weight': ((0, 589824), (3877726, 4467550)), 'conv4_x.18.residual_function.4.weight': ((0, 256), (4467550, 4467806)), 'conv4_x.18.residual_function.4.bias': ((0, 256), (4467806, 4468062)), 'conv4_x.18.residual_function.6.weight': ((0, 262144), (4468062, 4730206)), 'conv4_x.18.residual_function.7.weight': ((0, 1024), (4730206, 4731230)), 'conv4_x.18.residual_function.7.bias': ((0, 1024), (4731230, 4732254)), 'conv4_x.19.residual_function.0.weight': ((0, 262144), (4732254, 4994398)), 'conv4_x.19.residual_function.1.weight': ((0, 256), (4994398, 4994654)), 'conv4_x.19.residual_function.1.bias': ((0, 256), (4994654, 4994910)), 'conv4_x.19.residual_function.3.weight': ((0, 589824), (4994910, 5584734)), 'conv4_x.19.residual_function.4.weight': ((0, 256), (5584734, 5584990)), 'conv4_x.19.residual_function.4.bias': ((0, 256), (5584990, 5585246)), 'conv4_x.19.residual_function.6.weight': ((0, 262144), (5585246, 5847390)), 'conv4_x.19.residual_function.7.weight': ((0, 1024), (5847390, 5848414)), 'conv4_x.19.residual_function.7.bias': ((0, 1024), (5848414, 5849438)), 'conv4_x.20.residual_function.0.weight': ((0, 262144), (5849438, 6111582)), 'conv4_x.20.residual_function.1.weight': ((0, 256), (6111582, 6111838)), 'conv4_x.20.residual_function.1.bias': ((0, 256), (6111838, 6112094)), 'conv4_x.20.residual_function.3.weight': ((0, 589824), (6112094, 6701918)), 'conv4_x.20.residual_function.4.weight': ((0, 256), (6701918, 6702174)), 'conv4_x.20.residual_function.4.bias': ((0, 256), (6702174, 6702430)), 'conv4_x.20.residual_function.6.weight': ((0, 262144), (6702430, 6964574)), 'conv4_x.20.residual_function.7.weight': ((0, 1024), (6964574, 6965598)), 'conv4_x.20.residual_function.7.bias': ((0, 1024), (6965598, 6966622)), 'conv4_x.21.residual_function.0.weight': ((0, 262144), (6966622, 7228766)), 'conv4_x.21.residual_function.1.weight': ((0, 256), (7228766, 7229022)), 'conv4_x.21.residual_function.1.bias': ((0, 256), (7229022, 7229278)), 'conv4_x.21.residual_function.3.weight': ((0, 589824), (7229278, 7819102)), 'conv4_x.21.residual_function.4.weight': ((0, 256), (7819102, 7819358)), 'conv4_x.21.residual_function.4.bias': ((0, 256), (7819358, 7819614)), 'conv4_x.21.residual_function.6.weight': ((0, 262144), (7819614, 8081758)), 'conv4_x.21.residual_function.7.weight': ((0, 1024), (8081758, 8082782)), 'conv4_x.21.residual_function.7.bias': ((0, 1024), (8082782, 8083806)), 'conv4_x.22.residual_function.0.weight': ((0, 262144), (8083806, 8345950)), 'conv4_x.22.residual_function.1.weight': ((0, 256), (8345950, 8346206)), 'conv4_x.22.residual_function.1.bias': ((0, 256), (8346206, 8346462)), 'conv4_x.22.residual_function.3.weight': ((0, 589824), (8346462, 8936286)), 'conv4_x.22.residual_function.4.weight': ((0, 256), (8936286, 8936542)), 'conv4_x.22.residual_function.4.bias': ((0, 256), (8936542, 8936798)), 'conv4_x.22.residual_function.6.weight': ((0, 262144), (8936798, 9198942)), 'conv4_x.22.residual_function.7.weight': ((0, 1024), (9198942, 9199966)), 'conv4_x.22.residual_function.7.bias': ((0, 1024), (9199966, 9200990)), 'conv4_x.23.residual_function.0.weight': ((0, 262144), (9200990, 9463134)), 'conv4_x.23.residual_function.1.weight': ((0, 256), (9463134, 9463390)), 'conv4_x.23.residual_function.1.bias': ((0, 256), (9463390, 9463646)), 'conv4_x.23.residual_function.3.weight': ((0, 259859), (9463646, 9723505))}, {'conv4_x.23.residual_function.3.weight': ((259859, 589824), (0, 329965)), 'conv4_x.23.residual_function.4.weight': ((0, 256), (329965, 330221)), 'conv4_x.23.residual_function.4.bias': ((0, 256), (330221, 330477)), 'conv4_x.23.residual_function.6.weight': ((0, 262144), (330477, 592621)), 'conv4_x.23.residual_function.7.weight': ((0, 1024), (592621, 593645)), 'conv4_x.23.residual_function.7.bias': ((0, 1024), (593645, 594669)), 'conv4_x.24.residual_function.0.weight': ((0, 262144), (594669, 856813)), 'conv4_x.24.residual_function.1.weight': ((0, 256), (856813, 857069)), 'conv4_x.24.residual_function.1.bias': ((0, 256), (857069, 857325)), 'conv4_x.24.residual_function.3.weight': ((0, 589824), (857325, 1447149)), 'conv4_x.24.residual_function.4.weight': ((0, 256), (1447149, 1447405)), 'conv4_x.24.residual_function.4.bias': ((0, 256), (1447405, 1447661)), 'conv4_x.24.residual_function.6.weight': ((0, 262144), (1447661, 1709805)), 'conv4_x.24.residual_function.7.weight': ((0, 1024), (1709805, 1710829)), 'conv4_x.24.residual_function.7.bias': ((0, 1024), (1710829, 1711853)), 'conv4_x.25.residual_function.0.weight': ((0, 262144), (1711853, 1973997)), 'conv4_x.25.residual_function.1.weight': ((0, 256), (1973997, 1974253)), 'conv4_x.25.residual_function.1.bias': ((0, 256), (1974253, 1974509)), 'conv4_x.25.residual_function.3.weight': ((0, 589824), (1974509, 2564333)), 'conv4_x.25.residual_function.4.weight': ((0, 256), (2564333, 2564589)), 'conv4_x.25.residual_function.4.bias': ((0, 256), (2564589, 2564845)), 'conv4_x.25.residual_function.6.weight': ((0, 262144), (2564845, 2826989)), 'conv4_x.25.residual_function.7.weight': ((0, 1024), (2826989, 2828013)), 'conv4_x.25.residual_function.7.bias': ((0, 1024), (2828013, 2829037)), 'conv4_x.26.residual_function.0.weight': ((0, 262144), (2829037, 3091181)), 'conv4_x.26.residual_function.1.weight': ((0, 256), (3091181, 3091437)), 'conv4_x.26.residual_function.1.bias': ((0, 256), (3091437, 3091693)), 'conv4_x.26.residual_function.3.weight': ((0, 589824), (3091693, 3681517)), 'conv4_x.26.residual_function.4.weight': ((0, 256), (3681517, 3681773)), 'conv4_x.26.residual_function.4.bias': ((0, 256), (3681773, 3682029)), 'conv4_x.26.residual_function.6.weight': ((0, 262144), (3682029, 3944173)), 'conv4_x.26.residual_function.7.weight': ((0, 1024), (3944173, 3945197)), 'conv4_x.26.residual_function.7.bias': ((0, 1024), (3945197, 3946221)), 'conv4_x.27.residual_function.0.weight': ((0, 262144), (3946221, 4208365)), 'conv4_x.27.residual_function.1.weight': ((0, 256), (4208365, 4208621)), 'conv4_x.27.residual_function.1.bias': ((0, 256), (4208621, 4208877)), 'conv4_x.27.residual_function.3.weight': ((0, 589824), (4208877, 4798701)), 'conv4_x.27.residual_function.4.weight': ((0, 256), (4798701, 4798957)), 'conv4_x.27.residual_function.4.bias': ((0, 256), (4798957, 4799213)), 'conv4_x.27.residual_function.6.weight': ((0, 262144), (4799213, 5061357)), 'conv4_x.27.residual_function.7.weight': ((0, 1024), (5061357, 5062381)), 'conv4_x.27.residual_function.7.bias': ((0, 1024), (5062381, 5063405)), 'conv4_x.28.residual_function.0.weight': ((0, 262144), (5063405, 5325549)), 'conv4_x.28.residual_function.1.weight': ((0, 256), (5325549, 5325805)), 'conv4_x.28.residual_function.1.bias': ((0, 256), (5325805, 5326061)), 'conv4_x.28.residual_function.3.weight': ((0, 589824), (5326061, 5915885)), 'conv4_x.28.residual_function.4.weight': ((0, 256), (5915885, 5916141)), 'conv4_x.28.residual_function.4.bias': ((0, 256), (5916141, 5916397)), 'conv4_x.28.residual_function.6.weight': ((0, 262144), (5916397, 6178541)), 'conv4_x.28.residual_function.7.weight': ((0, 1024), (6178541, 6179565)), 'conv4_x.28.residual_function.7.bias': ((0, 1024), (6179565, 6180589)), 'conv4_x.29.residual_function.0.weight': ((0, 262144), (6180589, 6442733)), 'conv4_x.29.residual_function.1.weight': ((0, 256), (6442733, 6442989)), 'conv4_x.29.residual_function.1.bias': ((0, 256), (6442989, 6443245)), 'conv4_x.29.residual_function.3.weight': ((0, 589824), (6443245, 7033069)), 'conv4_x.29.residual_function.4.weight': ((0, 256), (7033069, 7033325)), 'conv4_x.29.residual_function.4.bias': ((0, 256), (7033325, 7033581)), 'conv4_x.29.residual_function.6.weight': ((0, 262144), (7033581, 7295725)), 'conv4_x.29.residual_function.7.weight': ((0, 1024), (7295725, 7296749)), 'conv4_x.29.residual_function.7.bias': ((0, 1024), (7296749, 7297773)), 'conv4_x.30.residual_function.0.weight': ((0, 262144), (7297773, 7559917)), 'conv4_x.30.residual_function.1.weight': ((0, 256), (7559917, 7560173)), 'conv4_x.30.residual_function.1.bias': ((0, 256), (7560173, 7560429)), 'conv4_x.30.residual_function.3.weight': ((0, 589824), (7560429, 8150253)), 'conv4_x.30.residual_function.4.weight': ((0, 256), (8150253, 8150509)), 'conv4_x.30.residual_function.4.bias': ((0, 256), (8150509, 8150765)), 'conv4_x.30.residual_function.6.weight': ((0, 262144), (8150765, 8412909)), 'conv4_x.30.residual_function.7.weight': ((0, 1024), (8412909, 8413933)), 'conv4_x.30.residual_function.7.bias': ((0, 1024), (8413933, 8414957)), 'conv4_x.31.residual_function.0.weight': ((0, 262144), (8414957, 8677101)), 'conv4_x.31.residual_function.1.weight': ((0, 256), (8677101, 8677357)), 'conv4_x.31.residual_function.1.bias': ((0, 256), (8677357, 8677613)), 'conv4_x.31.residual_function.3.weight': ((0, 589824), (8677613, 9267437)), 'conv4_x.31.residual_function.4.weight': ((0, 256), (9267437, 9267693)), 'conv4_x.31.residual_function.4.bias': ((0, 256), (9267693, 9267949)), 'conv4_x.31.residual_function.6.weight': ((0, 262144), (9267949, 9530093)), 'conv4_x.31.residual_function.7.weight': ((0, 1024), (9530093, 9531117)), 'conv4_x.31.residual_function.7.bias': ((0, 1024), (9531117, 9532141)), 'conv4_x.32.residual_function.0.weight': ((0, 191364), (9532141, 9723505))}, {'conv4_x.32.residual_function.0.weight': ((191364, 262144), (0, 70780)), 'conv4_x.32.residual_function.1.weight': ((0, 256), (70780, 71036)), 'conv4_x.32.residual_function.1.bias': ((0, 256), (71036, 71292)), 'conv4_x.32.residual_function.3.weight': ((0, 589824), (71292, 661116)), 'conv4_x.32.residual_function.4.weight': ((0, 256), (661116, 661372)), 'conv4_x.32.residual_function.4.bias': ((0, 256), (661372, 661628)), 'conv4_x.32.residual_function.6.weight': ((0, 262144), (661628, 923772)), 'conv4_x.32.residual_function.7.weight': ((0, 1024), (923772, 924796)), 'conv4_x.32.residual_function.7.bias': ((0, 1024), (924796, 925820)), 'conv4_x.33.residual_function.0.weight': ((0, 262144), (925820, 1187964)), 'conv4_x.33.residual_function.1.weight': ((0, 256), (1187964, 1188220)), 'conv4_x.33.residual_function.1.bias': ((0, 256), (1188220, 1188476)), 'conv4_x.33.residual_function.3.weight': ((0, 589824), (1188476, 1778300)), 'conv4_x.33.residual_function.4.weight': ((0, 256), (1778300, 1778556)), 'conv4_x.33.residual_function.4.bias': ((0, 256), (1778556, 1778812)), 'conv4_x.33.residual_function.6.weight': ((0, 262144), (1778812, 2040956)), 'conv4_x.33.residual_function.7.weight': ((0, 1024), (2040956, 2041980)), 'conv4_x.33.residual_function.7.bias': ((0, 1024), (2041980, 2043004)), 'conv4_x.34.residual_function.0.weight': ((0, 262144), (2043004, 2305148)), 'conv4_x.34.residual_function.1.weight': ((0, 256), (2305148, 2305404)), 'conv4_x.34.residual_function.1.bias': ((0, 256), (2305404, 2305660)), 'conv4_x.34.residual_function.3.weight': ((0, 589824), (2305660, 2895484)), 'conv4_x.34.residual_function.4.weight': ((0, 256), (2895484, 2895740)), 'conv4_x.34.residual_function.4.bias': ((0, 256), (2895740, 2895996)), 'conv4_x.34.residual_function.6.weight': ((0, 262144), (2895996, 3158140)), 'conv4_x.34.residual_function.7.weight': ((0, 1024), (3158140, 3159164)), 'conv4_x.34.residual_function.7.bias': ((0, 1024), (3159164, 3160188)), 'conv4_x.35.residual_function.0.weight': ((0, 262144), (3160188, 3422332)), 'conv4_x.35.residual_function.1.weight': ((0, 256), (3422332, 3422588)), 'conv4_x.35.residual_function.1.bias': ((0, 256), (3422588, 3422844)), 'conv4_x.35.residual_function.3.weight': ((0, 589824), (3422844, 4012668)), 'conv4_x.35.residual_function.4.weight': ((0, 256), (4012668, 4012924)), 'conv4_x.35.residual_function.4.bias': ((0, 256), (4012924, 4013180)), 'conv4_x.35.residual_function.6.weight': ((0, 262144), (4013180, 4275324)), 'conv4_x.35.residual_function.7.weight': ((0, 1024), (4275324, 4276348)), 'conv4_x.35.residual_function.7.bias': ((0, 1024), (4276348, 4277372)), 'conv5_x.0.residual_function.0.weight': ((0, 524288), (4277372, 4801660)), 'conv5_x.0.residual_function.1.weight': ((0, 512), (4801660, 4802172)), 'conv5_x.0.residual_function.1.bias': ((0, 512), (4802172, 4802684)), 'conv5_x.0.residual_function.3.weight': ((0, 2359296), (4802684, 7161980)), 'conv5_x.0.residual_function.4.weight': ((0, 512), (7161980, 7162492)), 'conv5_x.0.residual_function.4.bias': ((0, 512), (7162492, 7163004)), 'conv5_x.0.residual_function.6.weight': ((0, 1048576), (7163004, 8211580)), 'conv5_x.0.residual_function.7.weight': ((0, 2048), (8211580, 8213628)), 'conv5_x.0.residual_function.7.bias': ((0, 2048), (8213628, 8215676)), 'conv5_x.0.shortcut.0.weight': ((0, 1507829), (8215676, 9723505))}, {'conv5_x.0.shortcut.0.weight': ((1507829, 2097152), (0, 589323)), 'conv5_x.0.shortcut.1.weight': ((0, 2048), (589323, 591371)), 'conv5_x.0.shortcut.1.bias': ((0, 2048), (591371, 593419)), 'conv5_x.1.residual_function.0.weight': ((0, 1048576), (593419, 1641995)), 'conv5_x.1.residual_function.1.weight': ((0, 512), (1641995, 1642507)), 'conv5_x.1.residual_function.1.bias': ((0, 512), (1642507, 1643019)), 'conv5_x.1.residual_function.3.weight': ((0, 2359296), (1643019, 4002315)), 'conv5_x.1.residual_function.4.weight': ((0, 512), (4002315, 4002827)), 'conv5_x.1.residual_function.4.bias': ((0, 512), (4002827, 4003339)), 'conv5_x.1.residual_function.6.weight': ((0, 1048576), (4003339, 5051915)), 'conv5_x.1.residual_function.7.weight': ((0, 2048), (5051915, 5053963)), 'conv5_x.1.residual_function.7.bias': ((0, 2048), (5053963, 5056011)), 'conv5_x.2.residual_function.0.weight': ((0, 1048576), (5056011, 6104587)), 'conv5_x.2.residual_function.1.weight': ((0, 512), (6104587, 6105099)), 'conv5_x.2.residual_function.1.bias': ((0, 512), (6105099, 6105611)), 'conv5_x.2.residual_function.3.weight': ((0, 2359296), (6105611, 8464907)), 'conv5_x.2.residual_function.4.weight': ((0, 512), (8464907, 8465419)), 'conv5_x.2.residual_function.4.bias': ((0, 512), (8465419, 8465931)), 'conv5_x.2.residual_function.6.weight': ((0, 1048576), (8465931, 9514507)), 'conv5_x.2.residual_function.7.weight': ((0, 2048), (9514507, 9516555)), 'conv5_x.2.residual_function.7.bias': ((0, 2048), (9516555, 9518603)), 'fc.weight': ((0, 204800), (9518603, 9723403)), 'fc.bias': ((0, 100), (9723403, 9723503))}]
2025-06-08 08:49:33,596 [allreducer.py:660] INFO spar_key_groupidx_maps: {'conv1.0.weight': [0], 'conv1.1.weight': [0], 'conv1.1.bias': [0], 'conv2_x.0.residual_function.0.weight': [0], 'conv2_x.0.residual_function.1.weight': [0], 'conv2_x.0.residual_function.1.bias': [0], 'conv2_x.0.residual_function.3.weight': [0], 'conv2_x.0.residual_function.4.weight': [0], 'conv2_x.0.residual_function.4.bias': [0], 'conv2_x.0.residual_function.6.weight': [0], 'conv2_x.0.residual_function.7.weight': [0], 'conv2_x.0.residual_function.7.bias': [0], 'conv2_x.0.shortcut.0.weight': [0], 'conv2_x.0.shortcut.1.weight': [0], 'conv2_x.0.shortcut.1.bias': [0], 'conv2_x.1.residual_function.0.weight': [0], 'conv2_x.1.residual_function.1.weight': [0], 'conv2_x.1.residual_function.1.bias': [0], 'conv2_x.1.residual_function.3.weight': [0], 'conv2_x.1.residual_function.4.weight': [0], 'conv2_x.1.residual_function.4.bias': [0], 'conv2_x.1.residual_function.6.weight': [0], 'conv2_x.1.residual_function.7.weight': [0], 'conv2_x.1.residual_function.7.bias': [0], 'conv2_x.2.residual_function.0.weight': [0], 'conv2_x.2.residual_function.1.weight': [0], 'conv2_x.2.residual_function.1.bias': [0], 'conv2_x.2.residual_function.3.weight': [0], 'conv2_x.2.residual_function.4.weight': [0], 'conv2_x.2.residual_function.4.bias': [0], 'conv2_x.2.residual_function.6.weight': [0], 'conv2_x.2.residual_function.7.weight': [0], 'conv2_x.2.residual_function.7.bias': [0], 'conv3_x.0.residual_function.0.weight': [0], 'conv3_x.0.residual_function.1.weight': [0], 'conv3_x.0.residual_function.1.bias': [0], 'conv3_x.0.residual_function.3.weight': [0], 'conv3_x.0.residual_function.4.weight': [0], 'conv3_x.0.residual_function.4.bias': [0], 'conv3_x.0.residual_function.6.weight': [0], 'conv3_x.0.residual_function.7.weight': [0], 'conv3_x.0.residual_function.7.bias': [0], 'conv3_x.0.shortcut.0.weight': [0], 'conv3_x.0.shortcut.1.weight': [0], 'conv3_x.0.shortcut.1.bias': [0], 'conv3_x.1.residual_function.0.weight': [0], 'conv3_x.1.residual_function.1.weight': [0], 'conv3_x.1.residual_function.1.bias': [0], 'conv3_x.1.residual_function.3.weight': [0], 'conv3_x.1.residual_function.4.weight': [0], 'conv3_x.1.residual_function.4.bias': [0], 'conv3_x.1.residual_function.6.weight': [0], 'conv3_x.1.residual_function.7.weight': [0], 'conv3_x.1.residual_function.7.bias': [0], 'conv3_x.2.residual_function.0.weight': [0], 'conv3_x.2.residual_function.1.weight': [0], 'conv3_x.2.residual_function.1.bias': [0], 'conv3_x.2.residual_function.3.weight': [0], 'conv3_x.2.residual_function.4.weight': [0], 'conv3_x.2.residual_function.4.bias': [0], 'conv3_x.2.residual_function.6.weight': [0], 'conv3_x.2.residual_function.7.weight': [0], 'conv3_x.2.residual_function.7.bias': [0], 'conv3_x.3.residual_function.0.weight': [0], 'conv3_x.3.residual_function.1.weight': [0], 'conv3_x.3.residual_function.1.bias': [0], 'conv3_x.3.residual_function.3.weight': [0], 'conv3_x.3.residual_function.4.weight': [0], 'conv3_x.3.residual_function.4.bias': [0], 'conv3_x.3.residual_function.6.weight': [0], 'conv3_x.3.residual_function.7.weight': [0], 'conv3_x.3.residual_function.7.bias': [0], 'conv3_x.4.residual_function.0.weight': [0], 'conv3_x.4.residual_function.1.weight': [0], 'conv3_x.4.residual_function.1.bias': [0], 'conv3_x.4.residual_function.3.weight': [0], 'conv3_x.4.residual_function.4.weight': [0], 'conv3_x.4.residual_function.4.bias': [0], 'conv3_x.4.residual_function.6.weight': [0], 'conv3_x.4.residual_function.7.weight': [0], 'conv3_x.4.residual_function.7.bias': [0], 'conv3_x.5.residual_function.0.weight': [0], 'conv3_x.5.residual_function.1.weight': [0], 'conv3_x.5.residual_function.1.bias': [0], 'conv3_x.5.residual_function.3.weight': [0], 'conv3_x.5.residual_function.4.weight': [0], 'conv3_x.5.residual_function.4.bias': [0], 'conv3_x.5.residual_function.6.weight': [0], 'conv3_x.5.residual_function.7.weight': [0], 'conv3_x.5.residual_function.7.bias': [0], 'conv3_x.6.residual_function.0.weight': [0], 'conv3_x.6.residual_function.1.weight': [0], 'conv3_x.6.residual_function.1.bias': [0], 'conv3_x.6.residual_function.3.weight': [0], 'conv3_x.6.residual_function.4.weight': [0], 'conv3_x.6.residual_function.4.bias': [0], 'conv3_x.6.residual_function.6.weight': [0], 'conv3_x.6.residual_function.7.weight': [0], 'conv3_x.6.residual_function.7.bias': [0], 'conv3_x.7.residual_function.0.weight': [0], 'conv3_x.7.residual_function.1.weight': [0], 'conv3_x.7.residual_function.1.bias': [0], 'conv3_x.7.residual_function.3.weight': [0], 'conv3_x.7.residual_function.4.weight': [0], 'conv3_x.7.residual_function.4.bias': [0], 'conv3_x.7.residual_function.6.weight': [0], 'conv3_x.7.residual_function.7.weight': [0], 'conv3_x.7.residual_function.7.bias': [0], 'conv4_x.0.residual_function.0.weight': [0], 'conv4_x.0.residual_function.1.weight': [0], 'conv4_x.0.residual_function.1.bias': [0], 'conv4_x.0.residual_function.3.weight': [0], 'conv4_x.0.residual_function.4.weight': [0], 'conv4_x.0.residual_function.4.bias': [0], 'conv4_x.0.residual_function.6.weight': [0], 'conv4_x.0.residual_function.7.weight': [0], 'conv4_x.0.residual_function.7.bias': [0], 'conv4_x.0.shortcut.0.weight': [0], 'conv4_x.0.shortcut.1.weight': [0], 'conv4_x.0.shortcut.1.bias': [0], 'conv4_x.1.residual_function.0.weight': [0], 'conv4_x.1.residual_function.1.weight': [0], 'conv4_x.1.residual_function.1.bias': [0], 'conv4_x.1.residual_function.3.weight': [0], 'conv4_x.1.residual_function.4.weight': [0], 'conv4_x.1.residual_function.4.bias': [0], 'conv4_x.1.residual_function.6.weight': [0], 'conv4_x.1.residual_function.7.weight': [0], 'conv4_x.1.residual_function.7.bias': [0], 'conv4_x.2.residual_function.0.weight': [0], 'conv4_x.2.residual_function.1.weight': [0], 'conv4_x.2.residual_function.1.bias': [0], 'conv4_x.2.residual_function.3.weight': [0], 'conv4_x.2.residual_function.4.weight': [0], 'conv4_x.2.residual_function.4.bias': [0], 'conv4_x.2.residual_function.6.weight': [0], 'conv4_x.2.residual_function.7.weight': [0], 'conv4_x.2.residual_function.7.bias': [0], 'conv4_x.3.residual_function.0.weight': [0], 'conv4_x.3.residual_function.1.weight': [0], 'conv4_x.3.residual_function.1.bias': [0], 'conv4_x.3.residual_function.3.weight': [0], 'conv4_x.3.residual_function.4.weight': [0], 'conv4_x.3.residual_function.4.bias': [0], 'conv4_x.3.residual_function.6.weight': [0], 'conv4_x.3.residual_function.7.weight': [0], 'conv4_x.3.residual_function.7.bias': [0], 'conv4_x.4.residual_function.0.weight': [0], 'conv4_x.4.residual_function.1.weight': [0], 'conv4_x.4.residual_function.1.bias': [0], 'conv4_x.4.residual_function.3.weight': [0], 'conv4_x.4.residual_function.4.weight': [0], 'conv4_x.4.residual_function.4.bias': [0], 'conv4_x.4.residual_function.6.weight': [0], 'conv4_x.4.residual_function.7.weight': [0], 'conv4_x.4.residual_function.7.bias': [0], 'conv4_x.5.residual_function.0.weight': [0], 'conv4_x.5.residual_function.1.weight': [0], 'conv4_x.5.residual_function.1.bias': [0], 'conv4_x.5.residual_function.3.weight': [0], 'conv4_x.5.residual_function.4.weight': [0], 'conv4_x.5.residual_function.4.bias': [0], 'conv4_x.5.residual_function.6.weight': [0], 'conv4_x.5.residual_function.7.weight': [0], 'conv4_x.5.residual_function.7.bias': [0], 'conv4_x.6.residual_function.0.weight': [0, 1], 'conv4_x.6.residual_function.1.weight': [1], 'conv4_x.6.residual_function.1.bias': [1], 'conv4_x.6.residual_function.3.weight': [1], 'conv4_x.6.residual_function.4.weight': [1], 'conv4_x.6.residual_function.4.bias': [1], 'conv4_x.6.residual_function.6.weight': [1], 'conv4_x.6.residual_function.7.weight': [1], 'conv4_x.6.residual_function.7.bias': [1], 'conv4_x.7.residual_function.0.weight': [1], 'conv4_x.7.residual_function.1.weight': [1], 'conv4_x.7.residual_function.1.bias': [1], 'conv4_x.7.residual_function.3.weight': [1], 'conv4_x.7.residual_function.4.weight': [1], 'conv4_x.7.residual_function.4.bias': [1], 'conv4_x.7.residual_function.6.weight': [1], 'conv4_x.7.residual_function.7.weight': [1], 'conv4_x.7.residual_function.7.bias': [1], 'conv4_x.8.residual_function.0.weight': [1], 'conv4_x.8.residual_function.1.weight': [1], 'conv4_x.8.residual_function.1.bias': [1], 'conv4_x.8.residual_function.3.weight': [1], 'conv4_x.8.residual_function.4.weight': [1], 'conv4_x.8.residual_function.4.bias': [1], 'conv4_x.8.residual_function.6.weight': [1], 'conv4_x.8.residual_function.7.weight': [1], 'conv4_x.8.residual_function.7.bias': [1], 'conv4_x.9.residual_function.0.weight': [1], 'conv4_x.9.residual_function.1.weight': [1], 'conv4_x.9.residual_function.1.bias': [1], 'conv4_x.9.residual_function.3.weight': [1], 'conv4_x.9.residual_function.4.weight': [1], 'conv4_x.9.residual_function.4.bias': [1], 'conv4_x.9.residual_function.6.weight': [1], 'conv4_x.9.residual_function.7.weight': [1], 'conv4_x.9.residual_function.7.bias': [1], 'conv4_x.10.residual_function.0.weight': [1], 'conv4_x.10.residual_function.1.weight': [1], 'conv4_x.10.residual_function.1.bias': [1], 'conv4_x.10.residual_function.3.weight': [1], 'conv4_x.10.residual_function.4.weight': [1], 'conv4_x.10.residual_function.4.bias': [1], 'conv4_x.10.residual_function.6.weight': [1], 'conv4_x.10.residual_function.7.weight': [1], 'conv4_x.10.residual_function.7.bias': [1], 'conv4_x.11.residual_function.0.weight': [1], 'conv4_x.11.residual_function.1.weight': [1], 'conv4_x.11.residual_function.1.bias': [1], 'conv4_x.11.residual_function.3.weight': [1], 'conv4_x.11.residual_function.4.weight': [1], 'conv4_x.11.residual_function.4.bias': [1], 'conv4_x.11.residual_function.6.weight': [1], 'conv4_x.11.residual_function.7.weight': [1], 'conv4_x.11.residual_function.7.bias': [1], 'conv4_x.12.residual_function.0.weight': [1], 'conv4_x.12.residual_function.1.weight': [1], 'conv4_x.12.residual_function.1.bias': [1], 'conv4_x.12.residual_function.3.weight': [1], 'conv4_x.12.residual_function.4.weight': [1], 'conv4_x.12.residual_function.4.bias': [1], 'conv4_x.12.residual_function.6.weight': [1], 'conv4_x.12.residual_function.7.weight': [1], 'conv4_x.12.residual_function.7.bias': [1], 'conv4_x.13.residual_function.0.weight': [1], 'conv4_x.13.residual_function.1.weight': [1], 'conv4_x.13.residual_function.1.bias': [1], 'conv4_x.13.residual_function.3.weight': [1], 'conv4_x.13.residual_function.4.weight': [1], 'conv4_x.13.residual_function.4.bias': [1], 'conv4_x.13.residual_function.6.weight': [1], 'conv4_x.13.residual_function.7.weight': [1], 'conv4_x.13.residual_function.7.bias': [1], 'conv4_x.14.residual_function.0.weight': [1], 'conv4_x.14.residual_function.1.weight': [1], 'conv4_x.14.residual_function.1.bias': [1], 'conv4_x.14.residual_function.3.weight': [1], 'conv4_x.14.residual_function.4.weight': [1], 'conv4_x.14.residual_function.4.bias': [1], 'conv4_x.14.residual_function.6.weight': [1, 2], 'conv4_x.14.residual_function.7.weight': [2], 'conv4_x.14.residual_function.7.bias': [2], 'conv4_x.15.residual_function.0.weight': [2], 'conv4_x.15.residual_function.1.weight': [2], 'conv4_x.15.residual_function.1.bias': [2], 'conv4_x.15.residual_function.3.weight': [2], 'conv4_x.15.residual_function.4.weight': [2], 'conv4_x.15.residual_function.4.bias': [2], 'conv4_x.15.residual_function.6.weight': [2], 'conv4_x.15.residual_function.7.weight': [2], 'conv4_x.15.residual_function.7.bias': [2], 'conv4_x.16.residual_function.0.weight': [2], 'conv4_x.16.residual_function.1.weight': [2], 'conv4_x.16.residual_function.1.bias': [2], 'conv4_x.16.residual_function.3.weight': [2], 'conv4_x.16.residual_function.4.weight': [2], 'conv4_x.16.residual_function.4.bias': [2], 'conv4_x.16.residual_function.6.weight': [2], 'conv4_x.16.residual_function.7.weight': [2], 'conv4_x.16.residual_function.7.bias': [2], 'conv4_x.17.residual_function.0.weight': [2], 'conv4_x.17.residual_function.1.weight': [2], 'conv4_x.17.residual_function.1.bias': [2], 'conv4_x.17.residual_function.3.weight': [2], 'conv4_x.17.residual_function.4.weight': [2], 'conv4_x.17.residual_function.4.bias': [2], 'conv4_x.17.residual_function.6.weight': [2], 'conv4_x.17.residual_function.7.weight': [2], 'conv4_x.17.residual_function.7.bias': [2], 'conv4_x.18.residual_function.0.weight': [2], 'conv4_x.18.residual_function.1.weight': [2], 'conv4_x.18.residual_function.1.bias': [2], 'conv4_x.18.residual_function.3.weight': [2], 'conv4_x.18.residual_function.4.weight': [2], 'conv4_x.18.residual_function.4.bias': [2], 'conv4_x.18.residual_function.6.weight': [2], 'conv4_x.18.residual_function.7.weight': [2], 'conv4_x.18.residual_function.7.bias': [2], 'conv4_x.19.residual_function.0.weight': [2], 'conv4_x.19.residual_function.1.weight': [2], 'conv4_x.19.residual_function.1.bias': [2], 'conv4_x.19.residual_function.3.weight': [2], 'conv4_x.19.residual_function.4.weight': [2], 'conv4_x.19.residual_function.4.bias': [2], 'conv4_x.19.residual_function.6.weight': [2], 'conv4_x.19.residual_function.7.weight': [2], 'conv4_x.19.residual_function.7.bias': [2], 'conv4_x.20.residual_function.0.weight': [2], 'conv4_x.20.residual_function.1.weight': [2], 'conv4_x.20.residual_function.1.bias': [2], 'conv4_x.20.residual_function.3.weight': [2], 'conv4_x.20.residual_function.4.weight': [2], 'conv4_x.20.residual_function.4.bias': [2], 'conv4_x.20.residual_function.6.weight': [2], 'conv4_x.20.residual_function.7.weight': [2], 'conv4_x.20.residual_function.7.bias': [2], 'conv4_x.21.residual_function.0.weight': [2], 'conv4_x.21.residual_function.1.weight': [2], 'conv4_x.21.residual_function.1.bias': [2], 'conv4_x.21.residual_function.3.weight': [2], 'conv4_x.21.residual_function.4.weight': [2], 'conv4_x.21.residual_function.4.bias': [2], 'conv4_x.21.residual_function.6.weight': [2], 'conv4_x.21.residual_function.7.weight': [2], 'conv4_x.21.residual_function.7.bias': [2], 'conv4_x.22.residual_function.0.weight': [2], 'conv4_x.22.residual_function.1.weight': [2], 'conv4_x.22.residual_function.1.bias': [2], 'conv4_x.22.residual_function.3.weight': [2], 'conv4_x.22.residual_function.4.weight': [2], 'conv4_x.22.residual_function.4.bias': [2], 'conv4_x.22.residual_function.6.weight': [2], 'conv4_x.22.residual_function.7.weight': [2], 'conv4_x.22.residual_function.7.bias': [2], 'conv4_x.23.residual_function.0.weight': [2], 'conv4_x.23.residual_function.1.weight': [2], 'conv4_x.23.residual_function.1.bias': [2], 'conv4_x.23.residual_function.3.weight': [2, 3], 'conv4_x.23.residual_function.4.weight': [3], 'conv4_x.23.residual_function.4.bias': [3], 'conv4_x.23.residual_function.6.weight': [3], 'conv4_x.23.residual_function.7.weight': [3], 'conv4_x.23.residual_function.7.bias': [3], 'conv4_x.24.residual_function.0.weight': [3], 'conv4_x.24.residual_function.1.weight': [3], 'conv4_x.24.residual_function.1.bias': [3], 'conv4_x.24.residual_function.3.weight': [3], 'conv4_x.24.residual_function.4.weight': [3], 'conv4_x.24.residual_function.4.bias': [3], 'conv4_x.24.residual_function.6.weight': [3], 'conv4_x.24.residual_function.7.weight': [3], 'conv4_x.24.residual_function.7.bias': [3], 'conv4_x.25.residual_function.0.weight': [3], 'conv4_x.25.residual_function.1.weight': [3], 'conv4_x.25.residual_function.1.bias': [3], 'conv4_x.25.residual_function.3.weight': [3], 'conv4_x.25.residual_function.4.weight': [3], 'conv4_x.25.residual_function.4.bias': [3], 'conv4_x.25.residual_function.6.weight': [3], 'conv4_x.25.residual_function.7.weight': [3], 'conv4_x.25.residual_function.7.bias': [3], 'conv4_x.26.residual_function.0.weight': [3], 'conv4_x.26.residual_function.1.weight': [3], 'conv4_x.26.residual_function.1.bias': [3], 'conv4_x.26.residual_function.3.weight': [3], 'conv4_x.26.residual_function.4.weight': [3], 'conv4_x.26.residual_function.4.bias': [3], 'conv4_x.26.residual_function.6.weight': [3], 'conv4_x.26.residual_function.7.weight': [3], 'conv4_x.26.residual_function.7.bias': [3], 'conv4_x.27.residual_function.0.weight': [3], 'conv4_x.27.residual_function.1.weight': [3], 'conv4_x.27.residual_function.1.bias': [3], 'conv4_x.27.residual_function.3.weight': [3], 'conv4_x.27.residual_function.4.weight': [3], 'conv4_x.27.residual_function.4.bias': [3], 'conv4_x.27.residual_function.6.weight': [3], 'conv4_x.27.residual_function.7.weight': [3], 'conv4_x.27.residual_function.7.bias': [3], 'conv4_x.28.residual_function.0.weight': [3], 'conv4_x.28.residual_function.1.weight': [3], 'conv4_x.28.residual_function.1.bias': [3], 'conv4_x.28.residual_function.3.weight': [3], 'conv4_x.28.residual_function.4.weight': [3], 'conv4_x.28.residual_function.4.bias': [3], 'conv4_x.28.residual_function.6.weight': [3], 'conv4_x.28.residual_function.7.weight': [3], 'conv4_x.28.residual_function.7.bias': [3], 'conv4_x.29.residual_function.0.weight': [3], 'conv4_x.29.residual_function.1.weight': [3], 'conv4_x.29.residual_function.1.bias': [3], 'conv4_x.29.residual_function.3.weight': [3], 'conv4_x.29.residual_function.4.weight': [3], 'conv4_x.29.residual_function.4.bias': [3], 'conv4_x.29.residual_function.6.weight': [3], 'conv4_x.29.residual_function.7.weight': [3], 'conv4_x.29.residual_function.7.bias': [3], 'conv4_x.30.residual_function.0.weight': [3], 'conv4_x.30.residual_function.1.weight': [3], 'conv4_x.30.residual_function.1.bias': [3], 'conv4_x.30.residual_function.3.weight': [3], 'conv4_x.30.residual_function.4.weight': [3], 'conv4_x.30.residual_function.4.bias': [3], 'conv4_x.30.residual_function.6.weight': [3], 'conv4_x.30.residual_function.7.weight': [3], 'conv4_x.30.residual_function.7.bias': [3], 'conv4_x.31.residual_function.0.weight': [3], 'conv4_x.31.residual_function.1.weight': [3], 'conv4_x.31.residual_function.1.bias': [3], 'conv4_x.31.residual_function.3.weight': [3], 'conv4_x.31.residual_function.4.weight': [3], 'conv4_x.31.residual_function.4.bias': [3], 'conv4_x.31.residual_function.6.weight': [3], 'conv4_x.31.residual_function.7.weight': [3], 'conv4_x.31.residual_function.7.bias': [3], 'conv4_x.32.residual_function.0.weight': [3, 4], 'conv4_x.32.residual_function.1.weight': [4], 'conv4_x.32.residual_function.1.bias': [4], 'conv4_x.32.residual_function.3.weight': [4], 'conv4_x.32.residual_function.4.weight': [4], 'conv4_x.32.residual_function.4.bias': [4], 'conv4_x.32.residual_function.6.weight': [4], 'conv4_x.32.residual_function.7.weight': [4], 'conv4_x.32.residual_function.7.bias': [4], 'conv4_x.33.residual_function.0.weight': [4], 'conv4_x.33.residual_function.1.weight': [4], 'conv4_x.33.residual_function.1.bias': [4], 'conv4_x.33.residual_function.3.weight': [4], 'conv4_x.33.residual_function.4.weight': [4], 'conv4_x.33.residual_function.4.bias': [4], 'conv4_x.33.residual_function.6.weight': [4], 'conv4_x.33.residual_function.7.weight': [4], 'conv4_x.33.residual_function.7.bias': [4], 'conv4_x.34.residual_function.0.weight': [4], 'conv4_x.34.residual_function.1.weight': [4], 'conv4_x.34.residual_function.1.bias': [4], 'conv4_x.34.residual_function.3.weight': [4], 'conv4_x.34.residual_function.4.weight': [4], 'conv4_x.34.residual_function.4.bias': [4], 'conv4_x.34.residual_function.6.weight': [4], 'conv4_x.34.residual_function.7.weight': [4], 'conv4_x.34.residual_function.7.bias': [4], 'conv4_x.35.residual_function.0.weight': [4], 'conv4_x.35.residual_function.1.weight': [4], 'conv4_x.35.residual_function.1.bias': [4], 'conv4_x.35.residual_function.3.weight': [4], 'conv4_x.35.residual_function.4.weight': [4], 'conv4_x.35.residual_function.4.bias': [4], 'conv4_x.35.residual_function.6.weight': [4], 'conv4_x.35.residual_function.7.weight': [4], 'conv4_x.35.residual_function.7.bias': [4], 'conv5_x.0.residual_function.0.weight': [4], 'conv5_x.0.residual_function.1.weight': [4], 'conv5_x.0.residual_function.1.bias': [4], 'conv5_x.0.residual_function.3.weight': [4], 'conv5_x.0.residual_function.4.weight': [4], 'conv5_x.0.residual_function.4.bias': [4], 'conv5_x.0.residual_function.6.weight': [4], 'conv5_x.0.residual_function.7.weight': [4], 'conv5_x.0.residual_function.7.bias': [4], 'conv5_x.0.shortcut.0.weight': [4, 5], 'conv5_x.0.shortcut.1.weight': [5], 'conv5_x.0.shortcut.1.bias': [5], 'conv5_x.1.residual_function.0.weight': [5], 'conv5_x.1.residual_function.1.weight': [5], 'conv5_x.1.residual_function.1.bias': [5], 'conv5_x.1.residual_function.3.weight': [5], 'conv5_x.1.residual_function.4.weight': [5], 'conv5_x.1.residual_function.4.bias': [5], 'conv5_x.1.residual_function.6.weight': [5], 'conv5_x.1.residual_function.7.weight': [5], 'conv5_x.1.residual_function.7.bias': [5], 'conv5_x.2.residual_function.0.weight': [5], 'conv5_x.2.residual_function.1.weight': [5], 'conv5_x.2.residual_function.1.bias': [5], 'conv5_x.2.residual_function.3.weight': [5], 'conv5_x.2.residual_function.4.weight': [5], 'conv5_x.2.residual_function.4.bias': [5], 'conv5_x.2.residual_function.6.weight': [5], 'conv5_x.2.residual_function.7.weight': [5], 'conv5_x.2.residual_function.7.bias': [5], 'fc.weight': [5], 'fc.bias': [5]}
2025-06-08 08:49:33,614 [allreducer.py:985] INFO Allreducer thread started ...
2025-06-08 08:49:33,614 [main_trainer.py:131] INFO Start training ....
2025-06-08 08:49:53,452 [main_trainer.py:159] INFO Time per iteration including communication: 0.944613. computation: 0.779774. Speed: 16.938150 images/s, current density: 0.010000
2025-06-08 08:50:10,003 [main_trainer.py:159] INFO Time per iteration including communication: 0.887471. computation: 0.726457. Speed: 18.028757 images/s, current density: 0.010000
2025-06-08 08:50:17,412 [allreducer.py:800] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-08 08:50:17,413 [allreducer.py:851] INFO [rank:0]total[58341028]: 0.000000,0.000118,0.030247,0.080972,0.011492,0.000000,0.000000
2025-06-08 08:50:26,591 [main_trainer.py:159] INFO Time per iteration including communication: 0.868421. computation: 0.709193. Speed: 18.424243 images/s, current density: 0.010000
2025-06-08 08:50:43,204 [main_trainer.py:159] INFO Time per iteration including communication: 0.859075. computation: 0.702671. Speed: 18.624675 images/s, current density: 0.010000
2025-06-08 08:50:58,845 [allreducer.py:800] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-08 08:50:58,846 [allreducer.py:851] INFO [rank:0]total[58341028]: 0.000000,0.000115,0.025927,0.073718,0.008648,0.000000,0.000000
2025-06-08 08:50:59,688 [main_trainer.py:159] INFO Time per iteration including communication: 0.852156. computation: 0.698564. Speed: 18.775912 images/s, current density: 0.010000
2025-06-08 08:51:16,923 [main_trainer.py:159] INFO Time per iteration including communication: 0.853732. computation: 0.698625. Speed: 18.741243 images/s, current density: 0.010000
2025-06-08 08:51:36,943 [main_trainer.py:159] INFO Time per iteration including communication: 0.874612. computation: 0.719638. Speed: 18.293827 images/s, current density: 0.010000
2025-06-08 08:51:45,834 [allreducer.py:800] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-08 08:51:45,835 [allreducer.py:851] INFO [rank:0]total[58341028]: 0.000000,0.000131,0.030929,0.099494,0.012680,0.000000,0.000000
2025-06-08 08:51:55,623 [main_trainer.py:159] INFO Time per iteration including communication: 0.881984. computation: 0.726439. Speed: 18.140916 images/s, current density: 0.010000
2025-06-08 08:52:12,130 [main_trainer.py:159] INFO Time per iteration including communication: 0.875715. computation: 0.719034. Speed: 18.270777 images/s, current density: 0.010000
2025-06-08 08:52:27,849 [allreducer.py:800] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-08 08:52:27,850 [allreducer.py:851] INFO [rank:0]total[58341028]: 0.000000,0.000096,0.037815,0.082663,0.008646,0.000000,0.000000
2025-06-08 08:52:28,719 [main_trainer.py:159] INFO Time per iteration including communication: 0.871110. computation: 0.713234. Speed: 18.367365 images/s, current density: 0.010000
2025-06-08 08:52:45,203 [main_trainer.py:159] INFO Time per iteration including communication: 0.866857. computation: 0.708735. Speed: 18.457475 images/s, current density: 0.010000
2025-06-08 08:53:01,704 [main_trainer.py:159] INFO Time per iteration including communication: 0.863384. computation: 0.704591. Speed: 18.531734 images/s, current density: 0.010000
2025-06-08 08:53:09,090 [allreducer.py:800] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-08 08:53:09,091 [allreducer.py:851] INFO [rank:0]total[58341028]: 0.000000,0.000088,0.038943,0.080345,0.008214,0.000000,0.000000
2025-06-08 08:53:21,574 [main_trainer.py:298] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-08 08:53:21,574 [main_trainer.py:299] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-08 08:53:26,681 [dl_trainer.py:295] INFO target_sparsities: [1.0]
2025-06-08 08:53:26,681 [dl_trainer.py:305] INFO num_batches_per_epoch: 520
2025-06-08 08:53:26,682 [main_trainer.py:88] INFO Broadcast parameters....
2025-06-08 08:53:27,768 [main_trainer.py:107] INFO Broadcast parameters finished....
2025-06-08 08:53:27,820 [allreducer.py:282] INFO density: 0.010000
2025-06-08 08:53:27,820 [allreducer.py:283] INFO threshold scale: 1.092000
2025-06-08 08:53:27,822 [allreducer.py:671] INFO groups: [['fc.bias', 'fc.weight', 'conv5_x.2.residual_function.7.bias', 'conv5_x.2.residual_function.7.weight', 'conv5_x.2.residual_function.6.weight', 'conv5_x.2.residual_function.4.bias', 'conv5_x.2.residual_function.4.weight', 'conv5_x.2.residual_function.3.weight', 'conv5_x.2.residual_function.1.bias', 'conv5_x.2.residual_function.1.weight', 'conv5_x.2.residual_function.0.weight', 'conv5_x.1.residual_function.7.bias', 'conv5_x.1.residual_function.7.weight', 'conv5_x.1.residual_function.6.weight', 'conv5_x.1.residual_function.4.bias', 'conv5_x.1.residual_function.4.weight', 'conv5_x.1.residual_function.3.weight', 'conv5_x.1.residual_function.1.bias', 'conv5_x.1.residual_function.1.weight', 'conv5_x.1.residual_function.0.weight', 'conv5_x.0.shortcut.1.bias', 'conv5_x.0.shortcut.1.weight', 'conv5_x.0.shortcut.0.weight', 'conv5_x.0.residual_function.7.bias', 'conv5_x.0.residual_function.7.weight', 'conv5_x.0.residual_function.6.weight', 'conv5_x.0.residual_function.4.bias', 'conv5_x.0.residual_function.4.weight', 'conv5_x.0.residual_function.3.weight', 'conv5_x.0.residual_function.1.bias', 'conv5_x.0.residual_function.1.weight', 'conv5_x.0.residual_function.0.weight', 'conv4_x.35.residual_function.7.bias', 'conv4_x.35.residual_function.7.weight', 'conv4_x.35.residual_function.6.weight', 'conv4_x.35.residual_function.4.bias', 'conv4_x.35.residual_function.4.weight', 'conv4_x.35.residual_function.3.weight', 'conv4_x.35.residual_function.1.bias', 'conv4_x.35.residual_function.1.weight', 'conv4_x.35.residual_function.0.weight', 'conv4_x.34.residual_function.7.bias', 'conv4_x.34.residual_function.7.weight', 'conv4_x.34.residual_function.6.weight', 'conv4_x.34.residual_function.4.bias', 'conv4_x.34.residual_function.4.weight', 'conv4_x.34.residual_function.3.weight', 'conv4_x.34.residual_function.1.bias', 'conv4_x.34.residual_function.1.weight', 'conv4_x.34.residual_function.0.weight', 'conv4_x.33.residual_function.7.bias', 'conv4_x.33.residual_function.7.weight', 'conv4_x.33.residual_function.6.weight', 'conv4_x.33.residual_function.4.bias', 'conv4_x.33.residual_function.4.weight', 'conv4_x.33.residual_function.3.weight', 'conv4_x.33.residual_function.1.bias', 'conv4_x.33.residual_function.1.weight', 'conv4_x.33.residual_function.0.weight', 'conv4_x.32.residual_function.7.bias', 'conv4_x.32.residual_function.7.weight', 'conv4_x.32.residual_function.6.weight', 'conv4_x.32.residual_function.4.bias', 'conv4_x.32.residual_function.4.weight', 'conv4_x.32.residual_function.3.weight', 'conv4_x.32.residual_function.1.bias', 'conv4_x.32.residual_function.1.weight', 'conv4_x.32.residual_function.0.weight', 'conv4_x.31.residual_function.7.bias', 'conv4_x.31.residual_function.7.weight', 'conv4_x.31.residual_function.6.weight', 'conv4_x.31.residual_function.4.bias', 'conv4_x.31.residual_function.4.weight', 'conv4_x.31.residual_function.3.weight', 'conv4_x.31.residual_function.1.bias', 'conv4_x.31.residual_function.1.weight', 'conv4_x.31.residual_function.0.weight', 'conv4_x.30.residual_function.7.bias', 'conv4_x.30.residual_function.7.weight', 'conv4_x.30.residual_function.6.weight', 'conv4_x.30.residual_function.4.bias', 'conv4_x.30.residual_function.4.weight', 'conv4_x.30.residual_function.3.weight', 'conv4_x.30.residual_function.1.bias', 'conv4_x.30.residual_function.1.weight', 'conv4_x.30.residual_function.0.weight', 'conv4_x.29.residual_function.7.bias', 'conv4_x.29.residual_function.7.weight', 'conv4_x.29.residual_function.6.weight', 'conv4_x.29.residual_function.4.bias', 'conv4_x.29.residual_function.4.weight', 'conv4_x.29.residual_function.3.weight', 'conv4_x.29.residual_function.1.bias', 'conv4_x.29.residual_function.1.weight', 'conv4_x.29.residual_function.0.weight', 'conv4_x.28.residual_function.7.bias', 'conv4_x.28.residual_function.7.weight', 'conv4_x.28.residual_function.6.weight', 'conv4_x.28.residual_function.4.bias', 'conv4_x.28.residual_function.4.weight', 'conv4_x.28.residual_function.3.weight', 'conv4_x.28.residual_function.1.bias', 'conv4_x.28.residual_function.1.weight', 'conv4_x.28.residual_function.0.weight', 'conv4_x.27.residual_function.7.bias', 'conv4_x.27.residual_function.7.weight', 'conv4_x.27.residual_function.6.weight', 'conv4_x.27.residual_function.4.bias', 'conv4_x.27.residual_function.4.weight', 'conv4_x.27.residual_function.3.weight', 'conv4_x.27.residual_function.1.bias', 'conv4_x.27.residual_function.1.weight', 'conv4_x.27.residual_function.0.weight', 'conv4_x.26.residual_function.7.bias', 'conv4_x.26.residual_function.7.weight', 'conv4_x.26.residual_function.6.weight', 'conv4_x.26.residual_function.4.bias', 'conv4_x.26.residual_function.4.weight', 'conv4_x.26.residual_function.3.weight', 'conv4_x.26.residual_function.1.bias', 'conv4_x.26.residual_function.1.weight', 'conv4_x.26.residual_function.0.weight', 'conv4_x.25.residual_function.7.bias', 'conv4_x.25.residual_function.7.weight', 'conv4_x.25.residual_function.6.weight', 'conv4_x.25.residual_function.4.bias', 'conv4_x.25.residual_function.4.weight', 'conv4_x.25.residual_function.3.weight', 'conv4_x.25.residual_function.1.bias', 'conv4_x.25.residual_function.1.weight', 'conv4_x.25.residual_function.0.weight', 'conv4_x.24.residual_function.7.bias', 'conv4_x.24.residual_function.7.weight', 'conv4_x.24.residual_function.6.weight', 'conv4_x.24.residual_function.4.bias', 'conv4_x.24.residual_function.4.weight', 'conv4_x.24.residual_function.3.weight', 'conv4_x.24.residual_function.1.bias', 'conv4_x.24.residual_function.1.weight', 'conv4_x.24.residual_function.0.weight', 'conv4_x.23.residual_function.7.bias', 'conv4_x.23.residual_function.7.weight', 'conv4_x.23.residual_function.6.weight', 'conv4_x.23.residual_function.4.bias', 'conv4_x.23.residual_function.4.weight', 'conv4_x.23.residual_function.3.weight', 'conv4_x.23.residual_function.1.bias', 'conv4_x.23.residual_function.1.weight', 'conv4_x.23.residual_function.0.weight', 'conv4_x.22.residual_function.7.bias', 'conv4_x.22.residual_function.7.weight', 'conv4_x.22.residual_function.6.weight', 'conv4_x.22.residual_function.4.bias', 'conv4_x.22.residual_function.4.weight', 'conv4_x.22.residual_function.3.weight', 'conv4_x.22.residual_function.1.bias', 'conv4_x.22.residual_function.1.weight', 'conv4_x.22.residual_function.0.weight', 'conv4_x.21.residual_function.7.bias', 'conv4_x.21.residual_function.7.weight', 'conv4_x.21.residual_function.6.weight', 'conv4_x.21.residual_function.4.bias', 'conv4_x.21.residual_function.4.weight', 'conv4_x.21.residual_function.3.weight', 'conv4_x.21.residual_function.1.bias', 'conv4_x.21.residual_function.1.weight', 'conv4_x.21.residual_function.0.weight', 'conv4_x.20.residual_function.7.bias', 'conv4_x.20.residual_function.7.weight', 'conv4_x.20.residual_function.6.weight', 'conv4_x.20.residual_function.4.bias', 'conv4_x.20.residual_function.4.weight', 'conv4_x.20.residual_function.3.weight', 'conv4_x.20.residual_function.1.bias', 'conv4_x.20.residual_function.1.weight', 'conv4_x.20.residual_function.0.weight', 'conv4_x.19.residual_function.7.bias', 'conv4_x.19.residual_function.7.weight', 'conv4_x.19.residual_function.6.weight', 'conv4_x.19.residual_function.4.bias', 'conv4_x.19.residual_function.4.weight', 'conv4_x.19.residual_function.3.weight', 'conv4_x.19.residual_function.1.bias', 'conv4_x.19.residual_function.1.weight', 'conv4_x.19.residual_function.0.weight', 'conv4_x.18.residual_function.7.bias', 'conv4_x.18.residual_function.7.weight', 'conv4_x.18.residual_function.6.weight', 'conv4_x.18.residual_function.4.bias', 'conv4_x.18.residual_function.4.weight', 'conv4_x.18.residual_function.3.weight', 'conv4_x.18.residual_function.1.bias', 'conv4_x.18.residual_function.1.weight', 'conv4_x.18.residual_function.0.weight', 'conv4_x.17.residual_function.7.bias', 'conv4_x.17.residual_function.7.weight', 'conv4_x.17.residual_function.6.weight', 'conv4_x.17.residual_function.4.bias', 'conv4_x.17.residual_function.4.weight', 'conv4_x.17.residual_function.3.weight', 'conv4_x.17.residual_function.1.bias', 'conv4_x.17.residual_function.1.weight', 'conv4_x.17.residual_function.0.weight', 'conv4_x.16.residual_function.7.bias', 'conv4_x.16.residual_function.7.weight', 'conv4_x.16.residual_function.6.weight', 'conv4_x.16.residual_function.4.bias', 'conv4_x.16.residual_function.4.weight', 'conv4_x.16.residual_function.3.weight', 'conv4_x.16.residual_function.1.bias', 'conv4_x.16.residual_function.1.weight', 'conv4_x.16.residual_function.0.weight', 'conv4_x.15.residual_function.7.bias', 'conv4_x.15.residual_function.7.weight', 'conv4_x.15.residual_function.6.weight', 'conv4_x.15.residual_function.4.bias', 'conv4_x.15.residual_function.4.weight', 'conv4_x.15.residual_function.3.weight', 'conv4_x.15.residual_function.1.bias', 'conv4_x.15.residual_function.1.weight', 'conv4_x.15.residual_function.0.weight', 'conv4_x.14.residual_function.7.bias', 'conv4_x.14.residual_function.7.weight', 'conv4_x.14.residual_function.6.weight', 'conv4_x.14.residual_function.4.bias', 'conv4_x.14.residual_function.4.weight', 'conv4_x.14.residual_function.3.weight', 'conv4_x.14.residual_function.1.bias', 'conv4_x.14.residual_function.1.weight', 'conv4_x.14.residual_function.0.weight', 'conv4_x.13.residual_function.7.bias', 'conv4_x.13.residual_function.7.weight', 'conv4_x.13.residual_function.6.weight', 'conv4_x.13.residual_function.4.bias', 'conv4_x.13.residual_function.4.weight', 'conv4_x.13.residual_function.3.weight', 'conv4_x.13.residual_function.1.bias', 'conv4_x.13.residual_function.1.weight', 'conv4_x.13.residual_function.0.weight', 'conv4_x.12.residual_function.7.bias', 'conv4_x.12.residual_function.7.weight', 'conv4_x.12.residual_function.6.weight', 'conv4_x.12.residual_function.4.bias', 'conv4_x.12.residual_function.4.weight', 'conv4_x.12.residual_function.3.weight', 'conv4_x.12.residual_function.1.bias', 'conv4_x.12.residual_function.1.weight', 'conv4_x.12.residual_function.0.weight', 'conv4_x.11.residual_function.7.bias', 'conv4_x.11.residual_function.7.weight', 'conv4_x.11.residual_function.6.weight', 'conv4_x.11.residual_function.4.bias', 'conv4_x.11.residual_function.4.weight', 'conv4_x.11.residual_function.3.weight', 'conv4_x.11.residual_function.1.bias', 'conv4_x.11.residual_function.1.weight', 'conv4_x.11.residual_function.0.weight', 'conv4_x.10.residual_function.7.bias', 'conv4_x.10.residual_function.7.weight', 'conv4_x.10.residual_function.6.weight', 'conv4_x.10.residual_function.4.bias', 'conv4_x.10.residual_function.4.weight', 'conv4_x.10.residual_function.3.weight', 'conv4_x.10.residual_function.1.bias', 'conv4_x.10.residual_function.1.weight', 'conv4_x.10.residual_function.0.weight', 'conv4_x.9.residual_function.7.bias', 'conv4_x.9.residual_function.7.weight', 'conv4_x.9.residual_function.6.weight', 'conv4_x.9.residual_function.4.bias', 'conv4_x.9.residual_function.4.weight', 'conv4_x.9.residual_function.3.weight', 'conv4_x.9.residual_function.1.bias', 'conv4_x.9.residual_function.1.weight', 'conv4_x.9.residual_function.0.weight', 'conv4_x.8.residual_function.7.bias', 'conv4_x.8.residual_function.7.weight', 'conv4_x.8.residual_function.6.weight', 'conv4_x.8.residual_function.4.bias', 'conv4_x.8.residual_function.4.weight', 'conv4_x.8.residual_function.3.weight', 'conv4_x.8.residual_function.1.bias', 'conv4_x.8.residual_function.1.weight', 'conv4_x.8.residual_function.0.weight', 'conv4_x.7.residual_function.7.bias', 'conv4_x.7.residual_function.7.weight', 'conv4_x.7.residual_function.6.weight', 'conv4_x.7.residual_function.4.bias', 'conv4_x.7.residual_function.4.weight', 'conv4_x.7.residual_function.3.weight', 'conv4_x.7.residual_function.1.bias', 'conv4_x.7.residual_function.1.weight', 'conv4_x.7.residual_function.0.weight', 'conv4_x.6.residual_function.7.bias', 'conv4_x.6.residual_function.7.weight', 'conv4_x.6.residual_function.6.weight', 'conv4_x.6.residual_function.4.bias', 'conv4_x.6.residual_function.4.weight', 'conv4_x.6.residual_function.3.weight', 'conv4_x.6.residual_function.1.bias', 'conv4_x.6.residual_function.1.weight', 'conv4_x.6.residual_function.0.weight', 'conv4_x.5.residual_function.7.bias', 'conv4_x.5.residual_function.7.weight', 'conv4_x.5.residual_function.6.weight', 'conv4_x.5.residual_function.4.bias', 'conv4_x.5.residual_function.4.weight', 'conv4_x.5.residual_function.3.weight', 'conv4_x.5.residual_function.1.bias', 'conv4_x.5.residual_function.1.weight', 'conv4_x.5.residual_function.0.weight', 'conv4_x.4.residual_function.7.bias', 'conv4_x.4.residual_function.7.weight', 'conv4_x.4.residual_function.6.weight', 'conv4_x.4.residual_function.4.bias', 'conv4_x.4.residual_function.4.weight', 'conv4_x.4.residual_function.3.weight', 'conv4_x.4.residual_function.1.bias', 'conv4_x.4.residual_function.1.weight', 'conv4_x.4.residual_function.0.weight', 'conv4_x.3.residual_function.7.bias', 'conv4_x.3.residual_function.7.weight', 'conv4_x.3.residual_function.6.weight', 'conv4_x.3.residual_function.4.bias', 'conv4_x.3.residual_function.4.weight', 'conv4_x.3.residual_function.3.weight', 'conv4_x.3.residual_function.1.bias', 'conv4_x.3.residual_function.1.weight', 'conv4_x.3.residual_function.0.weight', 'conv4_x.2.residual_function.7.bias', 'conv4_x.2.residual_function.7.weight', 'conv4_x.2.residual_function.6.weight', 'conv4_x.2.residual_function.4.bias', 'conv4_x.2.residual_function.4.weight', 'conv4_x.2.residual_function.3.weight', 'conv4_x.2.residual_function.1.bias', 'conv4_x.2.residual_function.1.weight', 'conv4_x.2.residual_function.0.weight', 'conv4_x.1.residual_function.7.bias', 'conv4_x.1.residual_function.7.weight', 'conv4_x.1.residual_function.6.weight', 'conv4_x.1.residual_function.4.bias', 'conv4_x.1.residual_function.4.weight', 'conv4_x.1.residual_function.3.weight', 'conv4_x.1.residual_function.1.bias', 'conv4_x.1.residual_function.1.weight', 'conv4_x.1.residual_function.0.weight', 'conv4_x.0.shortcut.1.bias', 'conv4_x.0.shortcut.1.weight', 'conv4_x.0.shortcut.0.weight', 'conv4_x.0.residual_function.7.bias', 'conv4_x.0.residual_function.7.weight', 'conv4_x.0.residual_function.6.weight', 'conv4_x.0.residual_function.4.bias', 'conv4_x.0.residual_function.4.weight', 'conv4_x.0.residual_function.3.weight', 'conv4_x.0.residual_function.1.bias', 'conv4_x.0.residual_function.1.weight', 'conv4_x.0.residual_function.0.weight', 'conv3_x.7.residual_function.7.bias', 'conv3_x.7.residual_function.7.weight', 'conv3_x.7.residual_function.6.weight', 'conv3_x.7.residual_function.4.bias', 'conv3_x.7.residual_function.4.weight', 'conv3_x.7.residual_function.3.weight', 'conv3_x.7.residual_function.1.bias', 'conv3_x.7.residual_function.1.weight', 'conv3_x.7.residual_function.0.weight', 'conv3_x.6.residual_function.7.bias', 'conv3_x.6.residual_function.7.weight', 'conv3_x.6.residual_function.6.weight', 'conv3_x.6.residual_function.4.bias', 'conv3_x.6.residual_function.4.weight', 'conv3_x.6.residual_function.3.weight', 'conv3_x.6.residual_function.1.bias', 'conv3_x.6.residual_function.1.weight', 'conv3_x.6.residual_function.0.weight', 'conv3_x.5.residual_function.7.bias', 'conv3_x.5.residual_function.7.weight', 'conv3_x.5.residual_function.6.weight', 'conv3_x.5.residual_function.4.bias', 'conv3_x.5.residual_function.4.weight', 'conv3_x.5.residual_function.3.weight', 'conv3_x.5.residual_function.1.bias', 'conv3_x.5.residual_function.1.weight', 'conv3_x.5.residual_function.0.weight', 'conv3_x.4.residual_function.7.bias', 'conv3_x.4.residual_function.7.weight', 'conv3_x.4.residual_function.6.weight', 'conv3_x.4.residual_function.4.bias', 'conv3_x.4.residual_function.4.weight', 'conv3_x.4.residual_function.3.weight', 'conv3_x.4.residual_function.1.bias', 'conv3_x.4.residual_function.1.weight', 'conv3_x.4.residual_function.0.weight', 'conv3_x.3.residual_function.7.bias', 'conv3_x.3.residual_function.7.weight', 'conv3_x.3.residual_function.6.weight', 'conv3_x.3.residual_function.4.bias', 'conv3_x.3.residual_function.4.weight', 'conv3_x.3.residual_function.3.weight', 'conv3_x.3.residual_function.1.bias', 'conv3_x.3.residual_function.1.weight', 'conv3_x.3.residual_function.0.weight', 'conv3_x.2.residual_function.7.bias', 'conv3_x.2.residual_function.7.weight', 'conv3_x.2.residual_function.6.weight', 'conv3_x.2.residual_function.4.bias', 'conv3_x.2.residual_function.4.weight', 'conv3_x.2.residual_function.3.weight', 'conv3_x.2.residual_function.1.bias', 'conv3_x.2.residual_function.1.weight', 'conv3_x.2.residual_function.0.weight', 'conv3_x.1.residual_function.7.bias', 'conv3_x.1.residual_function.7.weight', 'conv3_x.1.residual_function.6.weight', 'conv3_x.1.residual_function.4.bias', 'conv3_x.1.residual_function.4.weight', 'conv3_x.1.residual_function.3.weight', 'conv3_x.1.residual_function.1.bias', 'conv3_x.1.residual_function.1.weight', 'conv3_x.1.residual_function.0.weight', 'conv3_x.0.shortcut.1.bias', 'conv3_x.0.shortcut.1.weight', 'conv3_x.0.shortcut.0.weight', 'conv3_x.0.residual_function.7.bias', 'conv3_x.0.residual_function.7.weight', 'conv3_x.0.residual_function.6.weight', 'conv3_x.0.residual_function.4.bias', 'conv3_x.0.residual_function.4.weight', 'conv3_x.0.residual_function.3.weight', 'conv3_x.0.residual_function.1.bias', 'conv3_x.0.residual_function.1.weight', 'conv3_x.0.residual_function.0.weight', 'conv2_x.2.residual_function.7.bias', 'conv2_x.2.residual_function.7.weight', 'conv2_x.2.residual_function.6.weight', 'conv2_x.2.residual_function.4.bias', 'conv2_x.2.residual_function.4.weight', 'conv2_x.2.residual_function.3.weight', 'conv2_x.2.residual_function.1.bias', 'conv2_x.2.residual_function.1.weight', 'conv2_x.2.residual_function.0.weight', 'conv2_x.1.residual_function.7.bias', 'conv2_x.1.residual_function.7.weight', 'conv2_x.1.residual_function.6.weight', 'conv2_x.1.residual_function.4.bias', 'conv2_x.1.residual_function.4.weight', 'conv2_x.1.residual_function.3.weight', 'conv2_x.1.residual_function.1.bias', 'conv2_x.1.residual_function.1.weight', 'conv2_x.1.residual_function.0.weight', 'conv2_x.0.shortcut.1.bias', 'conv2_x.0.shortcut.1.weight', 'conv2_x.0.shortcut.0.weight', 'conv2_x.0.residual_function.7.bias', 'conv2_x.0.residual_function.7.weight', 'conv2_x.0.residual_function.6.weight', 'conv2_x.0.residual_function.4.bias', 'conv2_x.0.residual_function.4.weight', 'conv2_x.0.residual_function.3.weight', 'conv2_x.0.residual_function.1.bias', 'conv2_x.0.residual_function.1.weight', 'conv2_x.0.residual_function.0.weight', 'conv1.1.bias', 'conv1.1.weight', 'conv1.0.weight']]
2025-06-08 08:53:27,822 [allreducer.py:672] INFO key_groupidx_maps: {'fc.bias': 0, 'fc.weight': 0, 'conv5_x.2.residual_function.7.bias': 0, 'conv5_x.2.residual_function.7.weight': 0, 'conv5_x.2.residual_function.6.weight': 0, 'conv5_x.2.residual_function.4.bias': 0, 'conv5_x.2.residual_function.4.weight': 0, 'conv5_x.2.residual_function.3.weight': 0, 'conv5_x.2.residual_function.1.bias': 0, 'conv5_x.2.residual_function.1.weight': 0, 'conv5_x.2.residual_function.0.weight': 0, 'conv5_x.1.residual_function.7.bias': 0, 'conv5_x.1.residual_function.7.weight': 0, 'conv5_x.1.residual_function.6.weight': 0, 'conv5_x.1.residual_function.4.bias': 0, 'conv5_x.1.residual_function.4.weight': 0, 'conv5_x.1.residual_function.3.weight': 0, 'conv5_x.1.residual_function.1.bias': 0, 'conv5_x.1.residual_function.1.weight': 0, 'conv5_x.1.residual_function.0.weight': 0, 'conv5_x.0.shortcut.1.bias': 0, 'conv5_x.0.shortcut.1.weight': 0, 'conv5_x.0.shortcut.0.weight': 0, 'conv5_x.0.residual_function.7.bias': 0, 'conv5_x.0.residual_function.7.weight': 0, 'conv5_x.0.residual_function.6.weight': 0, 'conv5_x.0.residual_function.4.bias': 0, 'conv5_x.0.residual_function.4.weight': 0, 'conv5_x.0.residual_function.3.weight': 0, 'conv5_x.0.residual_function.1.bias': 0, 'conv5_x.0.residual_function.1.weight': 0, 'conv5_x.0.residual_function.0.weight': 0, 'conv4_x.35.residual_function.7.bias': 0, 'conv4_x.35.residual_function.7.weight': 0, 'conv4_x.35.residual_function.6.weight': 0, 'conv4_x.35.residual_function.4.bias': 0, 'conv4_x.35.residual_function.4.weight': 0, 'conv4_x.35.residual_function.3.weight': 0, 'conv4_x.35.residual_function.1.bias': 0, 'conv4_x.35.residual_function.1.weight': 0, 'conv4_x.35.residual_function.0.weight': 0, 'conv4_x.34.residual_function.7.bias': 0, 'conv4_x.34.residual_function.7.weight': 0, 'conv4_x.34.residual_function.6.weight': 0, 'conv4_x.34.residual_function.4.bias': 0, 'conv4_x.34.residual_function.4.weight': 0, 'conv4_x.34.residual_function.3.weight': 0, 'conv4_x.34.residual_function.1.bias': 0, 'conv4_x.34.residual_function.1.weight': 0, 'conv4_x.34.residual_function.0.weight': 0, 'conv4_x.33.residual_function.7.bias': 0, 'conv4_x.33.residual_function.7.weight': 0, 'conv4_x.33.residual_function.6.weight': 0, 'conv4_x.33.residual_function.4.bias': 0, 'conv4_x.33.residual_function.4.weight': 0, 'conv4_x.33.residual_function.3.weight': 0, 'conv4_x.33.residual_function.1.bias': 0, 'conv4_x.33.residual_function.1.weight': 0, 'conv4_x.33.residual_function.0.weight': 0, 'conv4_x.32.residual_function.7.bias': 0, 'conv4_x.32.residual_function.7.weight': 0, 'conv4_x.32.residual_function.6.weight': 0, 'conv4_x.32.residual_function.4.bias': 0, 'conv4_x.32.residual_function.4.weight': 0, 'conv4_x.32.residual_function.3.weight': 0, 'conv4_x.32.residual_function.1.bias': 0, 'conv4_x.32.residual_function.1.weight': 0, 'conv4_x.32.residual_function.0.weight': 0, 'conv4_x.31.residual_function.7.bias': 0, 'conv4_x.31.residual_function.7.weight': 0, 'conv4_x.31.residual_function.6.weight': 0, 'conv4_x.31.residual_function.4.bias': 0, 'conv4_x.31.residual_function.4.weight': 0, 'conv4_x.31.residual_function.3.weight': 0, 'conv4_x.31.residual_function.1.bias': 0, 'conv4_x.31.residual_function.1.weight': 0, 'conv4_x.31.residual_function.0.weight': 0, 'conv4_x.30.residual_function.7.bias': 0, 'conv4_x.30.residual_function.7.weight': 0, 'conv4_x.30.residual_function.6.weight': 0, 'conv4_x.30.residual_function.4.bias': 0, 'conv4_x.30.residual_function.4.weight': 0, 'conv4_x.30.residual_function.3.weight': 0, 'conv4_x.30.residual_function.1.bias': 0, 'conv4_x.30.residual_function.1.weight': 0, 'conv4_x.30.residual_function.0.weight': 0, 'conv4_x.29.residual_function.7.bias': 0, 'conv4_x.29.residual_function.7.weight': 0, 'conv4_x.29.residual_function.6.weight': 0, 'conv4_x.29.residual_function.4.bias': 0, 'conv4_x.29.residual_function.4.weight': 0, 'conv4_x.29.residual_function.3.weight': 0, 'conv4_x.29.residual_function.1.bias': 0, 'conv4_x.29.residual_function.1.weight': 0, 'conv4_x.29.residual_function.0.weight': 0, 'conv4_x.28.residual_function.7.bias': 0, 'conv4_x.28.residual_function.7.weight': 0, 'conv4_x.28.residual_function.6.weight': 0, 'conv4_x.28.residual_function.4.bias': 0, 'conv4_x.28.residual_function.4.weight': 0, 'conv4_x.28.residual_function.3.weight': 0, 'conv4_x.28.residual_function.1.bias': 0, 'conv4_x.28.residual_function.1.weight': 0, 'conv4_x.28.residual_function.0.weight': 0, 'conv4_x.27.residual_function.7.bias': 0, 'conv4_x.27.residual_function.7.weight': 0, 'conv4_x.27.residual_function.6.weight': 0, 'conv4_x.27.residual_function.4.bias': 0, 'conv4_x.27.residual_function.4.weight': 0, 'conv4_x.27.residual_function.3.weight': 0, 'conv4_x.27.residual_function.1.bias': 0, 'conv4_x.27.residual_function.1.weight': 0, 'conv4_x.27.residual_function.0.weight': 0, 'conv4_x.26.residual_function.7.bias': 0, 'conv4_x.26.residual_function.7.weight': 0, 'conv4_x.26.residual_function.6.weight': 0, 'conv4_x.26.residual_function.4.bias': 0, 'conv4_x.26.residual_function.4.weight': 0, 'conv4_x.26.residual_function.3.weight': 0, 'conv4_x.26.residual_function.1.bias': 0, 'conv4_x.26.residual_function.1.weight': 0, 'conv4_x.26.residual_function.0.weight': 0, 'conv4_x.25.residual_function.7.bias': 0, 'conv4_x.25.residual_function.7.weight': 0, 'conv4_x.25.residual_function.6.weight': 0, 'conv4_x.25.residual_function.4.bias': 0, 'conv4_x.25.residual_function.4.weight': 0, 'conv4_x.25.residual_function.3.weight': 0, 'conv4_x.25.residual_function.1.bias': 0, 'conv4_x.25.residual_function.1.weight': 0, 'conv4_x.25.residual_function.0.weight': 0, 'conv4_x.24.residual_function.7.bias': 0, 'conv4_x.24.residual_function.7.weight': 0, 'conv4_x.24.residual_function.6.weight': 0, 'conv4_x.24.residual_function.4.bias': 0, 'conv4_x.24.residual_function.4.weight': 0, 'conv4_x.24.residual_function.3.weight': 0, 'conv4_x.24.residual_function.1.bias': 0, 'conv4_x.24.residual_function.1.weight': 0, 'conv4_x.24.residual_function.0.weight': 0, 'conv4_x.23.residual_function.7.bias': 0, 'conv4_x.23.residual_function.7.weight': 0, 'conv4_x.23.residual_function.6.weight': 0, 'conv4_x.23.residual_function.4.bias': 0, 'conv4_x.23.residual_function.4.weight': 0, 'conv4_x.23.residual_function.3.weight': 0, 'conv4_x.23.residual_function.1.bias': 0, 'conv4_x.23.residual_function.1.weight': 0, 'conv4_x.23.residual_function.0.weight': 0, 'conv4_x.22.residual_function.7.bias': 0, 'conv4_x.22.residual_function.7.weight': 0, 'conv4_x.22.residual_function.6.weight': 0, 'conv4_x.22.residual_function.4.bias': 0, 'conv4_x.22.residual_function.4.weight': 0, 'conv4_x.22.residual_function.3.weight': 0, 'conv4_x.22.residual_function.1.bias': 0, 'conv4_x.22.residual_function.1.weight': 0, 'conv4_x.22.residual_function.0.weight': 0, 'conv4_x.21.residual_function.7.bias': 0, 'conv4_x.21.residual_function.7.weight': 0, 'conv4_x.21.residual_function.6.weight': 0, 'conv4_x.21.residual_function.4.bias': 0, 'conv4_x.21.residual_function.4.weight': 0, 'conv4_x.21.residual_function.3.weight': 0, 'conv4_x.21.residual_function.1.bias': 0, 'conv4_x.21.residual_function.1.weight': 0, 'conv4_x.21.residual_function.0.weight': 0, 'conv4_x.20.residual_function.7.bias': 0, 'conv4_x.20.residual_function.7.weight': 0, 'conv4_x.20.residual_function.6.weight': 0, 'conv4_x.20.residual_function.4.bias': 0, 'conv4_x.20.residual_function.4.weight': 0, 'conv4_x.20.residual_function.3.weight': 0, 'conv4_x.20.residual_function.1.bias': 0, 'conv4_x.20.residual_function.1.weight': 0, 'conv4_x.20.residual_function.0.weight': 0, 'conv4_x.19.residual_function.7.bias': 0, 'conv4_x.19.residual_function.7.weight': 0, 'conv4_x.19.residual_function.6.weight': 0, 'conv4_x.19.residual_function.4.bias': 0, 'conv4_x.19.residual_function.4.weight': 0, 'conv4_x.19.residual_function.3.weight': 0, 'conv4_x.19.residual_function.1.bias': 0, 'conv4_x.19.residual_function.1.weight': 0, 'conv4_x.19.residual_function.0.weight': 0, 'conv4_x.18.residual_function.7.bias': 0, 'conv4_x.18.residual_function.7.weight': 0, 'conv4_x.18.residual_function.6.weight': 0, 'conv4_x.18.residual_function.4.bias': 0, 'conv4_x.18.residual_function.4.weight': 0, 'conv4_x.18.residual_function.3.weight': 0, 'conv4_x.18.residual_function.1.bias': 0, 'conv4_x.18.residual_function.1.weight': 0, 'conv4_x.18.residual_function.0.weight': 0, 'conv4_x.17.residual_function.7.bias': 0, 'conv4_x.17.residual_function.7.weight': 0, 'conv4_x.17.residual_function.6.weight': 0, 'conv4_x.17.residual_function.4.bias': 0, 'conv4_x.17.residual_function.4.weight': 0, 'conv4_x.17.residual_function.3.weight': 0, 'conv4_x.17.residual_function.1.bias': 0, 'conv4_x.17.residual_function.1.weight': 0, 'conv4_x.17.residual_function.0.weight': 0, 'conv4_x.16.residual_function.7.bias': 0, 'conv4_x.16.residual_function.7.weight': 0, 'conv4_x.16.residual_function.6.weight': 0, 'conv4_x.16.residual_function.4.bias': 0, 'conv4_x.16.residual_function.4.weight': 0, 'conv4_x.16.residual_function.3.weight': 0, 'conv4_x.16.residual_function.1.bias': 0, 'conv4_x.16.residual_function.1.weight': 0, 'conv4_x.16.residual_function.0.weight': 0, 'conv4_x.15.residual_function.7.bias': 0, 'conv4_x.15.residual_function.7.weight': 0, 'conv4_x.15.residual_function.6.weight': 0, 'conv4_x.15.residual_function.4.bias': 0, 'conv4_x.15.residual_function.4.weight': 0, 'conv4_x.15.residual_function.3.weight': 0, 'conv4_x.15.residual_function.1.bias': 0, 'conv4_x.15.residual_function.1.weight': 0, 'conv4_x.15.residual_function.0.weight': 0, 'conv4_x.14.residual_function.7.bias': 0, 'conv4_x.14.residual_function.7.weight': 0, 'conv4_x.14.residual_function.6.weight': 0, 'conv4_x.14.residual_function.4.bias': 0, 'conv4_x.14.residual_function.4.weight': 0, 'conv4_x.14.residual_function.3.weight': 0, 'conv4_x.14.residual_function.1.bias': 0, 'conv4_x.14.residual_function.1.weight': 0, 'conv4_x.14.residual_function.0.weight': 0, 'conv4_x.13.residual_function.7.bias': 0, 'conv4_x.13.residual_function.7.weight': 0, 'conv4_x.13.residual_function.6.weight': 0, 'conv4_x.13.residual_function.4.bias': 0, 'conv4_x.13.residual_function.4.weight': 0, 'conv4_x.13.residual_function.3.weight': 0, 'conv4_x.13.residual_function.1.bias': 0, 'conv4_x.13.residual_function.1.weight': 0, 'conv4_x.13.residual_function.0.weight': 0, 'conv4_x.12.residual_function.7.bias': 0, 'conv4_x.12.residual_function.7.weight': 0, 'conv4_x.12.residual_function.6.weight': 0, 'conv4_x.12.residual_function.4.bias': 0, 'conv4_x.12.residual_function.4.weight': 0, 'conv4_x.12.residual_function.3.weight': 0, 'conv4_x.12.residual_function.1.bias': 0, 'conv4_x.12.residual_function.1.weight': 0, 'conv4_x.12.residual_function.0.weight': 0, 'conv4_x.11.residual_function.7.bias': 0, 'conv4_x.11.residual_function.7.weight': 0, 'conv4_x.11.residual_function.6.weight': 0, 'conv4_x.11.residual_function.4.bias': 0, 'conv4_x.11.residual_function.4.weight': 0, 'conv4_x.11.residual_function.3.weight': 0, 'conv4_x.11.residual_function.1.bias': 0, 'conv4_x.11.residual_function.1.weight': 0, 'conv4_x.11.residual_function.0.weight': 0, 'conv4_x.10.residual_function.7.bias': 0, 'conv4_x.10.residual_function.7.weight': 0, 'conv4_x.10.residual_function.6.weight': 0, 'conv4_x.10.residual_function.4.bias': 0, 'conv4_x.10.residual_function.4.weight': 0, 'conv4_x.10.residual_function.3.weight': 0, 'conv4_x.10.residual_function.1.bias': 0, 'conv4_x.10.residual_function.1.weight': 0, 'conv4_x.10.residual_function.0.weight': 0, 'conv4_x.9.residual_function.7.bias': 0, 'conv4_x.9.residual_function.7.weight': 0, 'conv4_x.9.residual_function.6.weight': 0, 'conv4_x.9.residual_function.4.bias': 0, 'conv4_x.9.residual_function.4.weight': 0, 'conv4_x.9.residual_function.3.weight': 0, 'conv4_x.9.residual_function.1.bias': 0, 'conv4_x.9.residual_function.1.weight': 0, 'conv4_x.9.residual_function.0.weight': 0, 'conv4_x.8.residual_function.7.bias': 0, 'conv4_x.8.residual_function.7.weight': 0, 'conv4_x.8.residual_function.6.weight': 0, 'conv4_x.8.residual_function.4.bias': 0, 'conv4_x.8.residual_function.4.weight': 0, 'conv4_x.8.residual_function.3.weight': 0, 'conv4_x.8.residual_function.1.bias': 0, 'conv4_x.8.residual_function.1.weight': 0, 'conv4_x.8.residual_function.0.weight': 0, 'conv4_x.7.residual_function.7.bias': 0, 'conv4_x.7.residual_function.7.weight': 0, 'conv4_x.7.residual_function.6.weight': 0, 'conv4_x.7.residual_function.4.bias': 0, 'conv4_x.7.residual_function.4.weight': 0, 'conv4_x.7.residual_function.3.weight': 0, 'conv4_x.7.residual_function.1.bias': 0, 'conv4_x.7.residual_function.1.weight': 0, 'conv4_x.7.residual_function.0.weight': 0, 'conv4_x.6.residual_function.7.bias': 0, 'conv4_x.6.residual_function.7.weight': 0, 'conv4_x.6.residual_function.6.weight': 0, 'conv4_x.6.residual_function.4.bias': 0, 'conv4_x.6.residual_function.4.weight': 0, 'conv4_x.6.residual_function.3.weight': 0, 'conv4_x.6.residual_function.1.bias': 0, 'conv4_x.6.residual_function.1.weight': 0, 'conv4_x.6.residual_function.0.weight': 0, 'conv4_x.5.residual_function.7.bias': 0, 'conv4_x.5.residual_function.7.weight': 0, 'conv4_x.5.residual_function.6.weight': 0, 'conv4_x.5.residual_function.4.bias': 0, 'conv4_x.5.residual_function.4.weight': 0, 'conv4_x.5.residual_function.3.weight': 0, 'conv4_x.5.residual_function.1.bias': 0, 'conv4_x.5.residual_function.1.weight': 0, 'conv4_x.5.residual_function.0.weight': 0, 'conv4_x.4.residual_function.7.bias': 0, 'conv4_x.4.residual_function.7.weight': 0, 'conv4_x.4.residual_function.6.weight': 0, 'conv4_x.4.residual_function.4.bias': 0, 'conv4_x.4.residual_function.4.weight': 0, 'conv4_x.4.residual_function.3.weight': 0, 'conv4_x.4.residual_function.1.bias': 0, 'conv4_x.4.residual_function.1.weight': 0, 'conv4_x.4.residual_function.0.weight': 0, 'conv4_x.3.residual_function.7.bias': 0, 'conv4_x.3.residual_function.7.weight': 0, 'conv4_x.3.residual_function.6.weight': 0, 'conv4_x.3.residual_function.4.bias': 0, 'conv4_x.3.residual_function.4.weight': 0, 'conv4_x.3.residual_function.3.weight': 0, 'conv4_x.3.residual_function.1.bias': 0, 'conv4_x.3.residual_function.1.weight': 0, 'conv4_x.3.residual_function.0.weight': 0, 'conv4_x.2.residual_function.7.bias': 0, 'conv4_x.2.residual_function.7.weight': 0, 'conv4_x.2.residual_function.6.weight': 0, 'conv4_x.2.residual_function.4.bias': 0, 'conv4_x.2.residual_function.4.weight': 0, 'conv4_x.2.residual_function.3.weight': 0, 'conv4_x.2.residual_function.1.bias': 0, 'conv4_x.2.residual_function.1.weight': 0, 'conv4_x.2.residual_function.0.weight': 0, 'conv4_x.1.residual_function.7.bias': 0, 'conv4_x.1.residual_function.7.weight': 0, 'conv4_x.1.residual_function.6.weight': 0, 'conv4_x.1.residual_function.4.bias': 0, 'conv4_x.1.residual_function.4.weight': 0, 'conv4_x.1.residual_function.3.weight': 0, 'conv4_x.1.residual_function.1.bias': 0, 'conv4_x.1.residual_function.1.weight': 0, 'conv4_x.1.residual_function.0.weight': 0, 'conv4_x.0.shortcut.1.bias': 0, 'conv4_x.0.shortcut.1.weight': 0, 'conv4_x.0.shortcut.0.weight': 0, 'conv4_x.0.residual_function.7.bias': 0, 'conv4_x.0.residual_function.7.weight': 0, 'conv4_x.0.residual_function.6.weight': 0, 'conv4_x.0.residual_function.4.bias': 0, 'conv4_x.0.residual_function.4.weight': 0, 'conv4_x.0.residual_function.3.weight': 0, 'conv4_x.0.residual_function.1.bias': 0, 'conv4_x.0.residual_function.1.weight': 0, 'conv4_x.0.residual_function.0.weight': 0, 'conv3_x.7.residual_function.7.bias': 0, 'conv3_x.7.residual_function.7.weight': 0, 'conv3_x.7.residual_function.6.weight': 0, 'conv3_x.7.residual_function.4.bias': 0, 'conv3_x.7.residual_function.4.weight': 0, 'conv3_x.7.residual_function.3.weight': 0, 'conv3_x.7.residual_function.1.bias': 0, 'conv3_x.7.residual_function.1.weight': 0, 'conv3_x.7.residual_function.0.weight': 0, 'conv3_x.6.residual_function.7.bias': 0, 'conv3_x.6.residual_function.7.weight': 0, 'conv3_x.6.residual_function.6.weight': 0, 'conv3_x.6.residual_function.4.bias': 0, 'conv3_x.6.residual_function.4.weight': 0, 'conv3_x.6.residual_function.3.weight': 0, 'conv3_x.6.residual_function.1.bias': 0, 'conv3_x.6.residual_function.1.weight': 0, 'conv3_x.6.residual_function.0.weight': 0, 'conv3_x.5.residual_function.7.bias': 0, 'conv3_x.5.residual_function.7.weight': 0, 'conv3_x.5.residual_function.6.weight': 0, 'conv3_x.5.residual_function.4.bias': 0, 'conv3_x.5.residual_function.4.weight': 0, 'conv3_x.5.residual_function.3.weight': 0, 'conv3_x.5.residual_function.1.bias': 0, 'conv3_x.5.residual_function.1.weight': 0, 'conv3_x.5.residual_function.0.weight': 0, 'conv3_x.4.residual_function.7.bias': 0, 'conv3_x.4.residual_function.7.weight': 0, 'conv3_x.4.residual_function.6.weight': 0, 'conv3_x.4.residual_function.4.bias': 0, 'conv3_x.4.residual_function.4.weight': 0, 'conv3_x.4.residual_function.3.weight': 0, 'conv3_x.4.residual_function.1.bias': 0, 'conv3_x.4.residual_function.1.weight': 0, 'conv3_x.4.residual_function.0.weight': 0, 'conv3_x.3.residual_function.7.bias': 0, 'conv3_x.3.residual_function.7.weight': 0, 'conv3_x.3.residual_function.6.weight': 0, 'conv3_x.3.residual_function.4.bias': 0, 'conv3_x.3.residual_function.4.weight': 0, 'conv3_x.3.residual_function.3.weight': 0, 'conv3_x.3.residual_function.1.bias': 0, 'conv3_x.3.residual_function.1.weight': 0, 'conv3_x.3.residual_function.0.weight': 0, 'conv3_x.2.residual_function.7.bias': 0, 'conv3_x.2.residual_function.7.weight': 0, 'conv3_x.2.residual_function.6.weight': 0, 'conv3_x.2.residual_function.4.bias': 0, 'conv3_x.2.residual_function.4.weight': 0, 'conv3_x.2.residual_function.3.weight': 0, 'conv3_x.2.residual_function.1.bias': 0, 'conv3_x.2.residual_function.1.weight': 0, 'conv3_x.2.residual_function.0.weight': 0, 'conv3_x.1.residual_function.7.bias': 0, 'conv3_x.1.residual_function.7.weight': 0, 'conv3_x.1.residual_function.6.weight': 0, 'conv3_x.1.residual_function.4.bias': 0, 'conv3_x.1.residual_function.4.weight': 0, 'conv3_x.1.residual_function.3.weight': 0, 'conv3_x.1.residual_function.1.bias': 0, 'conv3_x.1.residual_function.1.weight': 0, 'conv3_x.1.residual_function.0.weight': 0, 'conv3_x.0.shortcut.1.bias': 0, 'conv3_x.0.shortcut.1.weight': 0, 'conv3_x.0.shortcut.0.weight': 0, 'conv3_x.0.residual_function.7.bias': 0, 'conv3_x.0.residual_function.7.weight': 0, 'conv3_x.0.residual_function.6.weight': 0, 'conv3_x.0.residual_function.4.bias': 0, 'conv3_x.0.residual_function.4.weight': 0, 'conv3_x.0.residual_function.3.weight': 0, 'conv3_x.0.residual_function.1.bias': 0, 'conv3_x.0.residual_function.1.weight': 0, 'conv3_x.0.residual_function.0.weight': 0, 'conv2_x.2.residual_function.7.bias': 0, 'conv2_x.2.residual_function.7.weight': 0, 'conv2_x.2.residual_function.6.weight': 0, 'conv2_x.2.residual_function.4.bias': 0, 'conv2_x.2.residual_function.4.weight': 0, 'conv2_x.2.residual_function.3.weight': 0, 'conv2_x.2.residual_function.1.bias': 0, 'conv2_x.2.residual_function.1.weight': 0, 'conv2_x.2.residual_function.0.weight': 0, 'conv2_x.1.residual_function.7.bias': 0, 'conv2_x.1.residual_function.7.weight': 0, 'conv2_x.1.residual_function.6.weight': 0, 'conv2_x.1.residual_function.4.bias': 0, 'conv2_x.1.residual_function.4.weight': 0, 'conv2_x.1.residual_function.3.weight': 0, 'conv2_x.1.residual_function.1.bias': 0, 'conv2_x.1.residual_function.1.weight': 0, 'conv2_x.1.residual_function.0.weight': 0, 'conv2_x.0.shortcut.1.bias': 0, 'conv2_x.0.shortcut.1.weight': 0, 'conv2_x.0.shortcut.0.weight': 0, 'conv2_x.0.residual_function.7.bias': 0, 'conv2_x.0.residual_function.7.weight': 0, 'conv2_x.0.residual_function.6.weight': 0, 'conv2_x.0.residual_function.4.bias': 0, 'conv2_x.0.residual_function.4.weight': 0, 'conv2_x.0.residual_function.3.weight': 0, 'conv2_x.0.residual_function.1.bias': 0, 'conv2_x.0.residual_function.1.weight': 0, 'conv2_x.0.residual_function.0.weight': 0, 'conv1.1.bias': 0, 'conv1.1.weight': 0, 'conv1.0.weight': 0}
2025-06-08 08:53:27,824 [allreducer.py:708] INFO offsets: 
2025-06-08 08:53:27,824 [allreducer.py:345] INFO dynamic densities = [0.01]
2025-06-08 08:53:27,832 [allreducer.py:659] INFO spar_groups: [{'conv1.0.weight': ((0, 1728), (0, 1728)), 'conv1.1.weight': ((0, 64), (1728, 1792)), 'conv1.1.bias': ((0, 64), (1792, 1856)), 'conv2_x.0.residual_function.0.weight': ((0, 4096), (1856, 5952)), 'conv2_x.0.residual_function.1.weight': ((0, 64), (5952, 6016)), 'conv2_x.0.residual_function.1.bias': ((0, 64), (6016, 6080)), 'conv2_x.0.residual_function.3.weight': ((0, 36864), (6080, 42944)), 'conv2_x.0.residual_function.4.weight': ((0, 64), (42944, 43008)), 'conv2_x.0.residual_function.4.bias': ((0, 64), (43008, 43072)), 'conv2_x.0.residual_function.6.weight': ((0, 16384), (43072, 59456)), 'conv2_x.0.residual_function.7.weight': ((0, 256), (59456, 59712)), 'conv2_x.0.residual_function.7.bias': ((0, 256), (59712, 59968)), 'conv2_x.0.shortcut.0.weight': ((0, 16384), (59968, 76352)), 'conv2_x.0.shortcut.1.weight': ((0, 256), (76352, 76608)), 'conv2_x.0.shortcut.1.bias': ((0, 256), (76608, 76864)), 'conv2_x.1.residual_function.0.weight': ((0, 16384), (76864, 93248)), 'conv2_x.1.residual_function.1.weight': ((0, 64), (93248, 93312)), 'conv2_x.1.residual_function.1.bias': ((0, 64), (93312, 93376)), 'conv2_x.1.residual_function.3.weight': ((0, 36864), (93376, 130240)), 'conv2_x.1.residual_function.4.weight': ((0, 64), (130240, 130304)), 'conv2_x.1.residual_function.4.bias': ((0, 64), (130304, 130368)), 'conv2_x.1.residual_function.6.weight': ((0, 16384), (130368, 146752)), 'conv2_x.1.residual_function.7.weight': ((0, 256), (146752, 147008)), 'conv2_x.1.residual_function.7.bias': ((0, 256), (147008, 147264)), 'conv2_x.2.residual_function.0.weight': ((0, 16384), (147264, 163648)), 'conv2_x.2.residual_function.1.weight': ((0, 64), (163648, 163712)), 'conv2_x.2.residual_function.1.bias': ((0, 64), (163712, 163776)), 'conv2_x.2.residual_function.3.weight': ((0, 36864), (163776, 200640)), 'conv2_x.2.residual_function.4.weight': ((0, 64), (200640, 200704)), 'conv2_x.2.residual_function.4.bias': ((0, 64), (200704, 200768)), 'conv2_x.2.residual_function.6.weight': ((0, 16384), (200768, 217152)), 'conv2_x.2.residual_function.7.weight': ((0, 256), (217152, 217408)), 'conv2_x.2.residual_function.7.bias': ((0, 256), (217408, 217664)), 'conv3_x.0.residual_function.0.weight': ((0, 32768), (217664, 250432)), 'conv3_x.0.residual_function.1.weight': ((0, 128), (250432, 250560)), 'conv3_x.0.residual_function.1.bias': ((0, 128), (250560, 250688)), 'conv3_x.0.residual_function.3.weight': ((0, 147456), (250688, 398144)), 'conv3_x.0.residual_function.4.weight': ((0, 128), (398144, 398272)), 'conv3_x.0.residual_function.4.bias': ((0, 128), (398272, 398400)), 'conv3_x.0.residual_function.6.weight': ((0, 65536), (398400, 463936)), 'conv3_x.0.residual_function.7.weight': ((0, 512), (463936, 464448)), 'conv3_x.0.residual_function.7.bias': ((0, 512), (464448, 464960)), 'conv3_x.0.shortcut.0.weight': ((0, 131072), (464960, 596032)), 'conv3_x.0.shortcut.1.weight': ((0, 512), (596032, 596544)), 'conv3_x.0.shortcut.1.bias': ((0, 512), (596544, 597056)), 'conv3_x.1.residual_function.0.weight': ((0, 65536), (597056, 662592)), 'conv3_x.1.residual_function.1.weight': ((0, 128), (662592, 662720)), 'conv3_x.1.residual_function.1.bias': ((0, 128), (662720, 662848)), 'conv3_x.1.residual_function.3.weight': ((0, 147456), (662848, 810304)), 'conv3_x.1.residual_function.4.weight': ((0, 128), (810304, 810432)), 'conv3_x.1.residual_function.4.bias': ((0, 128), (810432, 810560)), 'conv3_x.1.residual_function.6.weight': ((0, 65536), (810560, 876096)), 'conv3_x.1.residual_function.7.weight': ((0, 512), (876096, 876608)), 'conv3_x.1.residual_function.7.bias': ((0, 512), (876608, 877120)), 'conv3_x.2.residual_function.0.weight': ((0, 65536), (877120, 942656)), 'conv3_x.2.residual_function.1.weight': ((0, 128), (942656, 942784)), 'conv3_x.2.residual_function.1.bias': ((0, 128), (942784, 942912)), 'conv3_x.2.residual_function.3.weight': ((0, 147456), (942912, 1090368)), 'conv3_x.2.residual_function.4.weight': ((0, 128), (1090368, 1090496)), 'conv3_x.2.residual_function.4.bias': ((0, 128), (1090496, 1090624)), 'conv3_x.2.residual_function.6.weight': ((0, 65536), (1090624, 1156160)), 'conv3_x.2.residual_function.7.weight': ((0, 512), (1156160, 1156672)), 'conv3_x.2.residual_function.7.bias': ((0, 512), (1156672, 1157184)), 'conv3_x.3.residual_function.0.weight': ((0, 65536), (1157184, 1222720)), 'conv3_x.3.residual_function.1.weight': ((0, 128), (1222720, 1222848)), 'conv3_x.3.residual_function.1.bias': ((0, 128), (1222848, 1222976)), 'conv3_x.3.residual_function.3.weight': ((0, 147456), (1222976, 1370432)), 'conv3_x.3.residual_function.4.weight': ((0, 128), (1370432, 1370560)), 'conv3_x.3.residual_function.4.bias': ((0, 128), (1370560, 1370688)), 'conv3_x.3.residual_function.6.weight': ((0, 65536), (1370688, 1436224)), 'conv3_x.3.residual_function.7.weight': ((0, 512), (1436224, 1436736)), 'conv3_x.3.residual_function.7.bias': ((0, 512), (1436736, 1437248)), 'conv3_x.4.residual_function.0.weight': ((0, 65536), (1437248, 1502784)), 'conv3_x.4.residual_function.1.weight': ((0, 128), (1502784, 1502912)), 'conv3_x.4.residual_function.1.bias': ((0, 128), (1502912, 1503040)), 'conv3_x.4.residual_function.3.weight': ((0, 147456), (1503040, 1650496)), 'conv3_x.4.residual_function.4.weight': ((0, 128), (1650496, 1650624)), 'conv3_x.4.residual_function.4.bias': ((0, 128), (1650624, 1650752)), 'conv3_x.4.residual_function.6.weight': ((0, 65536), (1650752, 1716288)), 'conv3_x.4.residual_function.7.weight': ((0, 512), (1716288, 1716800)), 'conv3_x.4.residual_function.7.bias': ((0, 512), (1716800, 1717312)), 'conv3_x.5.residual_function.0.weight': ((0, 65536), (1717312, 1782848)), 'conv3_x.5.residual_function.1.weight': ((0, 128), (1782848, 1782976)), 'conv3_x.5.residual_function.1.bias': ((0, 128), (1782976, 1783104)), 'conv3_x.5.residual_function.3.weight': ((0, 147456), (1783104, 1930560)), 'conv3_x.5.residual_function.4.weight': ((0, 128), (1930560, 1930688)), 'conv3_x.5.residual_function.4.bias': ((0, 128), (1930688, 1930816)), 'conv3_x.5.residual_function.6.weight': ((0, 65536), (1930816, 1996352)), 'conv3_x.5.residual_function.7.weight': ((0, 512), (1996352, 1996864)), 'conv3_x.5.residual_function.7.bias': ((0, 512), (1996864, 1997376)), 'conv3_x.6.residual_function.0.weight': ((0, 65536), (1997376, 2062912)), 'conv3_x.6.residual_function.1.weight': ((0, 128), (2062912, 2063040)), 'conv3_x.6.residual_function.1.bias': ((0, 128), (2063040, 2063168)), 'conv3_x.6.residual_function.3.weight': ((0, 147456), (2063168, 2210624)), 'conv3_x.6.residual_function.4.weight': ((0, 128), (2210624, 2210752)), 'conv3_x.6.residual_function.4.bias': ((0, 128), (2210752, 2210880)), 'conv3_x.6.residual_function.6.weight': ((0, 65536), (2210880, 2276416)), 'conv3_x.6.residual_function.7.weight': ((0, 512), (2276416, 2276928)), 'conv3_x.6.residual_function.7.bias': ((0, 512), (2276928, 2277440)), 'conv3_x.7.residual_function.0.weight': ((0, 65536), (2277440, 2342976)), 'conv3_x.7.residual_function.1.weight': ((0, 128), (2342976, 2343104)), 'conv3_x.7.residual_function.1.bias': ((0, 128), (2343104, 2343232)), 'conv3_x.7.residual_function.3.weight': ((0, 147456), (2343232, 2490688)), 'conv3_x.7.residual_function.4.weight': ((0, 128), (2490688, 2490816)), 'conv3_x.7.residual_function.4.bias': ((0, 128), (2490816, 2490944)), 'conv3_x.7.residual_function.6.weight': ((0, 65536), (2490944, 2556480)), 'conv3_x.7.residual_function.7.weight': ((0, 512), (2556480, 2556992)), 'conv3_x.7.residual_function.7.bias': ((0, 512), (2556992, 2557504)), 'conv4_x.0.residual_function.0.weight': ((0, 131072), (2557504, 2688576)), 'conv4_x.0.residual_function.1.weight': ((0, 256), (2688576, 2688832)), 'conv4_x.0.residual_function.1.bias': ((0, 256), (2688832, 2689088)), 'conv4_x.0.residual_function.3.weight': ((0, 589824), (2689088, 3278912)), 'conv4_x.0.residual_function.4.weight': ((0, 256), (3278912, 3279168)), 'conv4_x.0.residual_function.4.bias': ((0, 256), (3279168, 3279424)), 'conv4_x.0.residual_function.6.weight': ((0, 262144), (3279424, 3541568)), 'conv4_x.0.residual_function.7.weight': ((0, 1024), (3541568, 3542592)), 'conv4_x.0.residual_function.7.bias': ((0, 1024), (3542592, 3543616)), 'conv4_x.0.shortcut.0.weight': ((0, 524288), (3543616, 4067904)), 'conv4_x.0.shortcut.1.weight': ((0, 1024), (4067904, 4068928)), 'conv4_x.0.shortcut.1.bias': ((0, 1024), (4068928, 4069952)), 'conv4_x.1.residual_function.0.weight': ((0, 262144), (4069952, 4332096)), 'conv4_x.1.residual_function.1.weight': ((0, 256), (4332096, 4332352)), 'conv4_x.1.residual_function.1.bias': ((0, 256), (4332352, 4332608)), 'conv4_x.1.residual_function.3.weight': ((0, 589824), (4332608, 4922432)), 'conv4_x.1.residual_function.4.weight': ((0, 256), (4922432, 4922688)), 'conv4_x.1.residual_function.4.bias': ((0, 256), (4922688, 4922944)), 'conv4_x.1.residual_function.6.weight': ((0, 262144), (4922944, 5185088)), 'conv4_x.1.residual_function.7.weight': ((0, 1024), (5185088, 5186112)), 'conv4_x.1.residual_function.7.bias': ((0, 1024), (5186112, 5187136)), 'conv4_x.2.residual_function.0.weight': ((0, 262144), (5187136, 5449280)), 'conv4_x.2.residual_function.1.weight': ((0, 256), (5449280, 5449536)), 'conv4_x.2.residual_function.1.bias': ((0, 256), (5449536, 5449792)), 'conv4_x.2.residual_function.3.weight': ((0, 589824), (5449792, 6039616)), 'conv4_x.2.residual_function.4.weight': ((0, 256), (6039616, 6039872)), 'conv4_x.2.residual_function.4.bias': ((0, 256), (6039872, 6040128)), 'conv4_x.2.residual_function.6.weight': ((0, 262144), (6040128, 6302272)), 'conv4_x.2.residual_function.7.weight': ((0, 1024), (6302272, 6303296)), 'conv4_x.2.residual_function.7.bias': ((0, 1024), (6303296, 6304320)), 'conv4_x.3.residual_function.0.weight': ((0, 262144), (6304320, 6566464)), 'conv4_x.3.residual_function.1.weight': ((0, 256), (6566464, 6566720)), 'conv4_x.3.residual_function.1.bias': ((0, 256), (6566720, 6566976)), 'conv4_x.3.residual_function.3.weight': ((0, 589824), (6566976, 7156800)), 'conv4_x.3.residual_function.4.weight': ((0, 256), (7156800, 7157056)), 'conv4_x.3.residual_function.4.bias': ((0, 256), (7157056, 7157312)), 'conv4_x.3.residual_function.6.weight': ((0, 262144), (7157312, 7419456)), 'conv4_x.3.residual_function.7.weight': ((0, 1024), (7419456, 7420480)), 'conv4_x.3.residual_function.7.bias': ((0, 1024), (7420480, 7421504)), 'conv4_x.4.residual_function.0.weight': ((0, 262144), (7421504, 7683648)), 'conv4_x.4.residual_function.1.weight': ((0, 256), (7683648, 7683904)), 'conv4_x.4.residual_function.1.bias': ((0, 256), (7683904, 7684160)), 'conv4_x.4.residual_function.3.weight': ((0, 589824), (7684160, 8273984)), 'conv4_x.4.residual_function.4.weight': ((0, 256), (8273984, 8274240)), 'conv4_x.4.residual_function.4.bias': ((0, 256), (8274240, 8274496)), 'conv4_x.4.residual_function.6.weight': ((0, 262144), (8274496, 8536640)), 'conv4_x.4.residual_function.7.weight': ((0, 1024), (8536640, 8537664)), 'conv4_x.4.residual_function.7.bias': ((0, 1024), (8537664, 8538688)), 'conv4_x.5.residual_function.0.weight': ((0, 262144), (8538688, 8800832)), 'conv4_x.5.residual_function.1.weight': ((0, 256), (8800832, 8801088)), 'conv4_x.5.residual_function.1.bias': ((0, 256), (8801088, 8801344)), 'conv4_x.5.residual_function.3.weight': ((0, 589824), (8801344, 9391168)), 'conv4_x.5.residual_function.4.weight': ((0, 256), (9391168, 9391424)), 'conv4_x.5.residual_function.4.bias': ((0, 256), (9391424, 9391680)), 'conv4_x.5.residual_function.6.weight': ((0, 262144), (9391680, 9653824)), 'conv4_x.5.residual_function.7.weight': ((0, 1024), (9653824, 9654848)), 'conv4_x.5.residual_function.7.bias': ((0, 1024), (9654848, 9655872)), 'conv4_x.6.residual_function.0.weight': ((0, 67633), (9655872, 9723505))}, {'conv4_x.6.residual_function.0.weight': ((67633, 262144), (0, 194511)), 'conv4_x.6.residual_function.1.weight': ((0, 256), (194511, 194767)), 'conv4_x.6.residual_function.1.bias': ((0, 256), (194767, 195023)), 'conv4_x.6.residual_function.3.weight': ((0, 589824), (195023, 784847)), 'conv4_x.6.residual_function.4.weight': ((0, 256), (784847, 785103)), 'conv4_x.6.residual_function.4.bias': ((0, 256), (785103, 785359)), 'conv4_x.6.residual_function.6.weight': ((0, 262144), (785359, 1047503)), 'conv4_x.6.residual_function.7.weight': ((0, 1024), (1047503, 1048527)), 'conv4_x.6.residual_function.7.bias': ((0, 1024), (1048527, 1049551)), 'conv4_x.7.residual_function.0.weight': ((0, 262144), (1049551, 1311695)), 'conv4_x.7.residual_function.1.weight': ((0, 256), (1311695, 1311951)), 'conv4_x.7.residual_function.1.bias': ((0, 256), (1311951, 1312207)), 'conv4_x.7.residual_function.3.weight': ((0, 589824), (1312207, 1902031)), 'conv4_x.7.residual_function.4.weight': ((0, 256), (1902031, 1902287)), 'conv4_x.7.residual_function.4.bias': ((0, 256), (1902287, 1902543)), 'conv4_x.7.residual_function.6.weight': ((0, 262144), (1902543, 2164687)), 'conv4_x.7.residual_function.7.weight': ((0, 1024), (2164687, 2165711)), 'conv4_x.7.residual_function.7.bias': ((0, 1024), (2165711, 2166735)), 'conv4_x.8.residual_function.0.weight': ((0, 262144), (2166735, 2428879)), 'conv4_x.8.residual_function.1.weight': ((0, 256), (2428879, 2429135)), 'conv4_x.8.residual_function.1.bias': ((0, 256), (2429135, 2429391)), 'conv4_x.8.residual_function.3.weight': ((0, 589824), (2429391, 3019215)), 'conv4_x.8.residual_function.4.weight': ((0, 256), (3019215, 3019471)), 'conv4_x.8.residual_function.4.bias': ((0, 256), (3019471, 3019727)), 'conv4_x.8.residual_function.6.weight': ((0, 262144), (3019727, 3281871)), 'conv4_x.8.residual_function.7.weight': ((0, 1024), (3281871, 3282895)), 'conv4_x.8.residual_function.7.bias': ((0, 1024), (3282895, 3283919)), 'conv4_x.9.residual_function.0.weight': ((0, 262144), (3283919, 3546063)), 'conv4_x.9.residual_function.1.weight': ((0, 256), (3546063, 3546319)), 'conv4_x.9.residual_function.1.bias': ((0, 256), (3546319, 3546575)), 'conv4_x.9.residual_function.3.weight': ((0, 589824), (3546575, 4136399)), 'conv4_x.9.residual_function.4.weight': ((0, 256), (4136399, 4136655)), 'conv4_x.9.residual_function.4.bias': ((0, 256), (4136655, 4136911)), 'conv4_x.9.residual_function.6.weight': ((0, 262144), (4136911, 4399055)), 'conv4_x.9.residual_function.7.weight': ((0, 1024), (4399055, 4400079)), 'conv4_x.9.residual_function.7.bias': ((0, 1024), (4400079, 4401103)), 'conv4_x.10.residual_function.0.weight': ((0, 262144), (4401103, 4663247)), 'conv4_x.10.residual_function.1.weight': ((0, 256), (4663247, 4663503)), 'conv4_x.10.residual_function.1.bias': ((0, 256), (4663503, 4663759)), 'conv4_x.10.residual_function.3.weight': ((0, 589824), (4663759, 5253583)), 'conv4_x.10.residual_function.4.weight': ((0, 256), (5253583, 5253839)), 'conv4_x.10.residual_function.4.bias': ((0, 256), (5253839, 5254095)), 'conv4_x.10.residual_function.6.weight': ((0, 262144), (5254095, 5516239)), 'conv4_x.10.residual_function.7.weight': ((0, 1024), (5516239, 5517263)), 'conv4_x.10.residual_function.7.bias': ((0, 1024), (5517263, 5518287)), 'conv4_x.11.residual_function.0.weight': ((0, 262144), (5518287, 5780431)), 'conv4_x.11.residual_function.1.weight': ((0, 256), (5780431, 5780687)), 'conv4_x.11.residual_function.1.bias': ((0, 256), (5780687, 5780943)), 'conv4_x.11.residual_function.3.weight': ((0, 589824), (5780943, 6370767)), 'conv4_x.11.residual_function.4.weight': ((0, 256), (6370767, 6371023)), 'conv4_x.11.residual_function.4.bias': ((0, 256), (6371023, 6371279)), 'conv4_x.11.residual_function.6.weight': ((0, 262144), (6371279, 6633423)), 'conv4_x.11.residual_function.7.weight': ((0, 1024), (6633423, 6634447)), 'conv4_x.11.residual_function.7.bias': ((0, 1024), (6634447, 6635471)), 'conv4_x.12.residual_function.0.weight': ((0, 262144), (6635471, 6897615)), 'conv4_x.12.residual_function.1.weight': ((0, 256), (6897615, 6897871)), 'conv4_x.12.residual_function.1.bias': ((0, 256), (6897871, 6898127)), 'conv4_x.12.residual_function.3.weight': ((0, 589824), (6898127, 7487951)), 'conv4_x.12.residual_function.4.weight': ((0, 256), (7487951, 7488207)), 'conv4_x.12.residual_function.4.bias': ((0, 256), (7488207, 7488463)), 'conv4_x.12.residual_function.6.weight': ((0, 262144), (7488463, 7750607)), 'conv4_x.12.residual_function.7.weight': ((0, 1024), (7750607, 7751631)), 'conv4_x.12.residual_function.7.bias': ((0, 1024), (7751631, 7752655)), 'conv4_x.13.residual_function.0.weight': ((0, 262144), (7752655, 8014799)), 'conv4_x.13.residual_function.1.weight': ((0, 256), (8014799, 8015055)), 'conv4_x.13.residual_function.1.bias': ((0, 256), (8015055, 8015311)), 'conv4_x.13.residual_function.3.weight': ((0, 589824), (8015311, 8605135)), 'conv4_x.13.residual_function.4.weight': ((0, 256), (8605135, 8605391)), 'conv4_x.13.residual_function.4.bias': ((0, 256), (8605391, 8605647)), 'conv4_x.13.residual_function.6.weight': ((0, 262144), (8605647, 8867791)), 'conv4_x.13.residual_function.7.weight': ((0, 1024), (8867791, 8868815)), 'conv4_x.13.residual_function.7.bias': ((0, 1024), (8868815, 8869839)), 'conv4_x.14.residual_function.0.weight': ((0, 262144), (8869839, 9131983)), 'conv4_x.14.residual_function.1.weight': ((0, 256), (9131983, 9132239)), 'conv4_x.14.residual_function.1.bias': ((0, 256), (9132239, 9132495)), 'conv4_x.14.residual_function.3.weight': ((0, 589824), (9132495, 9722319)), 'conv4_x.14.residual_function.4.weight': ((0, 256), (9722319, 9722575)), 'conv4_x.14.residual_function.4.bias': ((0, 256), (9722575, 9722831)), 'conv4_x.14.residual_function.6.weight': ((0, 674), (9722831, 9723505))}, {'conv4_x.14.residual_function.6.weight': ((674, 262144), (0, 261470)), 'conv4_x.14.residual_function.7.weight': ((0, 1024), (261470, 262494)), 'conv4_x.14.residual_function.7.bias': ((0, 1024), (262494, 263518)), 'conv4_x.15.residual_function.0.weight': ((0, 262144), (263518, 525662)), 'conv4_x.15.residual_function.1.weight': ((0, 256), (525662, 525918)), 'conv4_x.15.residual_function.1.bias': ((0, 256), (525918, 526174)), 'conv4_x.15.residual_function.3.weight': ((0, 589824), (526174, 1115998)), 'conv4_x.15.residual_function.4.weight': ((0, 256), (1115998, 1116254)), 'conv4_x.15.residual_function.4.bias': ((0, 256), (1116254, 1116510)), 'conv4_x.15.residual_function.6.weight': ((0, 262144), (1116510, 1378654)), 'conv4_x.15.residual_function.7.weight': ((0, 1024), (1378654, 1379678)), 'conv4_x.15.residual_function.7.bias': ((0, 1024), (1379678, 1380702)), 'conv4_x.16.residual_function.0.weight': ((0, 262144), (1380702, 1642846)), 'conv4_x.16.residual_function.1.weight': ((0, 256), (1642846, 1643102)), 'conv4_x.16.residual_function.1.bias': ((0, 256), (1643102, 1643358)), 'conv4_x.16.residual_function.3.weight': ((0, 589824), (1643358, 2233182)), 'conv4_x.16.residual_function.4.weight': ((0, 256), (2233182, 2233438)), 'conv4_x.16.residual_function.4.bias': ((0, 256), (2233438, 2233694)), 'conv4_x.16.residual_function.6.weight': ((0, 262144), (2233694, 2495838)), 'conv4_x.16.residual_function.7.weight': ((0, 1024), (2495838, 2496862)), 'conv4_x.16.residual_function.7.bias': ((0, 1024), (2496862, 2497886)), 'conv4_x.17.residual_function.0.weight': ((0, 262144), (2497886, 2760030)), 'conv4_x.17.residual_function.1.weight': ((0, 256), (2760030, 2760286)), 'conv4_x.17.residual_function.1.bias': ((0, 256), (2760286, 2760542)), 'conv4_x.17.residual_function.3.weight': ((0, 589824), (2760542, 3350366)), 'conv4_x.17.residual_function.4.weight': ((0, 256), (3350366, 3350622)), 'conv4_x.17.residual_function.4.bias': ((0, 256), (3350622, 3350878)), 'conv4_x.17.residual_function.6.weight': ((0, 262144), (3350878, 3613022)), 'conv4_x.17.residual_function.7.weight': ((0, 1024), (3613022, 3614046)), 'conv4_x.17.residual_function.7.bias': ((0, 1024), (3614046, 3615070)), 'conv4_x.18.residual_function.0.weight': ((0, 262144), (3615070, 3877214)), 'conv4_x.18.residual_function.1.weight': ((0, 256), (3877214, 3877470)), 'conv4_x.18.residual_function.1.bias': ((0, 256), (3877470, 3877726)), 'conv4_x.18.residual_function.3.weight': ((0, 589824), (3877726, 4467550)), 'conv4_x.18.residual_function.4.weight': ((0, 256), (4467550, 4467806)), 'conv4_x.18.residual_function.4.bias': ((0, 256), (4467806, 4468062)), 'conv4_x.18.residual_function.6.weight': ((0, 262144), (4468062, 4730206)), 'conv4_x.18.residual_function.7.weight': ((0, 1024), (4730206, 4731230)), 'conv4_x.18.residual_function.7.bias': ((0, 1024), (4731230, 4732254)), 'conv4_x.19.residual_function.0.weight': ((0, 262144), (4732254, 4994398)), 'conv4_x.19.residual_function.1.weight': ((0, 256), (4994398, 4994654)), 'conv4_x.19.residual_function.1.bias': ((0, 256), (4994654, 4994910)), 'conv4_x.19.residual_function.3.weight': ((0, 589824), (4994910, 5584734)), 'conv4_x.19.residual_function.4.weight': ((0, 256), (5584734, 5584990)), 'conv4_x.19.residual_function.4.bias': ((0, 256), (5584990, 5585246)), 'conv4_x.19.residual_function.6.weight': ((0, 262144), (5585246, 5847390)), 'conv4_x.19.residual_function.7.weight': ((0, 1024), (5847390, 5848414)), 'conv4_x.19.residual_function.7.bias': ((0, 1024), (5848414, 5849438)), 'conv4_x.20.residual_function.0.weight': ((0, 262144), (5849438, 6111582)), 'conv4_x.20.residual_function.1.weight': ((0, 256), (6111582, 6111838)), 'conv4_x.20.residual_function.1.bias': ((0, 256), (6111838, 6112094)), 'conv4_x.20.residual_function.3.weight': ((0, 589824), (6112094, 6701918)), 'conv4_x.20.residual_function.4.weight': ((0, 256), (6701918, 6702174)), 'conv4_x.20.residual_function.4.bias': ((0, 256), (6702174, 6702430)), 'conv4_x.20.residual_function.6.weight': ((0, 262144), (6702430, 6964574)), 'conv4_x.20.residual_function.7.weight': ((0, 1024), (6964574, 6965598)), 'conv4_x.20.residual_function.7.bias': ((0, 1024), (6965598, 6966622)), 'conv4_x.21.residual_function.0.weight': ((0, 262144), (6966622, 7228766)), 'conv4_x.21.residual_function.1.weight': ((0, 256), (7228766, 7229022)), 'conv4_x.21.residual_function.1.bias': ((0, 256), (7229022, 7229278)), 'conv4_x.21.residual_function.3.weight': ((0, 589824), (7229278, 7819102)), 'conv4_x.21.residual_function.4.weight': ((0, 256), (7819102, 7819358)), 'conv4_x.21.residual_function.4.bias': ((0, 256), (7819358, 7819614)), 'conv4_x.21.residual_function.6.weight': ((0, 262144), (7819614, 8081758)), 'conv4_x.21.residual_function.7.weight': ((0, 1024), (8081758, 8082782)), 'conv4_x.21.residual_function.7.bias': ((0, 1024), (8082782, 8083806)), 'conv4_x.22.residual_function.0.weight': ((0, 262144), (8083806, 8345950)), 'conv4_x.22.residual_function.1.weight': ((0, 256), (8345950, 8346206)), 'conv4_x.22.residual_function.1.bias': ((0, 256), (8346206, 8346462)), 'conv4_x.22.residual_function.3.weight': ((0, 589824), (8346462, 8936286)), 'conv4_x.22.residual_function.4.weight': ((0, 256), (8936286, 8936542)), 'conv4_x.22.residual_function.4.bias': ((0, 256), (8936542, 8936798)), 'conv4_x.22.residual_function.6.weight': ((0, 262144), (8936798, 9198942)), 'conv4_x.22.residual_function.7.weight': ((0, 1024), (9198942, 9199966)), 'conv4_x.22.residual_function.7.bias': ((0, 1024), (9199966, 9200990)), 'conv4_x.23.residual_function.0.weight': ((0, 262144), (9200990, 9463134)), 'conv4_x.23.residual_function.1.weight': ((0, 256), (9463134, 9463390)), 'conv4_x.23.residual_function.1.bias': ((0, 256), (9463390, 9463646)), 'conv4_x.23.residual_function.3.weight': ((0, 259859), (9463646, 9723505))}, {'conv4_x.23.residual_function.3.weight': ((259859, 589824), (0, 329965)), 'conv4_x.23.residual_function.4.weight': ((0, 256), (329965, 330221)), 'conv4_x.23.residual_function.4.bias': ((0, 256), (330221, 330477)), 'conv4_x.23.residual_function.6.weight': ((0, 262144), (330477, 592621)), 'conv4_x.23.residual_function.7.weight': ((0, 1024), (592621, 593645)), 'conv4_x.23.residual_function.7.bias': ((0, 1024), (593645, 594669)), 'conv4_x.24.residual_function.0.weight': ((0, 262144), (594669, 856813)), 'conv4_x.24.residual_function.1.weight': ((0, 256), (856813, 857069)), 'conv4_x.24.residual_function.1.bias': ((0, 256), (857069, 857325)), 'conv4_x.24.residual_function.3.weight': ((0, 589824), (857325, 1447149)), 'conv4_x.24.residual_function.4.weight': ((0, 256), (1447149, 1447405)), 'conv4_x.24.residual_function.4.bias': ((0, 256), (1447405, 1447661)), 'conv4_x.24.residual_function.6.weight': ((0, 262144), (1447661, 1709805)), 'conv4_x.24.residual_function.7.weight': ((0, 1024), (1709805, 1710829)), 'conv4_x.24.residual_function.7.bias': ((0, 1024), (1710829, 1711853)), 'conv4_x.25.residual_function.0.weight': ((0, 262144), (1711853, 1973997)), 'conv4_x.25.residual_function.1.weight': ((0, 256), (1973997, 1974253)), 'conv4_x.25.residual_function.1.bias': ((0, 256), (1974253, 1974509)), 'conv4_x.25.residual_function.3.weight': ((0, 589824), (1974509, 2564333)), 'conv4_x.25.residual_function.4.weight': ((0, 256), (2564333, 2564589)), 'conv4_x.25.residual_function.4.bias': ((0, 256), (2564589, 2564845)), 'conv4_x.25.residual_function.6.weight': ((0, 262144), (2564845, 2826989)), 'conv4_x.25.residual_function.7.weight': ((0, 1024), (2826989, 2828013)), 'conv4_x.25.residual_function.7.bias': ((0, 1024), (2828013, 2829037)), 'conv4_x.26.residual_function.0.weight': ((0, 262144), (2829037, 3091181)), 'conv4_x.26.residual_function.1.weight': ((0, 256), (3091181, 3091437)), 'conv4_x.26.residual_function.1.bias': ((0, 256), (3091437, 3091693)), 'conv4_x.26.residual_function.3.weight': ((0, 589824), (3091693, 3681517)), 'conv4_x.26.residual_function.4.weight': ((0, 256), (3681517, 3681773)), 'conv4_x.26.residual_function.4.bias': ((0, 256), (3681773, 3682029)), 'conv4_x.26.residual_function.6.weight': ((0, 262144), (3682029, 3944173)), 'conv4_x.26.residual_function.7.weight': ((0, 1024), (3944173, 3945197)), 'conv4_x.26.residual_function.7.bias': ((0, 1024), (3945197, 3946221)), 'conv4_x.27.residual_function.0.weight': ((0, 262144), (3946221, 4208365)), 'conv4_x.27.residual_function.1.weight': ((0, 256), (4208365, 4208621)), 'conv4_x.27.residual_function.1.bias': ((0, 256), (4208621, 4208877)), 'conv4_x.27.residual_function.3.weight': ((0, 589824), (4208877, 4798701)), 'conv4_x.27.residual_function.4.weight': ((0, 256), (4798701, 4798957)), 'conv4_x.27.residual_function.4.bias': ((0, 256), (4798957, 4799213)), 'conv4_x.27.residual_function.6.weight': ((0, 262144), (4799213, 5061357)), 'conv4_x.27.residual_function.7.weight': ((0, 1024), (5061357, 5062381)), 'conv4_x.27.residual_function.7.bias': ((0, 1024), (5062381, 5063405)), 'conv4_x.28.residual_function.0.weight': ((0, 262144), (5063405, 5325549)), 'conv4_x.28.residual_function.1.weight': ((0, 256), (5325549, 5325805)), 'conv4_x.28.residual_function.1.bias': ((0, 256), (5325805, 5326061)), 'conv4_x.28.residual_function.3.weight': ((0, 589824), (5326061, 5915885)), 'conv4_x.28.residual_function.4.weight': ((0, 256), (5915885, 5916141)), 'conv4_x.28.residual_function.4.bias': ((0, 256), (5916141, 5916397)), 'conv4_x.28.residual_function.6.weight': ((0, 262144), (5916397, 6178541)), 'conv4_x.28.residual_function.7.weight': ((0, 1024), (6178541, 6179565)), 'conv4_x.28.residual_function.7.bias': ((0, 1024), (6179565, 6180589)), 'conv4_x.29.residual_function.0.weight': ((0, 262144), (6180589, 6442733)), 'conv4_x.29.residual_function.1.weight': ((0, 256), (6442733, 6442989)), 'conv4_x.29.residual_function.1.bias': ((0, 256), (6442989, 6443245)), 'conv4_x.29.residual_function.3.weight': ((0, 589824), (6443245, 7033069)), 'conv4_x.29.residual_function.4.weight': ((0, 256), (7033069, 7033325)), 'conv4_x.29.residual_function.4.bias': ((0, 256), (7033325, 7033581)), 'conv4_x.29.residual_function.6.weight': ((0, 262144), (7033581, 7295725)), 'conv4_x.29.residual_function.7.weight': ((0, 1024), (7295725, 7296749)), 'conv4_x.29.residual_function.7.bias': ((0, 1024), (7296749, 7297773)), 'conv4_x.30.residual_function.0.weight': ((0, 262144), (7297773, 7559917)), 'conv4_x.30.residual_function.1.weight': ((0, 256), (7559917, 7560173)), 'conv4_x.30.residual_function.1.bias': ((0, 256), (7560173, 7560429)), 'conv4_x.30.residual_function.3.weight': ((0, 589824), (7560429, 8150253)), 'conv4_x.30.residual_function.4.weight': ((0, 256), (8150253, 8150509)), 'conv4_x.30.residual_function.4.bias': ((0, 256), (8150509, 8150765)), 'conv4_x.30.residual_function.6.weight': ((0, 262144), (8150765, 8412909)), 'conv4_x.30.residual_function.7.weight': ((0, 1024), (8412909, 8413933)), 'conv4_x.30.residual_function.7.bias': ((0, 1024), (8413933, 8414957)), 'conv4_x.31.residual_function.0.weight': ((0, 262144), (8414957, 8677101)), 'conv4_x.31.residual_function.1.weight': ((0, 256), (8677101, 8677357)), 'conv4_x.31.residual_function.1.bias': ((0, 256), (8677357, 8677613)), 'conv4_x.31.residual_function.3.weight': ((0, 589824), (8677613, 9267437)), 'conv4_x.31.residual_function.4.weight': ((0, 256), (9267437, 9267693)), 'conv4_x.31.residual_function.4.bias': ((0, 256), (9267693, 9267949)), 'conv4_x.31.residual_function.6.weight': ((0, 262144), (9267949, 9530093)), 'conv4_x.31.residual_function.7.weight': ((0, 1024), (9530093, 9531117)), 'conv4_x.31.residual_function.7.bias': ((0, 1024), (9531117, 9532141)), 'conv4_x.32.residual_function.0.weight': ((0, 191364), (9532141, 9723505))}, {'conv4_x.32.residual_function.0.weight': ((191364, 262144), (0, 70780)), 'conv4_x.32.residual_function.1.weight': ((0, 256), (70780, 71036)), 'conv4_x.32.residual_function.1.bias': ((0, 256), (71036, 71292)), 'conv4_x.32.residual_function.3.weight': ((0, 589824), (71292, 661116)), 'conv4_x.32.residual_function.4.weight': ((0, 256), (661116, 661372)), 'conv4_x.32.residual_function.4.bias': ((0, 256), (661372, 661628)), 'conv4_x.32.residual_function.6.weight': ((0, 262144), (661628, 923772)), 'conv4_x.32.residual_function.7.weight': ((0, 1024), (923772, 924796)), 'conv4_x.32.residual_function.7.bias': ((0, 1024), (924796, 925820)), 'conv4_x.33.residual_function.0.weight': ((0, 262144), (925820, 1187964)), 'conv4_x.33.residual_function.1.weight': ((0, 256), (1187964, 1188220)), 'conv4_x.33.residual_function.1.bias': ((0, 256), (1188220, 1188476)), 'conv4_x.33.residual_function.3.weight': ((0, 589824), (1188476, 1778300)), 'conv4_x.33.residual_function.4.weight': ((0, 256), (1778300, 1778556)), 'conv4_x.33.residual_function.4.bias': ((0, 256), (1778556, 1778812)), 'conv4_x.33.residual_function.6.weight': ((0, 262144), (1778812, 2040956)), 'conv4_x.33.residual_function.7.weight': ((0, 1024), (2040956, 2041980)), 'conv4_x.33.residual_function.7.bias': ((0, 1024), (2041980, 2043004)), 'conv4_x.34.residual_function.0.weight': ((0, 262144), (2043004, 2305148)), 'conv4_x.34.residual_function.1.weight': ((0, 256), (2305148, 2305404)), 'conv4_x.34.residual_function.1.bias': ((0, 256), (2305404, 2305660)), 'conv4_x.34.residual_function.3.weight': ((0, 589824), (2305660, 2895484)), 'conv4_x.34.residual_function.4.weight': ((0, 256), (2895484, 2895740)), 'conv4_x.34.residual_function.4.bias': ((0, 256), (2895740, 2895996)), 'conv4_x.34.residual_function.6.weight': ((0, 262144), (2895996, 3158140)), 'conv4_x.34.residual_function.7.weight': ((0, 1024), (3158140, 3159164)), 'conv4_x.34.residual_function.7.bias': ((0, 1024), (3159164, 3160188)), 'conv4_x.35.residual_function.0.weight': ((0, 262144), (3160188, 3422332)), 'conv4_x.35.residual_function.1.weight': ((0, 256), (3422332, 3422588)), 'conv4_x.35.residual_function.1.bias': ((0, 256), (3422588, 3422844)), 'conv4_x.35.residual_function.3.weight': ((0, 589824), (3422844, 4012668)), 'conv4_x.35.residual_function.4.weight': ((0, 256), (4012668, 4012924)), 'conv4_x.35.residual_function.4.bias': ((0, 256), (4012924, 4013180)), 'conv4_x.35.residual_function.6.weight': ((0, 262144), (4013180, 4275324)), 'conv4_x.35.residual_function.7.weight': ((0, 1024), (4275324, 4276348)), 'conv4_x.35.residual_function.7.bias': ((0, 1024), (4276348, 4277372)), 'conv5_x.0.residual_function.0.weight': ((0, 524288), (4277372, 4801660)), 'conv5_x.0.residual_function.1.weight': ((0, 512), (4801660, 4802172)), 'conv5_x.0.residual_function.1.bias': ((0, 512), (4802172, 4802684)), 'conv5_x.0.residual_function.3.weight': ((0, 2359296), (4802684, 7161980)), 'conv5_x.0.residual_function.4.weight': ((0, 512), (7161980, 7162492)), 'conv5_x.0.residual_function.4.bias': ((0, 512), (7162492, 7163004)), 'conv5_x.0.residual_function.6.weight': ((0, 1048576), (7163004, 8211580)), 'conv5_x.0.residual_function.7.weight': ((0, 2048), (8211580, 8213628)), 'conv5_x.0.residual_function.7.bias': ((0, 2048), (8213628, 8215676)), 'conv5_x.0.shortcut.0.weight': ((0, 1507829), (8215676, 9723505))}, {'conv5_x.0.shortcut.0.weight': ((1507829, 2097152), (0, 589323)), 'conv5_x.0.shortcut.1.weight': ((0, 2048), (589323, 591371)), 'conv5_x.0.shortcut.1.bias': ((0, 2048), (591371, 593419)), 'conv5_x.1.residual_function.0.weight': ((0, 1048576), (593419, 1641995)), 'conv5_x.1.residual_function.1.weight': ((0, 512), (1641995, 1642507)), 'conv5_x.1.residual_function.1.bias': ((0, 512), (1642507, 1643019)), 'conv5_x.1.residual_function.3.weight': ((0, 2359296), (1643019, 4002315)), 'conv5_x.1.residual_function.4.weight': ((0, 512), (4002315, 4002827)), 'conv5_x.1.residual_function.4.bias': ((0, 512), (4002827, 4003339)), 'conv5_x.1.residual_function.6.weight': ((0, 1048576), (4003339, 5051915)), 'conv5_x.1.residual_function.7.weight': ((0, 2048), (5051915, 5053963)), 'conv5_x.1.residual_function.7.bias': ((0, 2048), (5053963, 5056011)), 'conv5_x.2.residual_function.0.weight': ((0, 1048576), (5056011, 6104587)), 'conv5_x.2.residual_function.1.weight': ((0, 512), (6104587, 6105099)), 'conv5_x.2.residual_function.1.bias': ((0, 512), (6105099, 6105611)), 'conv5_x.2.residual_function.3.weight': ((0, 2359296), (6105611, 8464907)), 'conv5_x.2.residual_function.4.weight': ((0, 512), (8464907, 8465419)), 'conv5_x.2.residual_function.4.bias': ((0, 512), (8465419, 8465931)), 'conv5_x.2.residual_function.6.weight': ((0, 1048576), (8465931, 9514507)), 'conv5_x.2.residual_function.7.weight': ((0, 2048), (9514507, 9516555)), 'conv5_x.2.residual_function.7.bias': ((0, 2048), (9516555, 9518603)), 'fc.weight': ((0, 204800), (9518603, 9723403)), 'fc.bias': ((0, 100), (9723403, 9723503))}]
2025-06-08 08:53:27,834 [allreducer.py:660] INFO spar_key_groupidx_maps: {'conv1.0.weight': [0], 'conv1.1.weight': [0], 'conv1.1.bias': [0], 'conv2_x.0.residual_function.0.weight': [0], 'conv2_x.0.residual_function.1.weight': [0], 'conv2_x.0.residual_function.1.bias': [0], 'conv2_x.0.residual_function.3.weight': [0], 'conv2_x.0.residual_function.4.weight': [0], 'conv2_x.0.residual_function.4.bias': [0], 'conv2_x.0.residual_function.6.weight': [0], 'conv2_x.0.residual_function.7.weight': [0], 'conv2_x.0.residual_function.7.bias': [0], 'conv2_x.0.shortcut.0.weight': [0], 'conv2_x.0.shortcut.1.weight': [0], 'conv2_x.0.shortcut.1.bias': [0], 'conv2_x.1.residual_function.0.weight': [0], 'conv2_x.1.residual_function.1.weight': [0], 'conv2_x.1.residual_function.1.bias': [0], 'conv2_x.1.residual_function.3.weight': [0], 'conv2_x.1.residual_function.4.weight': [0], 'conv2_x.1.residual_function.4.bias': [0], 'conv2_x.1.residual_function.6.weight': [0], 'conv2_x.1.residual_function.7.weight': [0], 'conv2_x.1.residual_function.7.bias': [0], 'conv2_x.2.residual_function.0.weight': [0], 'conv2_x.2.residual_function.1.weight': [0], 'conv2_x.2.residual_function.1.bias': [0], 'conv2_x.2.residual_function.3.weight': [0], 'conv2_x.2.residual_function.4.weight': [0], 'conv2_x.2.residual_function.4.bias': [0], 'conv2_x.2.residual_function.6.weight': [0], 'conv2_x.2.residual_function.7.weight': [0], 'conv2_x.2.residual_function.7.bias': [0], 'conv3_x.0.residual_function.0.weight': [0], 'conv3_x.0.residual_function.1.weight': [0], 'conv3_x.0.residual_function.1.bias': [0], 'conv3_x.0.residual_function.3.weight': [0], 'conv3_x.0.residual_function.4.weight': [0], 'conv3_x.0.residual_function.4.bias': [0], 'conv3_x.0.residual_function.6.weight': [0], 'conv3_x.0.residual_function.7.weight': [0], 'conv3_x.0.residual_function.7.bias': [0], 'conv3_x.0.shortcut.0.weight': [0], 'conv3_x.0.shortcut.1.weight': [0], 'conv3_x.0.shortcut.1.bias': [0], 'conv3_x.1.residual_function.0.weight': [0], 'conv3_x.1.residual_function.1.weight': [0], 'conv3_x.1.residual_function.1.bias': [0], 'conv3_x.1.residual_function.3.weight': [0], 'conv3_x.1.residual_function.4.weight': [0], 'conv3_x.1.residual_function.4.bias': [0], 'conv3_x.1.residual_function.6.weight': [0], 'conv3_x.1.residual_function.7.weight': [0], 'conv3_x.1.residual_function.7.bias': [0], 'conv3_x.2.residual_function.0.weight': [0], 'conv3_x.2.residual_function.1.weight': [0], 'conv3_x.2.residual_function.1.bias': [0], 'conv3_x.2.residual_function.3.weight': [0], 'conv3_x.2.residual_function.4.weight': [0], 'conv3_x.2.residual_function.4.bias': [0], 'conv3_x.2.residual_function.6.weight': [0], 'conv3_x.2.residual_function.7.weight': [0], 'conv3_x.2.residual_function.7.bias': [0], 'conv3_x.3.residual_function.0.weight': [0], 'conv3_x.3.residual_function.1.weight': [0], 'conv3_x.3.residual_function.1.bias': [0], 'conv3_x.3.residual_function.3.weight': [0], 'conv3_x.3.residual_function.4.weight': [0], 'conv3_x.3.residual_function.4.bias': [0], 'conv3_x.3.residual_function.6.weight': [0], 'conv3_x.3.residual_function.7.weight': [0], 'conv3_x.3.residual_function.7.bias': [0], 'conv3_x.4.residual_function.0.weight': [0], 'conv3_x.4.residual_function.1.weight': [0], 'conv3_x.4.residual_function.1.bias': [0], 'conv3_x.4.residual_function.3.weight': [0], 'conv3_x.4.residual_function.4.weight': [0], 'conv3_x.4.residual_function.4.bias': [0], 'conv3_x.4.residual_function.6.weight': [0], 'conv3_x.4.residual_function.7.weight': [0], 'conv3_x.4.residual_function.7.bias': [0], 'conv3_x.5.residual_function.0.weight': [0], 'conv3_x.5.residual_function.1.weight': [0], 'conv3_x.5.residual_function.1.bias': [0], 'conv3_x.5.residual_function.3.weight': [0], 'conv3_x.5.residual_function.4.weight': [0], 'conv3_x.5.residual_function.4.bias': [0], 'conv3_x.5.residual_function.6.weight': [0], 'conv3_x.5.residual_function.7.weight': [0], 'conv3_x.5.residual_function.7.bias': [0], 'conv3_x.6.residual_function.0.weight': [0], 'conv3_x.6.residual_function.1.weight': [0], 'conv3_x.6.residual_function.1.bias': [0], 'conv3_x.6.residual_function.3.weight': [0], 'conv3_x.6.residual_function.4.weight': [0], 'conv3_x.6.residual_function.4.bias': [0], 'conv3_x.6.residual_function.6.weight': [0], 'conv3_x.6.residual_function.7.weight': [0], 'conv3_x.6.residual_function.7.bias': [0], 'conv3_x.7.residual_function.0.weight': [0], 'conv3_x.7.residual_function.1.weight': [0], 'conv3_x.7.residual_function.1.bias': [0], 'conv3_x.7.residual_function.3.weight': [0], 'conv3_x.7.residual_function.4.weight': [0], 'conv3_x.7.residual_function.4.bias': [0], 'conv3_x.7.residual_function.6.weight': [0], 'conv3_x.7.residual_function.7.weight': [0], 'conv3_x.7.residual_function.7.bias': [0], 'conv4_x.0.residual_function.0.weight': [0], 'conv4_x.0.residual_function.1.weight': [0], 'conv4_x.0.residual_function.1.bias': [0], 'conv4_x.0.residual_function.3.weight': [0], 'conv4_x.0.residual_function.4.weight': [0], 'conv4_x.0.residual_function.4.bias': [0], 'conv4_x.0.residual_function.6.weight': [0], 'conv4_x.0.residual_function.7.weight': [0], 'conv4_x.0.residual_function.7.bias': [0], 'conv4_x.0.shortcut.0.weight': [0], 'conv4_x.0.shortcut.1.weight': [0], 'conv4_x.0.shortcut.1.bias': [0], 'conv4_x.1.residual_function.0.weight': [0], 'conv4_x.1.residual_function.1.weight': [0], 'conv4_x.1.residual_function.1.bias': [0], 'conv4_x.1.residual_function.3.weight': [0], 'conv4_x.1.residual_function.4.weight': [0], 'conv4_x.1.residual_function.4.bias': [0], 'conv4_x.1.residual_function.6.weight': [0], 'conv4_x.1.residual_function.7.weight': [0], 'conv4_x.1.residual_function.7.bias': [0], 'conv4_x.2.residual_function.0.weight': [0], 'conv4_x.2.residual_function.1.weight': [0], 'conv4_x.2.residual_function.1.bias': [0], 'conv4_x.2.residual_function.3.weight': [0], 'conv4_x.2.residual_function.4.weight': [0], 'conv4_x.2.residual_function.4.bias': [0], 'conv4_x.2.residual_function.6.weight': [0], 'conv4_x.2.residual_function.7.weight': [0], 'conv4_x.2.residual_function.7.bias': [0], 'conv4_x.3.residual_function.0.weight': [0], 'conv4_x.3.residual_function.1.weight': [0], 'conv4_x.3.residual_function.1.bias': [0], 'conv4_x.3.residual_function.3.weight': [0], 'conv4_x.3.residual_function.4.weight': [0], 'conv4_x.3.residual_function.4.bias': [0], 'conv4_x.3.residual_function.6.weight': [0], 'conv4_x.3.residual_function.7.weight': [0], 'conv4_x.3.residual_function.7.bias': [0], 'conv4_x.4.residual_function.0.weight': [0], 'conv4_x.4.residual_function.1.weight': [0], 'conv4_x.4.residual_function.1.bias': [0], 'conv4_x.4.residual_function.3.weight': [0], 'conv4_x.4.residual_function.4.weight': [0], 'conv4_x.4.residual_function.4.bias': [0], 'conv4_x.4.residual_function.6.weight': [0], 'conv4_x.4.residual_function.7.weight': [0], 'conv4_x.4.residual_function.7.bias': [0], 'conv4_x.5.residual_function.0.weight': [0], 'conv4_x.5.residual_function.1.weight': [0], 'conv4_x.5.residual_function.1.bias': [0], 'conv4_x.5.residual_function.3.weight': [0], 'conv4_x.5.residual_function.4.weight': [0], 'conv4_x.5.residual_function.4.bias': [0], 'conv4_x.5.residual_function.6.weight': [0], 'conv4_x.5.residual_function.7.weight': [0], 'conv4_x.5.residual_function.7.bias': [0], 'conv4_x.6.residual_function.0.weight': [0, 1], 'conv4_x.6.residual_function.1.weight': [1], 'conv4_x.6.residual_function.1.bias': [1], 'conv4_x.6.residual_function.3.weight': [1], 'conv4_x.6.residual_function.4.weight': [1], 'conv4_x.6.residual_function.4.bias': [1], 'conv4_x.6.residual_function.6.weight': [1], 'conv4_x.6.residual_function.7.weight': [1], 'conv4_x.6.residual_function.7.bias': [1], 'conv4_x.7.residual_function.0.weight': [1], 'conv4_x.7.residual_function.1.weight': [1], 'conv4_x.7.residual_function.1.bias': [1], 'conv4_x.7.residual_function.3.weight': [1], 'conv4_x.7.residual_function.4.weight': [1], 'conv4_x.7.residual_function.4.bias': [1], 'conv4_x.7.residual_function.6.weight': [1], 'conv4_x.7.residual_function.7.weight': [1], 'conv4_x.7.residual_function.7.bias': [1], 'conv4_x.8.residual_function.0.weight': [1], 'conv4_x.8.residual_function.1.weight': [1], 'conv4_x.8.residual_function.1.bias': [1], 'conv4_x.8.residual_function.3.weight': [1], 'conv4_x.8.residual_function.4.weight': [1], 'conv4_x.8.residual_function.4.bias': [1], 'conv4_x.8.residual_function.6.weight': [1], 'conv4_x.8.residual_function.7.weight': [1], 'conv4_x.8.residual_function.7.bias': [1], 'conv4_x.9.residual_function.0.weight': [1], 'conv4_x.9.residual_function.1.weight': [1], 'conv4_x.9.residual_function.1.bias': [1], 'conv4_x.9.residual_function.3.weight': [1], 'conv4_x.9.residual_function.4.weight': [1], 'conv4_x.9.residual_function.4.bias': [1], 'conv4_x.9.residual_function.6.weight': [1], 'conv4_x.9.residual_function.7.weight': [1], 'conv4_x.9.residual_function.7.bias': [1], 'conv4_x.10.residual_function.0.weight': [1], 'conv4_x.10.residual_function.1.weight': [1], 'conv4_x.10.residual_function.1.bias': [1], 'conv4_x.10.residual_function.3.weight': [1], 'conv4_x.10.residual_function.4.weight': [1], 'conv4_x.10.residual_function.4.bias': [1], 'conv4_x.10.residual_function.6.weight': [1], 'conv4_x.10.residual_function.7.weight': [1], 'conv4_x.10.residual_function.7.bias': [1], 'conv4_x.11.residual_function.0.weight': [1], 'conv4_x.11.residual_function.1.weight': [1], 'conv4_x.11.residual_function.1.bias': [1], 'conv4_x.11.residual_function.3.weight': [1], 'conv4_x.11.residual_function.4.weight': [1], 'conv4_x.11.residual_function.4.bias': [1], 'conv4_x.11.residual_function.6.weight': [1], 'conv4_x.11.residual_function.7.weight': [1], 'conv4_x.11.residual_function.7.bias': [1], 'conv4_x.12.residual_function.0.weight': [1], 'conv4_x.12.residual_function.1.weight': [1], 'conv4_x.12.residual_function.1.bias': [1], 'conv4_x.12.residual_function.3.weight': [1], 'conv4_x.12.residual_function.4.weight': [1], 'conv4_x.12.residual_function.4.bias': [1], 'conv4_x.12.residual_function.6.weight': [1], 'conv4_x.12.residual_function.7.weight': [1], 'conv4_x.12.residual_function.7.bias': [1], 'conv4_x.13.residual_function.0.weight': [1], 'conv4_x.13.residual_function.1.weight': [1], 'conv4_x.13.residual_function.1.bias': [1], 'conv4_x.13.residual_function.3.weight': [1], 'conv4_x.13.residual_function.4.weight': [1], 'conv4_x.13.residual_function.4.bias': [1], 'conv4_x.13.residual_function.6.weight': [1], 'conv4_x.13.residual_function.7.weight': [1], 'conv4_x.13.residual_function.7.bias': [1], 'conv4_x.14.residual_function.0.weight': [1], 'conv4_x.14.residual_function.1.weight': [1], 'conv4_x.14.residual_function.1.bias': [1], 'conv4_x.14.residual_function.3.weight': [1], 'conv4_x.14.residual_function.4.weight': [1], 'conv4_x.14.residual_function.4.bias': [1], 'conv4_x.14.residual_function.6.weight': [1, 2], 'conv4_x.14.residual_function.7.weight': [2], 'conv4_x.14.residual_function.7.bias': [2], 'conv4_x.15.residual_function.0.weight': [2], 'conv4_x.15.residual_function.1.weight': [2], 'conv4_x.15.residual_function.1.bias': [2], 'conv4_x.15.residual_function.3.weight': [2], 'conv4_x.15.residual_function.4.weight': [2], 'conv4_x.15.residual_function.4.bias': [2], 'conv4_x.15.residual_function.6.weight': [2], 'conv4_x.15.residual_function.7.weight': [2], 'conv4_x.15.residual_function.7.bias': [2], 'conv4_x.16.residual_function.0.weight': [2], 'conv4_x.16.residual_function.1.weight': [2], 'conv4_x.16.residual_function.1.bias': [2], 'conv4_x.16.residual_function.3.weight': [2], 'conv4_x.16.residual_function.4.weight': [2], 'conv4_x.16.residual_function.4.bias': [2], 'conv4_x.16.residual_function.6.weight': [2], 'conv4_x.16.residual_function.7.weight': [2], 'conv4_x.16.residual_function.7.bias': [2], 'conv4_x.17.residual_function.0.weight': [2], 'conv4_x.17.residual_function.1.weight': [2], 'conv4_x.17.residual_function.1.bias': [2], 'conv4_x.17.residual_function.3.weight': [2], 'conv4_x.17.residual_function.4.weight': [2], 'conv4_x.17.residual_function.4.bias': [2], 'conv4_x.17.residual_function.6.weight': [2], 'conv4_x.17.residual_function.7.weight': [2], 'conv4_x.17.residual_function.7.bias': [2], 'conv4_x.18.residual_function.0.weight': [2], 'conv4_x.18.residual_function.1.weight': [2], 'conv4_x.18.residual_function.1.bias': [2], 'conv4_x.18.residual_function.3.weight': [2], 'conv4_x.18.residual_function.4.weight': [2], 'conv4_x.18.residual_function.4.bias': [2], 'conv4_x.18.residual_function.6.weight': [2], 'conv4_x.18.residual_function.7.weight': [2], 'conv4_x.18.residual_function.7.bias': [2], 'conv4_x.19.residual_function.0.weight': [2], 'conv4_x.19.residual_function.1.weight': [2], 'conv4_x.19.residual_function.1.bias': [2], 'conv4_x.19.residual_function.3.weight': [2], 'conv4_x.19.residual_function.4.weight': [2], 'conv4_x.19.residual_function.4.bias': [2], 'conv4_x.19.residual_function.6.weight': [2], 'conv4_x.19.residual_function.7.weight': [2], 'conv4_x.19.residual_function.7.bias': [2], 'conv4_x.20.residual_function.0.weight': [2], 'conv4_x.20.residual_function.1.weight': [2], 'conv4_x.20.residual_function.1.bias': [2], 'conv4_x.20.residual_function.3.weight': [2], 'conv4_x.20.residual_function.4.weight': [2], 'conv4_x.20.residual_function.4.bias': [2], 'conv4_x.20.residual_function.6.weight': [2], 'conv4_x.20.residual_function.7.weight': [2], 'conv4_x.20.residual_function.7.bias': [2], 'conv4_x.21.residual_function.0.weight': [2], 'conv4_x.21.residual_function.1.weight': [2], 'conv4_x.21.residual_function.1.bias': [2], 'conv4_x.21.residual_function.3.weight': [2], 'conv4_x.21.residual_function.4.weight': [2], 'conv4_x.21.residual_function.4.bias': [2], 'conv4_x.21.residual_function.6.weight': [2], 'conv4_x.21.residual_function.7.weight': [2], 'conv4_x.21.residual_function.7.bias': [2], 'conv4_x.22.residual_function.0.weight': [2], 'conv4_x.22.residual_function.1.weight': [2], 'conv4_x.22.residual_function.1.bias': [2], 'conv4_x.22.residual_function.3.weight': [2], 'conv4_x.22.residual_function.4.weight': [2], 'conv4_x.22.residual_function.4.bias': [2], 'conv4_x.22.residual_function.6.weight': [2], 'conv4_x.22.residual_function.7.weight': [2], 'conv4_x.22.residual_function.7.bias': [2], 'conv4_x.23.residual_function.0.weight': [2], 'conv4_x.23.residual_function.1.weight': [2], 'conv4_x.23.residual_function.1.bias': [2], 'conv4_x.23.residual_function.3.weight': [2, 3], 'conv4_x.23.residual_function.4.weight': [3], 'conv4_x.23.residual_function.4.bias': [3], 'conv4_x.23.residual_function.6.weight': [3], 'conv4_x.23.residual_function.7.weight': [3], 'conv4_x.23.residual_function.7.bias': [3], 'conv4_x.24.residual_function.0.weight': [3], 'conv4_x.24.residual_function.1.weight': [3], 'conv4_x.24.residual_function.1.bias': [3], 'conv4_x.24.residual_function.3.weight': [3], 'conv4_x.24.residual_function.4.weight': [3], 'conv4_x.24.residual_function.4.bias': [3], 'conv4_x.24.residual_function.6.weight': [3], 'conv4_x.24.residual_function.7.weight': [3], 'conv4_x.24.residual_function.7.bias': [3], 'conv4_x.25.residual_function.0.weight': [3], 'conv4_x.25.residual_function.1.weight': [3], 'conv4_x.25.residual_function.1.bias': [3], 'conv4_x.25.residual_function.3.weight': [3], 'conv4_x.25.residual_function.4.weight': [3], 'conv4_x.25.residual_function.4.bias': [3], 'conv4_x.25.residual_function.6.weight': [3], 'conv4_x.25.residual_function.7.weight': [3], 'conv4_x.25.residual_function.7.bias': [3], 'conv4_x.26.residual_function.0.weight': [3], 'conv4_x.26.residual_function.1.weight': [3], 'conv4_x.26.residual_function.1.bias': [3], 'conv4_x.26.residual_function.3.weight': [3], 'conv4_x.26.residual_function.4.weight': [3], 'conv4_x.26.residual_function.4.bias': [3], 'conv4_x.26.residual_function.6.weight': [3], 'conv4_x.26.residual_function.7.weight': [3], 'conv4_x.26.residual_function.7.bias': [3], 'conv4_x.27.residual_function.0.weight': [3], 'conv4_x.27.residual_function.1.weight': [3], 'conv4_x.27.residual_function.1.bias': [3], 'conv4_x.27.residual_function.3.weight': [3], 'conv4_x.27.residual_function.4.weight': [3], 'conv4_x.27.residual_function.4.bias': [3], 'conv4_x.27.residual_function.6.weight': [3], 'conv4_x.27.residual_function.7.weight': [3], 'conv4_x.27.residual_function.7.bias': [3], 'conv4_x.28.residual_function.0.weight': [3], 'conv4_x.28.residual_function.1.weight': [3], 'conv4_x.28.residual_function.1.bias': [3], 'conv4_x.28.residual_function.3.weight': [3], 'conv4_x.28.residual_function.4.weight': [3], 'conv4_x.28.residual_function.4.bias': [3], 'conv4_x.28.residual_function.6.weight': [3], 'conv4_x.28.residual_function.7.weight': [3], 'conv4_x.28.residual_function.7.bias': [3], 'conv4_x.29.residual_function.0.weight': [3], 'conv4_x.29.residual_function.1.weight': [3], 'conv4_x.29.residual_function.1.bias': [3], 'conv4_x.29.residual_function.3.weight': [3], 'conv4_x.29.residual_function.4.weight': [3], 'conv4_x.29.residual_function.4.bias': [3], 'conv4_x.29.residual_function.6.weight': [3], 'conv4_x.29.residual_function.7.weight': [3], 'conv4_x.29.residual_function.7.bias': [3], 'conv4_x.30.residual_function.0.weight': [3], 'conv4_x.30.residual_function.1.weight': [3], 'conv4_x.30.residual_function.1.bias': [3], 'conv4_x.30.residual_function.3.weight': [3], 'conv4_x.30.residual_function.4.weight': [3], 'conv4_x.30.residual_function.4.bias': [3], 'conv4_x.30.residual_function.6.weight': [3], 'conv4_x.30.residual_function.7.weight': [3], 'conv4_x.30.residual_function.7.bias': [3], 'conv4_x.31.residual_function.0.weight': [3], 'conv4_x.31.residual_function.1.weight': [3], 'conv4_x.31.residual_function.1.bias': [3], 'conv4_x.31.residual_function.3.weight': [3], 'conv4_x.31.residual_function.4.weight': [3], 'conv4_x.31.residual_function.4.bias': [3], 'conv4_x.31.residual_function.6.weight': [3], 'conv4_x.31.residual_function.7.weight': [3], 'conv4_x.31.residual_function.7.bias': [3], 'conv4_x.32.residual_function.0.weight': [3, 4], 'conv4_x.32.residual_function.1.weight': [4], 'conv4_x.32.residual_function.1.bias': [4], 'conv4_x.32.residual_function.3.weight': [4], 'conv4_x.32.residual_function.4.weight': [4], 'conv4_x.32.residual_function.4.bias': [4], 'conv4_x.32.residual_function.6.weight': [4], 'conv4_x.32.residual_function.7.weight': [4], 'conv4_x.32.residual_function.7.bias': [4], 'conv4_x.33.residual_function.0.weight': [4], 'conv4_x.33.residual_function.1.weight': [4], 'conv4_x.33.residual_function.1.bias': [4], 'conv4_x.33.residual_function.3.weight': [4], 'conv4_x.33.residual_function.4.weight': [4], 'conv4_x.33.residual_function.4.bias': [4], 'conv4_x.33.residual_function.6.weight': [4], 'conv4_x.33.residual_function.7.weight': [4], 'conv4_x.33.residual_function.7.bias': [4], 'conv4_x.34.residual_function.0.weight': [4], 'conv4_x.34.residual_function.1.weight': [4], 'conv4_x.34.residual_function.1.bias': [4], 'conv4_x.34.residual_function.3.weight': [4], 'conv4_x.34.residual_function.4.weight': [4], 'conv4_x.34.residual_function.4.bias': [4], 'conv4_x.34.residual_function.6.weight': [4], 'conv4_x.34.residual_function.7.weight': [4], 'conv4_x.34.residual_function.7.bias': [4], 'conv4_x.35.residual_function.0.weight': [4], 'conv4_x.35.residual_function.1.weight': [4], 'conv4_x.35.residual_function.1.bias': [4], 'conv4_x.35.residual_function.3.weight': [4], 'conv4_x.35.residual_function.4.weight': [4], 'conv4_x.35.residual_function.4.bias': [4], 'conv4_x.35.residual_function.6.weight': [4], 'conv4_x.35.residual_function.7.weight': [4], 'conv4_x.35.residual_function.7.bias': [4], 'conv5_x.0.residual_function.0.weight': [4], 'conv5_x.0.residual_function.1.weight': [4], 'conv5_x.0.residual_function.1.bias': [4], 'conv5_x.0.residual_function.3.weight': [4], 'conv5_x.0.residual_function.4.weight': [4], 'conv5_x.0.residual_function.4.bias': [4], 'conv5_x.0.residual_function.6.weight': [4], 'conv5_x.0.residual_function.7.weight': [4], 'conv5_x.0.residual_function.7.bias': [4], 'conv5_x.0.shortcut.0.weight': [4, 5], 'conv5_x.0.shortcut.1.weight': [5], 'conv5_x.0.shortcut.1.bias': [5], 'conv5_x.1.residual_function.0.weight': [5], 'conv5_x.1.residual_function.1.weight': [5], 'conv5_x.1.residual_function.1.bias': [5], 'conv5_x.1.residual_function.3.weight': [5], 'conv5_x.1.residual_function.4.weight': [5], 'conv5_x.1.residual_function.4.bias': [5], 'conv5_x.1.residual_function.6.weight': [5], 'conv5_x.1.residual_function.7.weight': [5], 'conv5_x.1.residual_function.7.bias': [5], 'conv5_x.2.residual_function.0.weight': [5], 'conv5_x.2.residual_function.1.weight': [5], 'conv5_x.2.residual_function.1.bias': [5], 'conv5_x.2.residual_function.3.weight': [5], 'conv5_x.2.residual_function.4.weight': [5], 'conv5_x.2.residual_function.4.bias': [5], 'conv5_x.2.residual_function.6.weight': [5], 'conv5_x.2.residual_function.7.weight': [5], 'conv5_x.2.residual_function.7.bias': [5], 'fc.weight': [5], 'fc.bias': [5]}
2025-06-08 08:53:27,835 [allreducer.py:985] INFO Allreducer thread started ...
2025-06-08 08:53:27,835 [main_trainer.py:131] INFO Start training ....
2025-06-08 08:58:41,129 [main_trainer.py:302] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-08 08:58:41,129 [main_trainer.py:303] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-08 08:58:45,962 [dl_trainer.py:299] INFO target_sparsities: [1.0]
2025-06-08 08:58:45,963 [dl_trainer.py:311] INFO num_batches_per_epoch: 520
2025-06-08 08:58:45,963 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-08 08:58:47,061 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-08 08:58:47,110 [allreducer.py:284] INFO density: 0.010000
2025-06-08 08:58:47,110 [allreducer.py:285] INFO threshold scale: 1.092000
2025-06-08 08:58:47,112 [allreducer.py:674] INFO key_groupidx_maps: {'fc.bias': 0, 'fc.weight': 0, 'conv5_x.2.residual_function.7.bias': 0, 'conv5_x.2.residual_function.7.weight': 0, 'conv5_x.2.residual_function.6.weight': 0, 'conv5_x.2.residual_function.4.bias': 0, 'conv5_x.2.residual_function.4.weight': 0, 'conv5_x.2.residual_function.3.weight': 0, 'conv5_x.2.residual_function.1.bias': 0, 'conv5_x.2.residual_function.1.weight': 0, 'conv5_x.2.residual_function.0.weight': 0, 'conv5_x.1.residual_function.7.bias': 0, 'conv5_x.1.residual_function.7.weight': 0, 'conv5_x.1.residual_function.6.weight': 0, 'conv5_x.1.residual_function.4.bias': 0, 'conv5_x.1.residual_function.4.weight': 0, 'conv5_x.1.residual_function.3.weight': 0, 'conv5_x.1.residual_function.1.bias': 0, 'conv5_x.1.residual_function.1.weight': 0, 'conv5_x.1.residual_function.0.weight': 0, 'conv5_x.0.shortcut.1.bias': 0, 'conv5_x.0.shortcut.1.weight': 0, 'conv5_x.0.shortcut.0.weight': 0, 'conv5_x.0.residual_function.7.bias': 0, 'conv5_x.0.residual_function.7.weight': 0, 'conv5_x.0.residual_function.6.weight': 0, 'conv5_x.0.residual_function.4.bias': 0, 'conv5_x.0.residual_function.4.weight': 0, 'conv5_x.0.residual_function.3.weight': 0, 'conv5_x.0.residual_function.1.bias': 0, 'conv5_x.0.residual_function.1.weight': 0, 'conv5_x.0.residual_function.0.weight': 0, 'conv4_x.35.residual_function.7.bias': 0, 'conv4_x.35.residual_function.7.weight': 0, 'conv4_x.35.residual_function.6.weight': 0, 'conv4_x.35.residual_function.4.bias': 0, 'conv4_x.35.residual_function.4.weight': 0, 'conv4_x.35.residual_function.3.weight': 0, 'conv4_x.35.residual_function.1.bias': 0, 'conv4_x.35.residual_function.1.weight': 0, 'conv4_x.35.residual_function.0.weight': 0, 'conv4_x.34.residual_function.7.bias': 0, 'conv4_x.34.residual_function.7.weight': 0, 'conv4_x.34.residual_function.6.weight': 0, 'conv4_x.34.residual_function.4.bias': 0, 'conv4_x.34.residual_function.4.weight': 0, 'conv4_x.34.residual_function.3.weight': 0, 'conv4_x.34.residual_function.1.bias': 0, 'conv4_x.34.residual_function.1.weight': 0, 'conv4_x.34.residual_function.0.weight': 0, 'conv4_x.33.residual_function.7.bias': 0, 'conv4_x.33.residual_function.7.weight': 0, 'conv4_x.33.residual_function.6.weight': 0, 'conv4_x.33.residual_function.4.bias': 0, 'conv4_x.33.residual_function.4.weight': 0, 'conv4_x.33.residual_function.3.weight': 0, 'conv4_x.33.residual_function.1.bias': 0, 'conv4_x.33.residual_function.1.weight': 0, 'conv4_x.33.residual_function.0.weight': 0, 'conv4_x.32.residual_function.7.bias': 0, 'conv4_x.32.residual_function.7.weight': 0, 'conv4_x.32.residual_function.6.weight': 0, 'conv4_x.32.residual_function.4.bias': 0, 'conv4_x.32.residual_function.4.weight': 0, 'conv4_x.32.residual_function.3.weight': 0, 'conv4_x.32.residual_function.1.bias': 0, 'conv4_x.32.residual_function.1.weight': 0, 'conv4_x.32.residual_function.0.weight': 0, 'conv4_x.31.residual_function.7.bias': 0, 'conv4_x.31.residual_function.7.weight': 0, 'conv4_x.31.residual_function.6.weight': 0, 'conv4_x.31.residual_function.4.bias': 0, 'conv4_x.31.residual_function.4.weight': 0, 'conv4_x.31.residual_function.3.weight': 0, 'conv4_x.31.residual_function.1.bias': 0, 'conv4_x.31.residual_function.1.weight': 0, 'conv4_x.31.residual_function.0.weight': 0, 'conv4_x.30.residual_function.7.bias': 0, 'conv4_x.30.residual_function.7.weight': 0, 'conv4_x.30.residual_function.6.weight': 0, 'conv4_x.30.residual_function.4.bias': 0, 'conv4_x.30.residual_function.4.weight': 0, 'conv4_x.30.residual_function.3.weight': 0, 'conv4_x.30.residual_function.1.bias': 0, 'conv4_x.30.residual_function.1.weight': 0, 'conv4_x.30.residual_function.0.weight': 0, 'conv4_x.29.residual_function.7.bias': 0, 'conv4_x.29.residual_function.7.weight': 0, 'conv4_x.29.residual_function.6.weight': 0, 'conv4_x.29.residual_function.4.bias': 0, 'conv4_x.29.residual_function.4.weight': 0, 'conv4_x.29.residual_function.3.weight': 0, 'conv4_x.29.residual_function.1.bias': 0, 'conv4_x.29.residual_function.1.weight': 0, 'conv4_x.29.residual_function.0.weight': 0, 'conv4_x.28.residual_function.7.bias': 0, 'conv4_x.28.residual_function.7.weight': 0, 'conv4_x.28.residual_function.6.weight': 0, 'conv4_x.28.residual_function.4.bias': 0, 'conv4_x.28.residual_function.4.weight': 0, 'conv4_x.28.residual_function.3.weight': 0, 'conv4_x.28.residual_function.1.bias': 0, 'conv4_x.28.residual_function.1.weight': 0, 'conv4_x.28.residual_function.0.weight': 0, 'conv4_x.27.residual_function.7.bias': 0, 'conv4_x.27.residual_function.7.weight': 0, 'conv4_x.27.residual_function.6.weight': 0, 'conv4_x.27.residual_function.4.bias': 0, 'conv4_x.27.residual_function.4.weight': 0, 'conv4_x.27.residual_function.3.weight': 0, 'conv4_x.27.residual_function.1.bias': 0, 'conv4_x.27.residual_function.1.weight': 0, 'conv4_x.27.residual_function.0.weight': 0, 'conv4_x.26.residual_function.7.bias': 0, 'conv4_x.26.residual_function.7.weight': 0, 'conv4_x.26.residual_function.6.weight': 0, 'conv4_x.26.residual_function.4.bias': 0, 'conv4_x.26.residual_function.4.weight': 0, 'conv4_x.26.residual_function.3.weight': 0, 'conv4_x.26.residual_function.1.bias': 0, 'conv4_x.26.residual_function.1.weight': 0, 'conv4_x.26.residual_function.0.weight': 0, 'conv4_x.25.residual_function.7.bias': 0, 'conv4_x.25.residual_function.7.weight': 0, 'conv4_x.25.residual_function.6.weight': 0, 'conv4_x.25.residual_function.4.bias': 0, 'conv4_x.25.residual_function.4.weight': 0, 'conv4_x.25.residual_function.3.weight': 0, 'conv4_x.25.residual_function.1.bias': 0, 'conv4_x.25.residual_function.1.weight': 0, 'conv4_x.25.residual_function.0.weight': 0, 'conv4_x.24.residual_function.7.bias': 0, 'conv4_x.24.residual_function.7.weight': 0, 'conv4_x.24.residual_function.6.weight': 0, 'conv4_x.24.residual_function.4.bias': 0, 'conv4_x.24.residual_function.4.weight': 0, 'conv4_x.24.residual_function.3.weight': 0, 'conv4_x.24.residual_function.1.bias': 0, 'conv4_x.24.residual_function.1.weight': 0, 'conv4_x.24.residual_function.0.weight': 0, 'conv4_x.23.residual_function.7.bias': 0, 'conv4_x.23.residual_function.7.weight': 0, 'conv4_x.23.residual_function.6.weight': 0, 'conv4_x.23.residual_function.4.bias': 0, 'conv4_x.23.residual_function.4.weight': 0, 'conv4_x.23.residual_function.3.weight': 0, 'conv4_x.23.residual_function.1.bias': 0, 'conv4_x.23.residual_function.1.weight': 0, 'conv4_x.23.residual_function.0.weight': 0, 'conv4_x.22.residual_function.7.bias': 0, 'conv4_x.22.residual_function.7.weight': 0, 'conv4_x.22.residual_function.6.weight': 0, 'conv4_x.22.residual_function.4.bias': 0, 'conv4_x.22.residual_function.4.weight': 0, 'conv4_x.22.residual_function.3.weight': 0, 'conv4_x.22.residual_function.1.bias': 0, 'conv4_x.22.residual_function.1.weight': 0, 'conv4_x.22.residual_function.0.weight': 0, 'conv4_x.21.residual_function.7.bias': 0, 'conv4_x.21.residual_function.7.weight': 0, 'conv4_x.21.residual_function.6.weight': 0, 'conv4_x.21.residual_function.4.bias': 0, 'conv4_x.21.residual_function.4.weight': 0, 'conv4_x.21.residual_function.3.weight': 0, 'conv4_x.21.residual_function.1.bias': 0, 'conv4_x.21.residual_function.1.weight': 0, 'conv4_x.21.residual_function.0.weight': 0, 'conv4_x.20.residual_function.7.bias': 0, 'conv4_x.20.residual_function.7.weight': 0, 'conv4_x.20.residual_function.6.weight': 0, 'conv4_x.20.residual_function.4.bias': 0, 'conv4_x.20.residual_function.4.weight': 0, 'conv4_x.20.residual_function.3.weight': 0, 'conv4_x.20.residual_function.1.bias': 0, 'conv4_x.20.residual_function.1.weight': 0, 'conv4_x.20.residual_function.0.weight': 0, 'conv4_x.19.residual_function.7.bias': 0, 'conv4_x.19.residual_function.7.weight': 0, 'conv4_x.19.residual_function.6.weight': 0, 'conv4_x.19.residual_function.4.bias': 0, 'conv4_x.19.residual_function.4.weight': 0, 'conv4_x.19.residual_function.3.weight': 0, 'conv4_x.19.residual_function.1.bias': 0, 'conv4_x.19.residual_function.1.weight': 0, 'conv4_x.19.residual_function.0.weight': 0, 'conv4_x.18.residual_function.7.bias': 0, 'conv4_x.18.residual_function.7.weight': 0, 'conv4_x.18.residual_function.6.weight': 0, 'conv4_x.18.residual_function.4.bias': 0, 'conv4_x.18.residual_function.4.weight': 0, 'conv4_x.18.residual_function.3.weight': 0, 'conv4_x.18.residual_function.1.bias': 0, 'conv4_x.18.residual_function.1.weight': 0, 'conv4_x.18.residual_function.0.weight': 0, 'conv4_x.17.residual_function.7.bias': 0, 'conv4_x.17.residual_function.7.weight': 0, 'conv4_x.17.residual_function.6.weight': 0, 'conv4_x.17.residual_function.4.bias': 0, 'conv4_x.17.residual_function.4.weight': 0, 'conv4_x.17.residual_function.3.weight': 0, 'conv4_x.17.residual_function.1.bias': 0, 'conv4_x.17.residual_function.1.weight': 0, 'conv4_x.17.residual_function.0.weight': 0, 'conv4_x.16.residual_function.7.bias': 0, 'conv4_x.16.residual_function.7.weight': 0, 'conv4_x.16.residual_function.6.weight': 0, 'conv4_x.16.residual_function.4.bias': 0, 'conv4_x.16.residual_function.4.weight': 0, 'conv4_x.16.residual_function.3.weight': 0, 'conv4_x.16.residual_function.1.bias': 0, 'conv4_x.16.residual_function.1.weight': 0, 'conv4_x.16.residual_function.0.weight': 0, 'conv4_x.15.residual_function.7.bias': 0, 'conv4_x.15.residual_function.7.weight': 0, 'conv4_x.15.residual_function.6.weight': 0, 'conv4_x.15.residual_function.4.bias': 0, 'conv4_x.15.residual_function.4.weight': 0, 'conv4_x.15.residual_function.3.weight': 0, 'conv4_x.15.residual_function.1.bias': 0, 'conv4_x.15.residual_function.1.weight': 0, 'conv4_x.15.residual_function.0.weight': 0, 'conv4_x.14.residual_function.7.bias': 0, 'conv4_x.14.residual_function.7.weight': 0, 'conv4_x.14.residual_function.6.weight': 0, 'conv4_x.14.residual_function.4.bias': 0, 'conv4_x.14.residual_function.4.weight': 0, 'conv4_x.14.residual_function.3.weight': 0, 'conv4_x.14.residual_function.1.bias': 0, 'conv4_x.14.residual_function.1.weight': 0, 'conv4_x.14.residual_function.0.weight': 0, 'conv4_x.13.residual_function.7.bias': 0, 'conv4_x.13.residual_function.7.weight': 0, 'conv4_x.13.residual_function.6.weight': 0, 'conv4_x.13.residual_function.4.bias': 0, 'conv4_x.13.residual_function.4.weight': 0, 'conv4_x.13.residual_function.3.weight': 0, 'conv4_x.13.residual_function.1.bias': 0, 'conv4_x.13.residual_function.1.weight': 0, 'conv4_x.13.residual_function.0.weight': 0, 'conv4_x.12.residual_function.7.bias': 0, 'conv4_x.12.residual_function.7.weight': 0, 'conv4_x.12.residual_function.6.weight': 0, 'conv4_x.12.residual_function.4.bias': 0, 'conv4_x.12.residual_function.4.weight': 0, 'conv4_x.12.residual_function.3.weight': 0, 'conv4_x.12.residual_function.1.bias': 0, 'conv4_x.12.residual_function.1.weight': 0, 'conv4_x.12.residual_function.0.weight': 0, 'conv4_x.11.residual_function.7.bias': 0, 'conv4_x.11.residual_function.7.weight': 0, 'conv4_x.11.residual_function.6.weight': 0, 'conv4_x.11.residual_function.4.bias': 0, 'conv4_x.11.residual_function.4.weight': 0, 'conv4_x.11.residual_function.3.weight': 0, 'conv4_x.11.residual_function.1.bias': 0, 'conv4_x.11.residual_function.1.weight': 0, 'conv4_x.11.residual_function.0.weight': 0, 'conv4_x.10.residual_function.7.bias': 0, 'conv4_x.10.residual_function.7.weight': 0, 'conv4_x.10.residual_function.6.weight': 0, 'conv4_x.10.residual_function.4.bias': 0, 'conv4_x.10.residual_function.4.weight': 0, 'conv4_x.10.residual_function.3.weight': 0, 'conv4_x.10.residual_function.1.bias': 0, 'conv4_x.10.residual_function.1.weight': 0, 'conv4_x.10.residual_function.0.weight': 0, 'conv4_x.9.residual_function.7.bias': 0, 'conv4_x.9.residual_function.7.weight': 0, 'conv4_x.9.residual_function.6.weight': 0, 'conv4_x.9.residual_function.4.bias': 0, 'conv4_x.9.residual_function.4.weight': 0, 'conv4_x.9.residual_function.3.weight': 0, 'conv4_x.9.residual_function.1.bias': 0, 'conv4_x.9.residual_function.1.weight': 0, 'conv4_x.9.residual_function.0.weight': 0, 'conv4_x.8.residual_function.7.bias': 0, 'conv4_x.8.residual_function.7.weight': 0, 'conv4_x.8.residual_function.6.weight': 0, 'conv4_x.8.residual_function.4.bias': 0, 'conv4_x.8.residual_function.4.weight': 0, 'conv4_x.8.residual_function.3.weight': 0, 'conv4_x.8.residual_function.1.bias': 0, 'conv4_x.8.residual_function.1.weight': 0, 'conv4_x.8.residual_function.0.weight': 0, 'conv4_x.7.residual_function.7.bias': 0, 'conv4_x.7.residual_function.7.weight': 0, 'conv4_x.7.residual_function.6.weight': 0, 'conv4_x.7.residual_function.4.bias': 0, 'conv4_x.7.residual_function.4.weight': 0, 'conv4_x.7.residual_function.3.weight': 0, 'conv4_x.7.residual_function.1.bias': 0, 'conv4_x.7.residual_function.1.weight': 0, 'conv4_x.7.residual_function.0.weight': 0, 'conv4_x.6.residual_function.7.bias': 0, 'conv4_x.6.residual_function.7.weight': 0, 'conv4_x.6.residual_function.6.weight': 0, 'conv4_x.6.residual_function.4.bias': 0, 'conv4_x.6.residual_function.4.weight': 0, 'conv4_x.6.residual_function.3.weight': 0, 'conv4_x.6.residual_function.1.bias': 0, 'conv4_x.6.residual_function.1.weight': 0, 'conv4_x.6.residual_function.0.weight': 0, 'conv4_x.5.residual_function.7.bias': 0, 'conv4_x.5.residual_function.7.weight': 0, 'conv4_x.5.residual_function.6.weight': 0, 'conv4_x.5.residual_function.4.bias': 0, 'conv4_x.5.residual_function.4.weight': 0, 'conv4_x.5.residual_function.3.weight': 0, 'conv4_x.5.residual_function.1.bias': 0, 'conv4_x.5.residual_function.1.weight': 0, 'conv4_x.5.residual_function.0.weight': 0, 'conv4_x.4.residual_function.7.bias': 0, 'conv4_x.4.residual_function.7.weight': 0, 'conv4_x.4.residual_function.6.weight': 0, 'conv4_x.4.residual_function.4.bias': 0, 'conv4_x.4.residual_function.4.weight': 0, 'conv4_x.4.residual_function.3.weight': 0, 'conv4_x.4.residual_function.1.bias': 0, 'conv4_x.4.residual_function.1.weight': 0, 'conv4_x.4.residual_function.0.weight': 0, 'conv4_x.3.residual_function.7.bias': 0, 'conv4_x.3.residual_function.7.weight': 0, 'conv4_x.3.residual_function.6.weight': 0, 'conv4_x.3.residual_function.4.bias': 0, 'conv4_x.3.residual_function.4.weight': 0, 'conv4_x.3.residual_function.3.weight': 0, 'conv4_x.3.residual_function.1.bias': 0, 'conv4_x.3.residual_function.1.weight': 0, 'conv4_x.3.residual_function.0.weight': 0, 'conv4_x.2.residual_function.7.bias': 0, 'conv4_x.2.residual_function.7.weight': 0, 'conv4_x.2.residual_function.6.weight': 0, 'conv4_x.2.residual_function.4.bias': 0, 'conv4_x.2.residual_function.4.weight': 0, 'conv4_x.2.residual_function.3.weight': 0, 'conv4_x.2.residual_function.1.bias': 0, 'conv4_x.2.residual_function.1.weight': 0, 'conv4_x.2.residual_function.0.weight': 0, 'conv4_x.1.residual_function.7.bias': 0, 'conv4_x.1.residual_function.7.weight': 0, 'conv4_x.1.residual_function.6.weight': 0, 'conv4_x.1.residual_function.4.bias': 0, 'conv4_x.1.residual_function.4.weight': 0, 'conv4_x.1.residual_function.3.weight': 0, 'conv4_x.1.residual_function.1.bias': 0, 'conv4_x.1.residual_function.1.weight': 0, 'conv4_x.1.residual_function.0.weight': 0, 'conv4_x.0.shortcut.1.bias': 0, 'conv4_x.0.shortcut.1.weight': 0, 'conv4_x.0.shortcut.0.weight': 0, 'conv4_x.0.residual_function.7.bias': 0, 'conv4_x.0.residual_function.7.weight': 0, 'conv4_x.0.residual_function.6.weight': 0, 'conv4_x.0.residual_function.4.bias': 0, 'conv4_x.0.residual_function.4.weight': 0, 'conv4_x.0.residual_function.3.weight': 0, 'conv4_x.0.residual_function.1.bias': 0, 'conv4_x.0.residual_function.1.weight': 0, 'conv4_x.0.residual_function.0.weight': 0, 'conv3_x.7.residual_function.7.bias': 0, 'conv3_x.7.residual_function.7.weight': 0, 'conv3_x.7.residual_function.6.weight': 0, 'conv3_x.7.residual_function.4.bias': 0, 'conv3_x.7.residual_function.4.weight': 0, 'conv3_x.7.residual_function.3.weight': 0, 'conv3_x.7.residual_function.1.bias': 0, 'conv3_x.7.residual_function.1.weight': 0, 'conv3_x.7.residual_function.0.weight': 0, 'conv3_x.6.residual_function.7.bias': 0, 'conv3_x.6.residual_function.7.weight': 0, 'conv3_x.6.residual_function.6.weight': 0, 'conv3_x.6.residual_function.4.bias': 0, 'conv3_x.6.residual_function.4.weight': 0, 'conv3_x.6.residual_function.3.weight': 0, 'conv3_x.6.residual_function.1.bias': 0, 'conv3_x.6.residual_function.1.weight': 0, 'conv3_x.6.residual_function.0.weight': 0, 'conv3_x.5.residual_function.7.bias': 0, 'conv3_x.5.residual_function.7.weight': 0, 'conv3_x.5.residual_function.6.weight': 0, 'conv3_x.5.residual_function.4.bias': 0, 'conv3_x.5.residual_function.4.weight': 0, 'conv3_x.5.residual_function.3.weight': 0, 'conv3_x.5.residual_function.1.bias': 0, 'conv3_x.5.residual_function.1.weight': 0, 'conv3_x.5.residual_function.0.weight': 0, 'conv3_x.4.residual_function.7.bias': 0, 'conv3_x.4.residual_function.7.weight': 0, 'conv3_x.4.residual_function.6.weight': 0, 'conv3_x.4.residual_function.4.bias': 0, 'conv3_x.4.residual_function.4.weight': 0, 'conv3_x.4.residual_function.3.weight': 0, 'conv3_x.4.residual_function.1.bias': 0, 'conv3_x.4.residual_function.1.weight': 0, 'conv3_x.4.residual_function.0.weight': 0, 'conv3_x.3.residual_function.7.bias': 0, 'conv3_x.3.residual_function.7.weight': 0, 'conv3_x.3.residual_function.6.weight': 0, 'conv3_x.3.residual_function.4.bias': 0, 'conv3_x.3.residual_function.4.weight': 0, 'conv3_x.3.residual_function.3.weight': 0, 'conv3_x.3.residual_function.1.bias': 0, 'conv3_x.3.residual_function.1.weight': 0, 'conv3_x.3.residual_function.0.weight': 0, 'conv3_x.2.residual_function.7.bias': 0, 'conv3_x.2.residual_function.7.weight': 0, 'conv3_x.2.residual_function.6.weight': 0, 'conv3_x.2.residual_function.4.bias': 0, 'conv3_x.2.residual_function.4.weight': 0, 'conv3_x.2.residual_function.3.weight': 0, 'conv3_x.2.residual_function.1.bias': 0, 'conv3_x.2.residual_function.1.weight': 0, 'conv3_x.2.residual_function.0.weight': 0, 'conv3_x.1.residual_function.7.bias': 0, 'conv3_x.1.residual_function.7.weight': 0, 'conv3_x.1.residual_function.6.weight': 0, 'conv3_x.1.residual_function.4.bias': 0, 'conv3_x.1.residual_function.4.weight': 0, 'conv3_x.1.residual_function.3.weight': 0, 'conv3_x.1.residual_function.1.bias': 0, 'conv3_x.1.residual_function.1.weight': 0, 'conv3_x.1.residual_function.0.weight': 0, 'conv3_x.0.shortcut.1.bias': 0, 'conv3_x.0.shortcut.1.weight': 0, 'conv3_x.0.shortcut.0.weight': 0, 'conv3_x.0.residual_function.7.bias': 0, 'conv3_x.0.residual_function.7.weight': 0, 'conv3_x.0.residual_function.6.weight': 0, 'conv3_x.0.residual_function.4.bias': 0, 'conv3_x.0.residual_function.4.weight': 0, 'conv3_x.0.residual_function.3.weight': 0, 'conv3_x.0.residual_function.1.bias': 0, 'conv3_x.0.residual_function.1.weight': 0, 'conv3_x.0.residual_function.0.weight': 0, 'conv2_x.2.residual_function.7.bias': 0, 'conv2_x.2.residual_function.7.weight': 0, 'conv2_x.2.residual_function.6.weight': 0, 'conv2_x.2.residual_function.4.bias': 0, 'conv2_x.2.residual_function.4.weight': 0, 'conv2_x.2.residual_function.3.weight': 0, 'conv2_x.2.residual_function.1.bias': 0, 'conv2_x.2.residual_function.1.weight': 0, 'conv2_x.2.residual_function.0.weight': 0, 'conv2_x.1.residual_function.7.bias': 0, 'conv2_x.1.residual_function.7.weight': 0, 'conv2_x.1.residual_function.6.weight': 0, 'conv2_x.1.residual_function.4.bias': 0, 'conv2_x.1.residual_function.4.weight': 0, 'conv2_x.1.residual_function.3.weight': 0, 'conv2_x.1.residual_function.1.bias': 0, 'conv2_x.1.residual_function.1.weight': 0, 'conv2_x.1.residual_function.0.weight': 0, 'conv2_x.0.shortcut.1.bias': 0, 'conv2_x.0.shortcut.1.weight': 0, 'conv2_x.0.shortcut.0.weight': 0, 'conv2_x.0.residual_function.7.bias': 0, 'conv2_x.0.residual_function.7.weight': 0, 'conv2_x.0.residual_function.6.weight': 0, 'conv2_x.0.residual_function.4.bias': 0, 'conv2_x.0.residual_function.4.weight': 0, 'conv2_x.0.residual_function.3.weight': 0, 'conv2_x.0.residual_function.1.bias': 0, 'conv2_x.0.residual_function.1.weight': 0, 'conv2_x.0.residual_function.0.weight': 0, 'conv1.1.bias': 0, 'conv1.1.weight': 0, 'conv1.0.weight': 0}
2025-06-08 08:58:47,113 [allreducer.py:710] INFO offsets: 
2025-06-08 08:58:47,113 [allreducer.py:347] INFO dynamic densities = [0.01]
2025-06-08 08:58:47,121 [allreducer.py:662] INFO spar_key_groupidx_maps: {'conv1.0.weight': [0], 'conv1.1.weight': [0], 'conv1.1.bias': [0], 'conv2_x.0.residual_function.0.weight': [0], 'conv2_x.0.residual_function.1.weight': [0], 'conv2_x.0.residual_function.1.bias': [0], 'conv2_x.0.residual_function.3.weight': [0], 'conv2_x.0.residual_function.4.weight': [0], 'conv2_x.0.residual_function.4.bias': [0], 'conv2_x.0.residual_function.6.weight': [0], 'conv2_x.0.residual_function.7.weight': [0], 'conv2_x.0.residual_function.7.bias': [0], 'conv2_x.0.shortcut.0.weight': [0], 'conv2_x.0.shortcut.1.weight': [0], 'conv2_x.0.shortcut.1.bias': [0], 'conv2_x.1.residual_function.0.weight': [0], 'conv2_x.1.residual_function.1.weight': [0], 'conv2_x.1.residual_function.1.bias': [0], 'conv2_x.1.residual_function.3.weight': [0], 'conv2_x.1.residual_function.4.weight': [0], 'conv2_x.1.residual_function.4.bias': [0], 'conv2_x.1.residual_function.6.weight': [0], 'conv2_x.1.residual_function.7.weight': [0], 'conv2_x.1.residual_function.7.bias': [0], 'conv2_x.2.residual_function.0.weight': [0], 'conv2_x.2.residual_function.1.weight': [0], 'conv2_x.2.residual_function.1.bias': [0], 'conv2_x.2.residual_function.3.weight': [0], 'conv2_x.2.residual_function.4.weight': [0], 'conv2_x.2.residual_function.4.bias': [0], 'conv2_x.2.residual_function.6.weight': [0], 'conv2_x.2.residual_function.7.weight': [0], 'conv2_x.2.residual_function.7.bias': [0], 'conv3_x.0.residual_function.0.weight': [0], 'conv3_x.0.residual_function.1.weight': [0], 'conv3_x.0.residual_function.1.bias': [0], 'conv3_x.0.residual_function.3.weight': [0], 'conv3_x.0.residual_function.4.weight': [0], 'conv3_x.0.residual_function.4.bias': [0], 'conv3_x.0.residual_function.6.weight': [0], 'conv3_x.0.residual_function.7.weight': [0], 'conv3_x.0.residual_function.7.bias': [0], 'conv3_x.0.shortcut.0.weight': [0], 'conv3_x.0.shortcut.1.weight': [0], 'conv3_x.0.shortcut.1.bias': [0], 'conv3_x.1.residual_function.0.weight': [0], 'conv3_x.1.residual_function.1.weight': [0], 'conv3_x.1.residual_function.1.bias': [0], 'conv3_x.1.residual_function.3.weight': [0], 'conv3_x.1.residual_function.4.weight': [0], 'conv3_x.1.residual_function.4.bias': [0], 'conv3_x.1.residual_function.6.weight': [0], 'conv3_x.1.residual_function.7.weight': [0], 'conv3_x.1.residual_function.7.bias': [0], 'conv3_x.2.residual_function.0.weight': [0], 'conv3_x.2.residual_function.1.weight': [0], 'conv3_x.2.residual_function.1.bias': [0], 'conv3_x.2.residual_function.3.weight': [0], 'conv3_x.2.residual_function.4.weight': [0], 'conv3_x.2.residual_function.4.bias': [0], 'conv3_x.2.residual_function.6.weight': [0], 'conv3_x.2.residual_function.7.weight': [0], 'conv3_x.2.residual_function.7.bias': [0], 'conv3_x.3.residual_function.0.weight': [0], 'conv3_x.3.residual_function.1.weight': [0], 'conv3_x.3.residual_function.1.bias': [0], 'conv3_x.3.residual_function.3.weight': [0], 'conv3_x.3.residual_function.4.weight': [0], 'conv3_x.3.residual_function.4.bias': [0], 'conv3_x.3.residual_function.6.weight': [0], 'conv3_x.3.residual_function.7.weight': [0], 'conv3_x.3.residual_function.7.bias': [0], 'conv3_x.4.residual_function.0.weight': [0], 'conv3_x.4.residual_function.1.weight': [0], 'conv3_x.4.residual_function.1.bias': [0], 'conv3_x.4.residual_function.3.weight': [0], 'conv3_x.4.residual_function.4.weight': [0], 'conv3_x.4.residual_function.4.bias': [0], 'conv3_x.4.residual_function.6.weight': [0], 'conv3_x.4.residual_function.7.weight': [0], 'conv3_x.4.residual_function.7.bias': [0], 'conv3_x.5.residual_function.0.weight': [0], 'conv3_x.5.residual_function.1.weight': [0], 'conv3_x.5.residual_function.1.bias': [0], 'conv3_x.5.residual_function.3.weight': [0], 'conv3_x.5.residual_function.4.weight': [0], 'conv3_x.5.residual_function.4.bias': [0], 'conv3_x.5.residual_function.6.weight': [0], 'conv3_x.5.residual_function.7.weight': [0], 'conv3_x.5.residual_function.7.bias': [0], 'conv3_x.6.residual_function.0.weight': [0], 'conv3_x.6.residual_function.1.weight': [0], 'conv3_x.6.residual_function.1.bias': [0], 'conv3_x.6.residual_function.3.weight': [0], 'conv3_x.6.residual_function.4.weight': [0], 'conv3_x.6.residual_function.4.bias': [0], 'conv3_x.6.residual_function.6.weight': [0], 'conv3_x.6.residual_function.7.weight': [0], 'conv3_x.6.residual_function.7.bias': [0], 'conv3_x.7.residual_function.0.weight': [0], 'conv3_x.7.residual_function.1.weight': [0], 'conv3_x.7.residual_function.1.bias': [0], 'conv3_x.7.residual_function.3.weight': [0], 'conv3_x.7.residual_function.4.weight': [0], 'conv3_x.7.residual_function.4.bias': [0], 'conv3_x.7.residual_function.6.weight': [0], 'conv3_x.7.residual_function.7.weight': [0], 'conv3_x.7.residual_function.7.bias': [0], 'conv4_x.0.residual_function.0.weight': [0], 'conv4_x.0.residual_function.1.weight': [0], 'conv4_x.0.residual_function.1.bias': [0], 'conv4_x.0.residual_function.3.weight': [0], 'conv4_x.0.residual_function.4.weight': [0], 'conv4_x.0.residual_function.4.bias': [0], 'conv4_x.0.residual_function.6.weight': [0], 'conv4_x.0.residual_function.7.weight': [0], 'conv4_x.0.residual_function.7.bias': [0], 'conv4_x.0.shortcut.0.weight': [0], 'conv4_x.0.shortcut.1.weight': [0], 'conv4_x.0.shortcut.1.bias': [0], 'conv4_x.1.residual_function.0.weight': [0], 'conv4_x.1.residual_function.1.weight': [0], 'conv4_x.1.residual_function.1.bias': [0], 'conv4_x.1.residual_function.3.weight': [0], 'conv4_x.1.residual_function.4.weight': [0], 'conv4_x.1.residual_function.4.bias': [0], 'conv4_x.1.residual_function.6.weight': [0], 'conv4_x.1.residual_function.7.weight': [0], 'conv4_x.1.residual_function.7.bias': [0], 'conv4_x.2.residual_function.0.weight': [0], 'conv4_x.2.residual_function.1.weight': [0], 'conv4_x.2.residual_function.1.bias': [0], 'conv4_x.2.residual_function.3.weight': [0], 'conv4_x.2.residual_function.4.weight': [0], 'conv4_x.2.residual_function.4.bias': [0], 'conv4_x.2.residual_function.6.weight': [0], 'conv4_x.2.residual_function.7.weight': [0], 'conv4_x.2.residual_function.7.bias': [0], 'conv4_x.3.residual_function.0.weight': [0], 'conv4_x.3.residual_function.1.weight': [0], 'conv4_x.3.residual_function.1.bias': [0], 'conv4_x.3.residual_function.3.weight': [0], 'conv4_x.3.residual_function.4.weight': [0], 'conv4_x.3.residual_function.4.bias': [0], 'conv4_x.3.residual_function.6.weight': [0], 'conv4_x.3.residual_function.7.weight': [0], 'conv4_x.3.residual_function.7.bias': [0], 'conv4_x.4.residual_function.0.weight': [0], 'conv4_x.4.residual_function.1.weight': [0], 'conv4_x.4.residual_function.1.bias': [0], 'conv4_x.4.residual_function.3.weight': [0], 'conv4_x.4.residual_function.4.weight': [0], 'conv4_x.4.residual_function.4.bias': [0], 'conv4_x.4.residual_function.6.weight': [0], 'conv4_x.4.residual_function.7.weight': [0], 'conv4_x.4.residual_function.7.bias': [0], 'conv4_x.5.residual_function.0.weight': [0], 'conv4_x.5.residual_function.1.weight': [0], 'conv4_x.5.residual_function.1.bias': [0], 'conv4_x.5.residual_function.3.weight': [0], 'conv4_x.5.residual_function.4.weight': [0], 'conv4_x.5.residual_function.4.bias': [0], 'conv4_x.5.residual_function.6.weight': [0], 'conv4_x.5.residual_function.7.weight': [0], 'conv4_x.5.residual_function.7.bias': [0], 'conv4_x.6.residual_function.0.weight': [0, 1], 'conv4_x.6.residual_function.1.weight': [1], 'conv4_x.6.residual_function.1.bias': [1], 'conv4_x.6.residual_function.3.weight': [1], 'conv4_x.6.residual_function.4.weight': [1], 'conv4_x.6.residual_function.4.bias': [1], 'conv4_x.6.residual_function.6.weight': [1], 'conv4_x.6.residual_function.7.weight': [1], 'conv4_x.6.residual_function.7.bias': [1], 'conv4_x.7.residual_function.0.weight': [1], 'conv4_x.7.residual_function.1.weight': [1], 'conv4_x.7.residual_function.1.bias': [1], 'conv4_x.7.residual_function.3.weight': [1], 'conv4_x.7.residual_function.4.weight': [1], 'conv4_x.7.residual_function.4.bias': [1], 'conv4_x.7.residual_function.6.weight': [1], 'conv4_x.7.residual_function.7.weight': [1], 'conv4_x.7.residual_function.7.bias': [1], 'conv4_x.8.residual_function.0.weight': [1], 'conv4_x.8.residual_function.1.weight': [1], 'conv4_x.8.residual_function.1.bias': [1], 'conv4_x.8.residual_function.3.weight': [1], 'conv4_x.8.residual_function.4.weight': [1], 'conv4_x.8.residual_function.4.bias': [1], 'conv4_x.8.residual_function.6.weight': [1], 'conv4_x.8.residual_function.7.weight': [1], 'conv4_x.8.residual_function.7.bias': [1], 'conv4_x.9.residual_function.0.weight': [1], 'conv4_x.9.residual_function.1.weight': [1], 'conv4_x.9.residual_function.1.bias': [1], 'conv4_x.9.residual_function.3.weight': [1], 'conv4_x.9.residual_function.4.weight': [1], 'conv4_x.9.residual_function.4.bias': [1], 'conv4_x.9.residual_function.6.weight': [1], 'conv4_x.9.residual_function.7.weight': [1], 'conv4_x.9.residual_function.7.bias': [1], 'conv4_x.10.residual_function.0.weight': [1], 'conv4_x.10.residual_function.1.weight': [1], 'conv4_x.10.residual_function.1.bias': [1], 'conv4_x.10.residual_function.3.weight': [1], 'conv4_x.10.residual_function.4.weight': [1], 'conv4_x.10.residual_function.4.bias': [1], 'conv4_x.10.residual_function.6.weight': [1], 'conv4_x.10.residual_function.7.weight': [1], 'conv4_x.10.residual_function.7.bias': [1], 'conv4_x.11.residual_function.0.weight': [1], 'conv4_x.11.residual_function.1.weight': [1], 'conv4_x.11.residual_function.1.bias': [1], 'conv4_x.11.residual_function.3.weight': [1], 'conv4_x.11.residual_function.4.weight': [1], 'conv4_x.11.residual_function.4.bias': [1], 'conv4_x.11.residual_function.6.weight': [1], 'conv4_x.11.residual_function.7.weight': [1], 'conv4_x.11.residual_function.7.bias': [1], 'conv4_x.12.residual_function.0.weight': [1], 'conv4_x.12.residual_function.1.weight': [1], 'conv4_x.12.residual_function.1.bias': [1], 'conv4_x.12.residual_function.3.weight': [1], 'conv4_x.12.residual_function.4.weight': [1], 'conv4_x.12.residual_function.4.bias': [1], 'conv4_x.12.residual_function.6.weight': [1], 'conv4_x.12.residual_function.7.weight': [1], 'conv4_x.12.residual_function.7.bias': [1], 'conv4_x.13.residual_function.0.weight': [1], 'conv4_x.13.residual_function.1.weight': [1], 'conv4_x.13.residual_function.1.bias': [1], 'conv4_x.13.residual_function.3.weight': [1], 'conv4_x.13.residual_function.4.weight': [1], 'conv4_x.13.residual_function.4.bias': [1], 'conv4_x.13.residual_function.6.weight': [1], 'conv4_x.13.residual_function.7.weight': [1], 'conv4_x.13.residual_function.7.bias': [1], 'conv4_x.14.residual_function.0.weight': [1], 'conv4_x.14.residual_function.1.weight': [1], 'conv4_x.14.residual_function.1.bias': [1], 'conv4_x.14.residual_function.3.weight': [1], 'conv4_x.14.residual_function.4.weight': [1], 'conv4_x.14.residual_function.4.bias': [1], 'conv4_x.14.residual_function.6.weight': [1, 2], 'conv4_x.14.residual_function.7.weight': [2], 'conv4_x.14.residual_function.7.bias': [2], 'conv4_x.15.residual_function.0.weight': [2], 'conv4_x.15.residual_function.1.weight': [2], 'conv4_x.15.residual_function.1.bias': [2], 'conv4_x.15.residual_function.3.weight': [2], 'conv4_x.15.residual_function.4.weight': [2], 'conv4_x.15.residual_function.4.bias': [2], 'conv4_x.15.residual_function.6.weight': [2], 'conv4_x.15.residual_function.7.weight': [2], 'conv4_x.15.residual_function.7.bias': [2], 'conv4_x.16.residual_function.0.weight': [2], 'conv4_x.16.residual_function.1.weight': [2], 'conv4_x.16.residual_function.1.bias': [2], 'conv4_x.16.residual_function.3.weight': [2], 'conv4_x.16.residual_function.4.weight': [2], 'conv4_x.16.residual_function.4.bias': [2], 'conv4_x.16.residual_function.6.weight': [2], 'conv4_x.16.residual_function.7.weight': [2], 'conv4_x.16.residual_function.7.bias': [2], 'conv4_x.17.residual_function.0.weight': [2], 'conv4_x.17.residual_function.1.weight': [2], 'conv4_x.17.residual_function.1.bias': [2], 'conv4_x.17.residual_function.3.weight': [2], 'conv4_x.17.residual_function.4.weight': [2], 'conv4_x.17.residual_function.4.bias': [2], 'conv4_x.17.residual_function.6.weight': [2], 'conv4_x.17.residual_function.7.weight': [2], 'conv4_x.17.residual_function.7.bias': [2], 'conv4_x.18.residual_function.0.weight': [2], 'conv4_x.18.residual_function.1.weight': [2], 'conv4_x.18.residual_function.1.bias': [2], 'conv4_x.18.residual_function.3.weight': [2], 'conv4_x.18.residual_function.4.weight': [2], 'conv4_x.18.residual_function.4.bias': [2], 'conv4_x.18.residual_function.6.weight': [2], 'conv4_x.18.residual_function.7.weight': [2], 'conv4_x.18.residual_function.7.bias': [2], 'conv4_x.19.residual_function.0.weight': [2], 'conv4_x.19.residual_function.1.weight': [2], 'conv4_x.19.residual_function.1.bias': [2], 'conv4_x.19.residual_function.3.weight': [2], 'conv4_x.19.residual_function.4.weight': [2], 'conv4_x.19.residual_function.4.bias': [2], 'conv4_x.19.residual_function.6.weight': [2], 'conv4_x.19.residual_function.7.weight': [2], 'conv4_x.19.residual_function.7.bias': [2], 'conv4_x.20.residual_function.0.weight': [2], 'conv4_x.20.residual_function.1.weight': [2], 'conv4_x.20.residual_function.1.bias': [2], 'conv4_x.20.residual_function.3.weight': [2], 'conv4_x.20.residual_function.4.weight': [2], 'conv4_x.20.residual_function.4.bias': [2], 'conv4_x.20.residual_function.6.weight': [2], 'conv4_x.20.residual_function.7.weight': [2], 'conv4_x.20.residual_function.7.bias': [2], 'conv4_x.21.residual_function.0.weight': [2], 'conv4_x.21.residual_function.1.weight': [2], 'conv4_x.21.residual_function.1.bias': [2], 'conv4_x.21.residual_function.3.weight': [2], 'conv4_x.21.residual_function.4.weight': [2], 'conv4_x.21.residual_function.4.bias': [2], 'conv4_x.21.residual_function.6.weight': [2], 'conv4_x.21.residual_function.7.weight': [2], 'conv4_x.21.residual_function.7.bias': [2], 'conv4_x.22.residual_function.0.weight': [2], 'conv4_x.22.residual_function.1.weight': [2], 'conv4_x.22.residual_function.1.bias': [2], 'conv4_x.22.residual_function.3.weight': [2], 'conv4_x.22.residual_function.4.weight': [2], 'conv4_x.22.residual_function.4.bias': [2], 'conv4_x.22.residual_function.6.weight': [2], 'conv4_x.22.residual_function.7.weight': [2], 'conv4_x.22.residual_function.7.bias': [2], 'conv4_x.23.residual_function.0.weight': [2], 'conv4_x.23.residual_function.1.weight': [2], 'conv4_x.23.residual_function.1.bias': [2], 'conv4_x.23.residual_function.3.weight': [2, 3], 'conv4_x.23.residual_function.4.weight': [3], 'conv4_x.23.residual_function.4.bias': [3], 'conv4_x.23.residual_function.6.weight': [3], 'conv4_x.23.residual_function.7.weight': [3], 'conv4_x.23.residual_function.7.bias': [3], 'conv4_x.24.residual_function.0.weight': [3], 'conv4_x.24.residual_function.1.weight': [3], 'conv4_x.24.residual_function.1.bias': [3], 'conv4_x.24.residual_function.3.weight': [3], 'conv4_x.24.residual_function.4.weight': [3], 'conv4_x.24.residual_function.4.bias': [3], 'conv4_x.24.residual_function.6.weight': [3], 'conv4_x.24.residual_function.7.weight': [3], 'conv4_x.24.residual_function.7.bias': [3], 'conv4_x.25.residual_function.0.weight': [3], 'conv4_x.25.residual_function.1.weight': [3], 'conv4_x.25.residual_function.1.bias': [3], 'conv4_x.25.residual_function.3.weight': [3], 'conv4_x.25.residual_function.4.weight': [3], 'conv4_x.25.residual_function.4.bias': [3], 'conv4_x.25.residual_function.6.weight': [3], 'conv4_x.25.residual_function.7.weight': [3], 'conv4_x.25.residual_function.7.bias': [3], 'conv4_x.26.residual_function.0.weight': [3], 'conv4_x.26.residual_function.1.weight': [3], 'conv4_x.26.residual_function.1.bias': [3], 'conv4_x.26.residual_function.3.weight': [3], 'conv4_x.26.residual_function.4.weight': [3], 'conv4_x.26.residual_function.4.bias': [3], 'conv4_x.26.residual_function.6.weight': [3], 'conv4_x.26.residual_function.7.weight': [3], 'conv4_x.26.residual_function.7.bias': [3], 'conv4_x.27.residual_function.0.weight': [3], 'conv4_x.27.residual_function.1.weight': [3], 'conv4_x.27.residual_function.1.bias': [3], 'conv4_x.27.residual_function.3.weight': [3], 'conv4_x.27.residual_function.4.weight': [3], 'conv4_x.27.residual_function.4.bias': [3], 'conv4_x.27.residual_function.6.weight': [3], 'conv4_x.27.residual_function.7.weight': [3], 'conv4_x.27.residual_function.7.bias': [3], 'conv4_x.28.residual_function.0.weight': [3], 'conv4_x.28.residual_function.1.weight': [3], 'conv4_x.28.residual_function.1.bias': [3], 'conv4_x.28.residual_function.3.weight': [3], 'conv4_x.28.residual_function.4.weight': [3], 'conv4_x.28.residual_function.4.bias': [3], 'conv4_x.28.residual_function.6.weight': [3], 'conv4_x.28.residual_function.7.weight': [3], 'conv4_x.28.residual_function.7.bias': [3], 'conv4_x.29.residual_function.0.weight': [3], 'conv4_x.29.residual_function.1.weight': [3], 'conv4_x.29.residual_function.1.bias': [3], 'conv4_x.29.residual_function.3.weight': [3], 'conv4_x.29.residual_function.4.weight': [3], 'conv4_x.29.residual_function.4.bias': [3], 'conv4_x.29.residual_function.6.weight': [3], 'conv4_x.29.residual_function.7.weight': [3], 'conv4_x.29.residual_function.7.bias': [3], 'conv4_x.30.residual_function.0.weight': [3], 'conv4_x.30.residual_function.1.weight': [3], 'conv4_x.30.residual_function.1.bias': [3], 'conv4_x.30.residual_function.3.weight': [3], 'conv4_x.30.residual_function.4.weight': [3], 'conv4_x.30.residual_function.4.bias': [3], 'conv4_x.30.residual_function.6.weight': [3], 'conv4_x.30.residual_function.7.weight': [3], 'conv4_x.30.residual_function.7.bias': [3], 'conv4_x.31.residual_function.0.weight': [3], 'conv4_x.31.residual_function.1.weight': [3], 'conv4_x.31.residual_function.1.bias': [3], 'conv4_x.31.residual_function.3.weight': [3], 'conv4_x.31.residual_function.4.weight': [3], 'conv4_x.31.residual_function.4.bias': [3], 'conv4_x.31.residual_function.6.weight': [3], 'conv4_x.31.residual_function.7.weight': [3], 'conv4_x.31.residual_function.7.bias': [3], 'conv4_x.32.residual_function.0.weight': [3, 4], 'conv4_x.32.residual_function.1.weight': [4], 'conv4_x.32.residual_function.1.bias': [4], 'conv4_x.32.residual_function.3.weight': [4], 'conv4_x.32.residual_function.4.weight': [4], 'conv4_x.32.residual_function.4.bias': [4], 'conv4_x.32.residual_function.6.weight': [4], 'conv4_x.32.residual_function.7.weight': [4], 'conv4_x.32.residual_function.7.bias': [4], 'conv4_x.33.residual_function.0.weight': [4], 'conv4_x.33.residual_function.1.weight': [4], 'conv4_x.33.residual_function.1.bias': [4], 'conv4_x.33.residual_function.3.weight': [4], 'conv4_x.33.residual_function.4.weight': [4], 'conv4_x.33.residual_function.4.bias': [4], 'conv4_x.33.residual_function.6.weight': [4], 'conv4_x.33.residual_function.7.weight': [4], 'conv4_x.33.residual_function.7.bias': [4], 'conv4_x.34.residual_function.0.weight': [4], 'conv4_x.34.residual_function.1.weight': [4], 'conv4_x.34.residual_function.1.bias': [4], 'conv4_x.34.residual_function.3.weight': [4], 'conv4_x.34.residual_function.4.weight': [4], 'conv4_x.34.residual_function.4.bias': [4], 'conv4_x.34.residual_function.6.weight': [4], 'conv4_x.34.residual_function.7.weight': [4], 'conv4_x.34.residual_function.7.bias': [4], 'conv4_x.35.residual_function.0.weight': [4], 'conv4_x.35.residual_function.1.weight': [4], 'conv4_x.35.residual_function.1.bias': [4], 'conv4_x.35.residual_function.3.weight': [4], 'conv4_x.35.residual_function.4.weight': [4], 'conv4_x.35.residual_function.4.bias': [4], 'conv4_x.35.residual_function.6.weight': [4], 'conv4_x.35.residual_function.7.weight': [4], 'conv4_x.35.residual_function.7.bias': [4], 'conv5_x.0.residual_function.0.weight': [4], 'conv5_x.0.residual_function.1.weight': [4], 'conv5_x.0.residual_function.1.bias': [4], 'conv5_x.0.residual_function.3.weight': [4], 'conv5_x.0.residual_function.4.weight': [4], 'conv5_x.0.residual_function.4.bias': [4], 'conv5_x.0.residual_function.6.weight': [4], 'conv5_x.0.residual_function.7.weight': [4], 'conv5_x.0.residual_function.7.bias': [4], 'conv5_x.0.shortcut.0.weight': [4, 5], 'conv5_x.0.shortcut.1.weight': [5], 'conv5_x.0.shortcut.1.bias': [5], 'conv5_x.1.residual_function.0.weight': [5], 'conv5_x.1.residual_function.1.weight': [5], 'conv5_x.1.residual_function.1.bias': [5], 'conv5_x.1.residual_function.3.weight': [5], 'conv5_x.1.residual_function.4.weight': [5], 'conv5_x.1.residual_function.4.bias': [5], 'conv5_x.1.residual_function.6.weight': [5], 'conv5_x.1.residual_function.7.weight': [5], 'conv5_x.1.residual_function.7.bias': [5], 'conv5_x.2.residual_function.0.weight': [5], 'conv5_x.2.residual_function.1.weight': [5], 'conv5_x.2.residual_function.1.bias': [5], 'conv5_x.2.residual_function.3.weight': [5], 'conv5_x.2.residual_function.4.weight': [5], 'conv5_x.2.residual_function.4.bias': [5], 'conv5_x.2.residual_function.6.weight': [5], 'conv5_x.2.residual_function.7.weight': [5], 'conv5_x.2.residual_function.7.bias': [5], 'fc.weight': [5], 'fc.bias': [5]}
2025-06-08 08:58:47,122 [allreducer.py:987] INFO Allreducer thread started ...
2025-06-08 08:58:47,122 [main_trainer.py:135] INFO Start training ....
2025-06-08 08:59:06,566 [main_trainer.py:163] INFO Time per iteration including communication: 0.925839. computation: 0.753495. Speed: 17.281624 images/s, current density: 0.010000
2025-06-08 08:59:23,116 [main_trainer.py:163] INFO Time per iteration including communication: 0.877854. computation: 0.705221. Speed: 18.226264 images/s, current density: 0.010000
2025-06-08 08:59:30,498 [allreducer.py:802] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-08 08:59:30,498 [allreducer.py:853] INFO [rank:0]total[58341028]: 0.000000,0.000087,0.037928,0.084356,0.010429,0.000000,0.000000
2025-06-08 08:59:39,615 [main_trainer.py:163] INFO Time per iteration including communication: 0.860487. computation: 0.689315. Speed: 18.594111 images/s, current density: 0.010000
2025-06-08 08:59:56,121 [main_trainer.py:163] INFO Time per iteration including communication: 0.851792. computation: 0.682096. Speed: 18.783928 images/s, current density: 0.010000
2025-06-08 09:00:11,764 [allreducer.py:802] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-08 09:00:11,764 [allreducer.py:853] INFO [rank:0]total[58341028]: 0.000000,0.000084,0.040640,0.080884,0.008590,0.000000,0.000000
2025-06-08 09:00:12,632 [main_trainer.py:163] INFO Time per iteration including communication: 0.846586. computation: 0.677545. Speed: 18.899442 images/s, current density: 0.010000
2025-06-08 10:46:18,874 [main_trainer.py:302] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-08 10:46:18,875 [main_trainer.py:303] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-08 10:46:23,492 [dl_trainer.py:299] INFO target_sparsities: [1.0]
2025-06-08 10:46:23,493 [dl_trainer.py:311] INFO num_batches_per_epoch: 520
2025-06-08 10:46:23,494 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-08 10:46:24,579 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-08 10:46:24,633 [allreducer.py:284] INFO density: 0.010000
2025-06-08 10:46:24,633 [allreducer.py:285] INFO threshold scale: 1.092000
2025-06-08 10:46:24,635 [allreducer.py:674] INFO key_groupidx_maps: {'fc.bias': 0, 'fc.weight': 0, 'conv5_x.2.residual_function.7.bias': 0, 'conv5_x.2.residual_function.7.weight': 0, 'conv5_x.2.residual_function.6.weight': 0, 'conv5_x.2.residual_function.4.bias': 0, 'conv5_x.2.residual_function.4.weight': 0, 'conv5_x.2.residual_function.3.weight': 0, 'conv5_x.2.residual_function.1.bias': 0, 'conv5_x.2.residual_function.1.weight': 0, 'conv5_x.2.residual_function.0.weight': 0, 'conv5_x.1.residual_function.7.bias': 0, 'conv5_x.1.residual_function.7.weight': 0, 'conv5_x.1.residual_function.6.weight': 0, 'conv5_x.1.residual_function.4.bias': 0, 'conv5_x.1.residual_function.4.weight': 0, 'conv5_x.1.residual_function.3.weight': 0, 'conv5_x.1.residual_function.1.bias': 0, 'conv5_x.1.residual_function.1.weight': 0, 'conv5_x.1.residual_function.0.weight': 0, 'conv5_x.0.shortcut.1.bias': 0, 'conv5_x.0.shortcut.1.weight': 0, 'conv5_x.0.shortcut.0.weight': 0, 'conv5_x.0.residual_function.7.bias': 0, 'conv5_x.0.residual_function.7.weight': 0, 'conv5_x.0.residual_function.6.weight': 0, 'conv5_x.0.residual_function.4.bias': 0, 'conv5_x.0.residual_function.4.weight': 0, 'conv5_x.0.residual_function.3.weight': 0, 'conv5_x.0.residual_function.1.bias': 0, 'conv5_x.0.residual_function.1.weight': 0, 'conv5_x.0.residual_function.0.weight': 0, 'conv4_x.35.residual_function.7.bias': 0, 'conv4_x.35.residual_function.7.weight': 0, 'conv4_x.35.residual_function.6.weight': 0, 'conv4_x.35.residual_function.4.bias': 0, 'conv4_x.35.residual_function.4.weight': 0, 'conv4_x.35.residual_function.3.weight': 0, 'conv4_x.35.residual_function.1.bias': 0, 'conv4_x.35.residual_function.1.weight': 0, 'conv4_x.35.residual_function.0.weight': 0, 'conv4_x.34.residual_function.7.bias': 0, 'conv4_x.34.residual_function.7.weight': 0, 'conv4_x.34.residual_function.6.weight': 0, 'conv4_x.34.residual_function.4.bias': 0, 'conv4_x.34.residual_function.4.weight': 0, 'conv4_x.34.residual_function.3.weight': 0, 'conv4_x.34.residual_function.1.bias': 0, 'conv4_x.34.residual_function.1.weight': 0, 'conv4_x.34.residual_function.0.weight': 0, 'conv4_x.33.residual_function.7.bias': 0, 'conv4_x.33.residual_function.7.weight': 0, 'conv4_x.33.residual_function.6.weight': 0, 'conv4_x.33.residual_function.4.bias': 0, 'conv4_x.33.residual_function.4.weight': 0, 'conv4_x.33.residual_function.3.weight': 0, 'conv4_x.33.residual_function.1.bias': 0, 'conv4_x.33.residual_function.1.weight': 0, 'conv4_x.33.residual_function.0.weight': 0, 'conv4_x.32.residual_function.7.bias': 0, 'conv4_x.32.residual_function.7.weight': 0, 'conv4_x.32.residual_function.6.weight': 0, 'conv4_x.32.residual_function.4.bias': 0, 'conv4_x.32.residual_function.4.weight': 0, 'conv4_x.32.residual_function.3.weight': 0, 'conv4_x.32.residual_function.1.bias': 0, 'conv4_x.32.residual_function.1.weight': 0, 'conv4_x.32.residual_function.0.weight': 0, 'conv4_x.31.residual_function.7.bias': 0, 'conv4_x.31.residual_function.7.weight': 0, 'conv4_x.31.residual_function.6.weight': 0, 'conv4_x.31.residual_function.4.bias': 0, 'conv4_x.31.residual_function.4.weight': 0, 'conv4_x.31.residual_function.3.weight': 0, 'conv4_x.31.residual_function.1.bias': 0, 'conv4_x.31.residual_function.1.weight': 0, 'conv4_x.31.residual_function.0.weight': 0, 'conv4_x.30.residual_function.7.bias': 0, 'conv4_x.30.residual_function.7.weight': 0, 'conv4_x.30.residual_function.6.weight': 0, 'conv4_x.30.residual_function.4.bias': 0, 'conv4_x.30.residual_function.4.weight': 0, 'conv4_x.30.residual_function.3.weight': 0, 'conv4_x.30.residual_function.1.bias': 0, 'conv4_x.30.residual_function.1.weight': 0, 'conv4_x.30.residual_function.0.weight': 0, 'conv4_x.29.residual_function.7.bias': 0, 'conv4_x.29.residual_function.7.weight': 0, 'conv4_x.29.residual_function.6.weight': 0, 'conv4_x.29.residual_function.4.bias': 0, 'conv4_x.29.residual_function.4.weight': 0, 'conv4_x.29.residual_function.3.weight': 0, 'conv4_x.29.residual_function.1.bias': 0, 'conv4_x.29.residual_function.1.weight': 0, 'conv4_x.29.residual_function.0.weight': 0, 'conv4_x.28.residual_function.7.bias': 0, 'conv4_x.28.residual_function.7.weight': 0, 'conv4_x.28.residual_function.6.weight': 0, 'conv4_x.28.residual_function.4.bias': 0, 'conv4_x.28.residual_function.4.weight': 0, 'conv4_x.28.residual_function.3.weight': 0, 'conv4_x.28.residual_function.1.bias': 0, 'conv4_x.28.residual_function.1.weight': 0, 'conv4_x.28.residual_function.0.weight': 0, 'conv4_x.27.residual_function.7.bias': 0, 'conv4_x.27.residual_function.7.weight': 0, 'conv4_x.27.residual_function.6.weight': 0, 'conv4_x.27.residual_function.4.bias': 0, 'conv4_x.27.residual_function.4.weight': 0, 'conv4_x.27.residual_function.3.weight': 0, 'conv4_x.27.residual_function.1.bias': 0, 'conv4_x.27.residual_function.1.weight': 0, 'conv4_x.27.residual_function.0.weight': 0, 'conv4_x.26.residual_function.7.bias': 0, 'conv4_x.26.residual_function.7.weight': 0, 'conv4_x.26.residual_function.6.weight': 0, 'conv4_x.26.residual_function.4.bias': 0, 'conv4_x.26.residual_function.4.weight': 0, 'conv4_x.26.residual_function.3.weight': 0, 'conv4_x.26.residual_function.1.bias': 0, 'conv4_x.26.residual_function.1.weight': 0, 'conv4_x.26.residual_function.0.weight': 0, 'conv4_x.25.residual_function.7.bias': 0, 'conv4_x.25.residual_function.7.weight': 0, 'conv4_x.25.residual_function.6.weight': 0, 'conv4_x.25.residual_function.4.bias': 0, 'conv4_x.25.residual_function.4.weight': 0, 'conv4_x.25.residual_function.3.weight': 0, 'conv4_x.25.residual_function.1.bias': 0, 'conv4_x.25.residual_function.1.weight': 0, 'conv4_x.25.residual_function.0.weight': 0, 'conv4_x.24.residual_function.7.bias': 0, 'conv4_x.24.residual_function.7.weight': 0, 'conv4_x.24.residual_function.6.weight': 0, 'conv4_x.24.residual_function.4.bias': 0, 'conv4_x.24.residual_function.4.weight': 0, 'conv4_x.24.residual_function.3.weight': 0, 'conv4_x.24.residual_function.1.bias': 0, 'conv4_x.24.residual_function.1.weight': 0, 'conv4_x.24.residual_function.0.weight': 0, 'conv4_x.23.residual_function.7.bias': 0, 'conv4_x.23.residual_function.7.weight': 0, 'conv4_x.23.residual_function.6.weight': 0, 'conv4_x.23.residual_function.4.bias': 0, 'conv4_x.23.residual_function.4.weight': 0, 'conv4_x.23.residual_function.3.weight': 0, 'conv4_x.23.residual_function.1.bias': 0, 'conv4_x.23.residual_function.1.weight': 0, 'conv4_x.23.residual_function.0.weight': 0, 'conv4_x.22.residual_function.7.bias': 0, 'conv4_x.22.residual_function.7.weight': 0, 'conv4_x.22.residual_function.6.weight': 0, 'conv4_x.22.residual_function.4.bias': 0, 'conv4_x.22.residual_function.4.weight': 0, 'conv4_x.22.residual_function.3.weight': 0, 'conv4_x.22.residual_function.1.bias': 0, 'conv4_x.22.residual_function.1.weight': 0, 'conv4_x.22.residual_function.0.weight': 0, 'conv4_x.21.residual_function.7.bias': 0, 'conv4_x.21.residual_function.7.weight': 0, 'conv4_x.21.residual_function.6.weight': 0, 'conv4_x.21.residual_function.4.bias': 0, 'conv4_x.21.residual_function.4.weight': 0, 'conv4_x.21.residual_function.3.weight': 0, 'conv4_x.21.residual_function.1.bias': 0, 'conv4_x.21.residual_function.1.weight': 0, 'conv4_x.21.residual_function.0.weight': 0, 'conv4_x.20.residual_function.7.bias': 0, 'conv4_x.20.residual_function.7.weight': 0, 'conv4_x.20.residual_function.6.weight': 0, 'conv4_x.20.residual_function.4.bias': 0, 'conv4_x.20.residual_function.4.weight': 0, 'conv4_x.20.residual_function.3.weight': 0, 'conv4_x.20.residual_function.1.bias': 0, 'conv4_x.20.residual_function.1.weight': 0, 'conv4_x.20.residual_function.0.weight': 0, 'conv4_x.19.residual_function.7.bias': 0, 'conv4_x.19.residual_function.7.weight': 0, 'conv4_x.19.residual_function.6.weight': 0, 'conv4_x.19.residual_function.4.bias': 0, 'conv4_x.19.residual_function.4.weight': 0, 'conv4_x.19.residual_function.3.weight': 0, 'conv4_x.19.residual_function.1.bias': 0, 'conv4_x.19.residual_function.1.weight': 0, 'conv4_x.19.residual_function.0.weight': 0, 'conv4_x.18.residual_function.7.bias': 0, 'conv4_x.18.residual_function.7.weight': 0, 'conv4_x.18.residual_function.6.weight': 0, 'conv4_x.18.residual_function.4.bias': 0, 'conv4_x.18.residual_function.4.weight': 0, 'conv4_x.18.residual_function.3.weight': 0, 'conv4_x.18.residual_function.1.bias': 0, 'conv4_x.18.residual_function.1.weight': 0, 'conv4_x.18.residual_function.0.weight': 0, 'conv4_x.17.residual_function.7.bias': 0, 'conv4_x.17.residual_function.7.weight': 0, 'conv4_x.17.residual_function.6.weight': 0, 'conv4_x.17.residual_function.4.bias': 0, 'conv4_x.17.residual_function.4.weight': 0, 'conv4_x.17.residual_function.3.weight': 0, 'conv4_x.17.residual_function.1.bias': 0, 'conv4_x.17.residual_function.1.weight': 0, 'conv4_x.17.residual_function.0.weight': 0, 'conv4_x.16.residual_function.7.bias': 0, 'conv4_x.16.residual_function.7.weight': 0, 'conv4_x.16.residual_function.6.weight': 0, 'conv4_x.16.residual_function.4.bias': 0, 'conv4_x.16.residual_function.4.weight': 0, 'conv4_x.16.residual_function.3.weight': 0, 'conv4_x.16.residual_function.1.bias': 0, 'conv4_x.16.residual_function.1.weight': 0, 'conv4_x.16.residual_function.0.weight': 0, 'conv4_x.15.residual_function.7.bias': 0, 'conv4_x.15.residual_function.7.weight': 0, 'conv4_x.15.residual_function.6.weight': 0, 'conv4_x.15.residual_function.4.bias': 0, 'conv4_x.15.residual_function.4.weight': 0, 'conv4_x.15.residual_function.3.weight': 0, 'conv4_x.15.residual_function.1.bias': 0, 'conv4_x.15.residual_function.1.weight': 0, 'conv4_x.15.residual_function.0.weight': 0, 'conv4_x.14.residual_function.7.bias': 0, 'conv4_x.14.residual_function.7.weight': 0, 'conv4_x.14.residual_function.6.weight': 0, 'conv4_x.14.residual_function.4.bias': 0, 'conv4_x.14.residual_function.4.weight': 0, 'conv4_x.14.residual_function.3.weight': 0, 'conv4_x.14.residual_function.1.bias': 0, 'conv4_x.14.residual_function.1.weight': 0, 'conv4_x.14.residual_function.0.weight': 0, 'conv4_x.13.residual_function.7.bias': 0, 'conv4_x.13.residual_function.7.weight': 0, 'conv4_x.13.residual_function.6.weight': 0, 'conv4_x.13.residual_function.4.bias': 0, 'conv4_x.13.residual_function.4.weight': 0, 'conv4_x.13.residual_function.3.weight': 0, 'conv4_x.13.residual_function.1.bias': 0, 'conv4_x.13.residual_function.1.weight': 0, 'conv4_x.13.residual_function.0.weight': 0, 'conv4_x.12.residual_function.7.bias': 0, 'conv4_x.12.residual_function.7.weight': 0, 'conv4_x.12.residual_function.6.weight': 0, 'conv4_x.12.residual_function.4.bias': 0, 'conv4_x.12.residual_function.4.weight': 0, 'conv4_x.12.residual_function.3.weight': 0, 'conv4_x.12.residual_function.1.bias': 0, 'conv4_x.12.residual_function.1.weight': 0, 'conv4_x.12.residual_function.0.weight': 0, 'conv4_x.11.residual_function.7.bias': 0, 'conv4_x.11.residual_function.7.weight': 0, 'conv4_x.11.residual_function.6.weight': 0, 'conv4_x.11.residual_function.4.bias': 0, 'conv4_x.11.residual_function.4.weight': 0, 'conv4_x.11.residual_function.3.weight': 0, 'conv4_x.11.residual_function.1.bias': 0, 'conv4_x.11.residual_function.1.weight': 0, 'conv4_x.11.residual_function.0.weight': 0, 'conv4_x.10.residual_function.7.bias': 0, 'conv4_x.10.residual_function.7.weight': 0, 'conv4_x.10.residual_function.6.weight': 0, 'conv4_x.10.residual_function.4.bias': 0, 'conv4_x.10.residual_function.4.weight': 0, 'conv4_x.10.residual_function.3.weight': 0, 'conv4_x.10.residual_function.1.bias': 0, 'conv4_x.10.residual_function.1.weight': 0, 'conv4_x.10.residual_function.0.weight': 0, 'conv4_x.9.residual_function.7.bias': 0, 'conv4_x.9.residual_function.7.weight': 0, 'conv4_x.9.residual_function.6.weight': 0, 'conv4_x.9.residual_function.4.bias': 0, 'conv4_x.9.residual_function.4.weight': 0, 'conv4_x.9.residual_function.3.weight': 0, 'conv4_x.9.residual_function.1.bias': 0, 'conv4_x.9.residual_function.1.weight': 0, 'conv4_x.9.residual_function.0.weight': 0, 'conv4_x.8.residual_function.7.bias': 0, 'conv4_x.8.residual_function.7.weight': 0, 'conv4_x.8.residual_function.6.weight': 0, 'conv4_x.8.residual_function.4.bias': 0, 'conv4_x.8.residual_function.4.weight': 0, 'conv4_x.8.residual_function.3.weight': 0, 'conv4_x.8.residual_function.1.bias': 0, 'conv4_x.8.residual_function.1.weight': 0, 'conv4_x.8.residual_function.0.weight': 0, 'conv4_x.7.residual_function.7.bias': 0, 'conv4_x.7.residual_function.7.weight': 0, 'conv4_x.7.residual_function.6.weight': 0, 'conv4_x.7.residual_function.4.bias': 0, 'conv4_x.7.residual_function.4.weight': 0, 'conv4_x.7.residual_function.3.weight': 0, 'conv4_x.7.residual_function.1.bias': 0, 'conv4_x.7.residual_function.1.weight': 0, 'conv4_x.7.residual_function.0.weight': 0, 'conv4_x.6.residual_function.7.bias': 0, 'conv4_x.6.residual_function.7.weight': 0, 'conv4_x.6.residual_function.6.weight': 0, 'conv4_x.6.residual_function.4.bias': 0, 'conv4_x.6.residual_function.4.weight': 0, 'conv4_x.6.residual_function.3.weight': 0, 'conv4_x.6.residual_function.1.bias': 0, 'conv4_x.6.residual_function.1.weight': 0, 'conv4_x.6.residual_function.0.weight': 0, 'conv4_x.5.residual_function.7.bias': 0, 'conv4_x.5.residual_function.7.weight': 0, 'conv4_x.5.residual_function.6.weight': 0, 'conv4_x.5.residual_function.4.bias': 0, 'conv4_x.5.residual_function.4.weight': 0, 'conv4_x.5.residual_function.3.weight': 0, 'conv4_x.5.residual_function.1.bias': 0, 'conv4_x.5.residual_function.1.weight': 0, 'conv4_x.5.residual_function.0.weight': 0, 'conv4_x.4.residual_function.7.bias': 0, 'conv4_x.4.residual_function.7.weight': 0, 'conv4_x.4.residual_function.6.weight': 0, 'conv4_x.4.residual_function.4.bias': 0, 'conv4_x.4.residual_function.4.weight': 0, 'conv4_x.4.residual_function.3.weight': 0, 'conv4_x.4.residual_function.1.bias': 0, 'conv4_x.4.residual_function.1.weight': 0, 'conv4_x.4.residual_function.0.weight': 0, 'conv4_x.3.residual_function.7.bias': 0, 'conv4_x.3.residual_function.7.weight': 0, 'conv4_x.3.residual_function.6.weight': 0, 'conv4_x.3.residual_function.4.bias': 0, 'conv4_x.3.residual_function.4.weight': 0, 'conv4_x.3.residual_function.3.weight': 0, 'conv4_x.3.residual_function.1.bias': 0, 'conv4_x.3.residual_function.1.weight': 0, 'conv4_x.3.residual_function.0.weight': 0, 'conv4_x.2.residual_function.7.bias': 0, 'conv4_x.2.residual_function.7.weight': 0, 'conv4_x.2.residual_function.6.weight': 0, 'conv4_x.2.residual_function.4.bias': 0, 'conv4_x.2.residual_function.4.weight': 0, 'conv4_x.2.residual_function.3.weight': 0, 'conv4_x.2.residual_function.1.bias': 0, 'conv4_x.2.residual_function.1.weight': 0, 'conv4_x.2.residual_function.0.weight': 0, 'conv4_x.1.residual_function.7.bias': 0, 'conv4_x.1.residual_function.7.weight': 0, 'conv4_x.1.residual_function.6.weight': 0, 'conv4_x.1.residual_function.4.bias': 0, 'conv4_x.1.residual_function.4.weight': 0, 'conv4_x.1.residual_function.3.weight': 0, 'conv4_x.1.residual_function.1.bias': 0, 'conv4_x.1.residual_function.1.weight': 0, 'conv4_x.1.residual_function.0.weight': 0, 'conv4_x.0.shortcut.1.bias': 0, 'conv4_x.0.shortcut.1.weight': 0, 'conv4_x.0.shortcut.0.weight': 0, 'conv4_x.0.residual_function.7.bias': 0, 'conv4_x.0.residual_function.7.weight': 0, 'conv4_x.0.residual_function.6.weight': 0, 'conv4_x.0.residual_function.4.bias': 0, 'conv4_x.0.residual_function.4.weight': 0, 'conv4_x.0.residual_function.3.weight': 0, 'conv4_x.0.residual_function.1.bias': 0, 'conv4_x.0.residual_function.1.weight': 0, 'conv4_x.0.residual_function.0.weight': 0, 'conv3_x.7.residual_function.7.bias': 0, 'conv3_x.7.residual_function.7.weight': 0, 'conv3_x.7.residual_function.6.weight': 0, 'conv3_x.7.residual_function.4.bias': 0, 'conv3_x.7.residual_function.4.weight': 0, 'conv3_x.7.residual_function.3.weight': 0, 'conv3_x.7.residual_function.1.bias': 0, 'conv3_x.7.residual_function.1.weight': 0, 'conv3_x.7.residual_function.0.weight': 0, 'conv3_x.6.residual_function.7.bias': 0, 'conv3_x.6.residual_function.7.weight': 0, 'conv3_x.6.residual_function.6.weight': 0, 'conv3_x.6.residual_function.4.bias': 0, 'conv3_x.6.residual_function.4.weight': 0, 'conv3_x.6.residual_function.3.weight': 0, 'conv3_x.6.residual_function.1.bias': 0, 'conv3_x.6.residual_function.1.weight': 0, 'conv3_x.6.residual_function.0.weight': 0, 'conv3_x.5.residual_function.7.bias': 0, 'conv3_x.5.residual_function.7.weight': 0, 'conv3_x.5.residual_function.6.weight': 0, 'conv3_x.5.residual_function.4.bias': 0, 'conv3_x.5.residual_function.4.weight': 0, 'conv3_x.5.residual_function.3.weight': 0, 'conv3_x.5.residual_function.1.bias': 0, 'conv3_x.5.residual_function.1.weight': 0, 'conv3_x.5.residual_function.0.weight': 0, 'conv3_x.4.residual_function.7.bias': 0, 'conv3_x.4.residual_function.7.weight': 0, 'conv3_x.4.residual_function.6.weight': 0, 'conv3_x.4.residual_function.4.bias': 0, 'conv3_x.4.residual_function.4.weight': 0, 'conv3_x.4.residual_function.3.weight': 0, 'conv3_x.4.residual_function.1.bias': 0, 'conv3_x.4.residual_function.1.weight': 0, 'conv3_x.4.residual_function.0.weight': 0, 'conv3_x.3.residual_function.7.bias': 0, 'conv3_x.3.residual_function.7.weight': 0, 'conv3_x.3.residual_function.6.weight': 0, 'conv3_x.3.residual_function.4.bias': 0, 'conv3_x.3.residual_function.4.weight': 0, 'conv3_x.3.residual_function.3.weight': 0, 'conv3_x.3.residual_function.1.bias': 0, 'conv3_x.3.residual_function.1.weight': 0, 'conv3_x.3.residual_function.0.weight': 0, 'conv3_x.2.residual_function.7.bias': 0, 'conv3_x.2.residual_function.7.weight': 0, 'conv3_x.2.residual_function.6.weight': 0, 'conv3_x.2.residual_function.4.bias': 0, 'conv3_x.2.residual_function.4.weight': 0, 'conv3_x.2.residual_function.3.weight': 0, 'conv3_x.2.residual_function.1.bias': 0, 'conv3_x.2.residual_function.1.weight': 0, 'conv3_x.2.residual_function.0.weight': 0, 'conv3_x.1.residual_function.7.bias': 0, 'conv3_x.1.residual_function.7.weight': 0, 'conv3_x.1.residual_function.6.weight': 0, 'conv3_x.1.residual_function.4.bias': 0, 'conv3_x.1.residual_function.4.weight': 0, 'conv3_x.1.residual_function.3.weight': 0, 'conv3_x.1.residual_function.1.bias': 0, 'conv3_x.1.residual_function.1.weight': 0, 'conv3_x.1.residual_function.0.weight': 0, 'conv3_x.0.shortcut.1.bias': 0, 'conv3_x.0.shortcut.1.weight': 0, 'conv3_x.0.shortcut.0.weight': 0, 'conv3_x.0.residual_function.7.bias': 0, 'conv3_x.0.residual_function.7.weight': 0, 'conv3_x.0.residual_function.6.weight': 0, 'conv3_x.0.residual_function.4.bias': 0, 'conv3_x.0.residual_function.4.weight': 0, 'conv3_x.0.residual_function.3.weight': 0, 'conv3_x.0.residual_function.1.bias': 0, 'conv3_x.0.residual_function.1.weight': 0, 'conv3_x.0.residual_function.0.weight': 0, 'conv2_x.2.residual_function.7.bias': 0, 'conv2_x.2.residual_function.7.weight': 0, 'conv2_x.2.residual_function.6.weight': 0, 'conv2_x.2.residual_function.4.bias': 0, 'conv2_x.2.residual_function.4.weight': 0, 'conv2_x.2.residual_function.3.weight': 0, 'conv2_x.2.residual_function.1.bias': 0, 'conv2_x.2.residual_function.1.weight': 0, 'conv2_x.2.residual_function.0.weight': 0, 'conv2_x.1.residual_function.7.bias': 0, 'conv2_x.1.residual_function.7.weight': 0, 'conv2_x.1.residual_function.6.weight': 0, 'conv2_x.1.residual_function.4.bias': 0, 'conv2_x.1.residual_function.4.weight': 0, 'conv2_x.1.residual_function.3.weight': 0, 'conv2_x.1.residual_function.1.bias': 0, 'conv2_x.1.residual_function.1.weight': 0, 'conv2_x.1.residual_function.0.weight': 0, 'conv2_x.0.shortcut.1.bias': 0, 'conv2_x.0.shortcut.1.weight': 0, 'conv2_x.0.shortcut.0.weight': 0, 'conv2_x.0.residual_function.7.bias': 0, 'conv2_x.0.residual_function.7.weight': 0, 'conv2_x.0.residual_function.6.weight': 0, 'conv2_x.0.residual_function.4.bias': 0, 'conv2_x.0.residual_function.4.weight': 0, 'conv2_x.0.residual_function.3.weight': 0, 'conv2_x.0.residual_function.1.bias': 0, 'conv2_x.0.residual_function.1.weight': 0, 'conv2_x.0.residual_function.0.weight': 0, 'conv1.1.bias': 0, 'conv1.1.weight': 0, 'conv1.0.weight': 0}
2025-06-08 10:46:24,636 [allreducer.py:710] INFO offsets: 
2025-06-08 10:46:24,636 [allreducer.py:347] INFO dynamic densities = [0.01]
2025-06-08 10:46:24,647 [allreducer.py:987] INFO Allreducer thread started ...
2025-06-08 10:46:24,647 [main_trainer.py:135] INFO Start training ....
2025-06-08 10:46:44,031 [main_trainer.py:163] INFO Time per iteration including communication: 0.923011. computation: 0.749721. Speed: 17.334569 images/s, current density: 0.010000
2025-06-08 10:47:00,621 [main_trainer.py:163] INFO Time per iteration including communication: 0.877352. computation: 0.705360. Speed: 18.236690 images/s, current density: 0.010000
2025-06-08 10:47:08,044 [allreducer.py:802] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-08 10:47:08,045 [allreducer.py:853] INFO [rank:0]total[58341028]: 0.000000,0.000092,0.040925,0.082925,0.010471,0.000000,0.000000
2025-06-08 10:47:17,198 [main_trainer.py:163] INFO Time per iteration including communication: 0.861437. computation: 0.689157. Speed: 18.573615 images/s, current density: 0.010000
2025-06-08 10:47:48,053 [main_trainer.py:302] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-08 10:47:48,053 [main_trainer.py:303] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-08 10:47:52,441 [dl_trainer.py:299] INFO target_sparsities: [1.0]
2025-06-08 10:47:52,441 [dl_trainer.py:311] INFO num_batches_per_epoch: 520
2025-06-08 10:47:52,441 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-08 10:47:53,503 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-08 10:47:53,560 [allreducer.py:284] INFO density: 0.010000
2025-06-08 10:47:53,560 [allreducer.py:285] INFO threshold scale: 1.092000
2025-06-08 10:47:53,562 [allreducer.py:713] INFO offsets: 
2025-06-08 10:47:53,562 [allreducer.py:347] INFO dynamic densities = [0.01]
2025-06-08 10:47:53,571 [allreducer.py:990] INFO Allreducer thread started ...
2025-06-08 10:47:53,571 [main_trainer.py:135] INFO Start training ....
2025-06-08 10:48:13,010 [main_trainer.py:163] INFO Time per iteration including communication: 0.925660. computation: 0.750937. Speed: 17.284973 images/s, current density: 0.010000
2025-06-08 10:48:29,598 [main_trainer.py:163] INFO Time per iteration including communication: 0.878664. computation: 0.705472. Speed: 18.209469 images/s, current density: 0.010000
2025-06-08 10:48:36,978 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-08 10:48:36,978 [allreducer.py:856] INFO [rank:0]total[58341028]: 0.000000,0.000080,0.039254,0.083178,0.009735,0.000000,0.000000
2025-06-08 10:48:46,093 [main_trainer.py:163] INFO Time per iteration including communication: 0.860985. computation: 0.689570. Speed: 18.583372 images/s, current density: 0.010000
2025-06-08 10:49:02,603 [main_trainer.py:163] INFO Time per iteration including communication: 0.852212. computation: 0.681604. Speed: 18.774679 images/s, current density: 0.010000
2025-06-08 10:49:18,280 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-08 10:49:18,281 [allreducer.py:856] INFO [rank:0]total[58341028]: 0.000000,0.000079,0.040632,0.081448,0.007984,0.000000,0.000000
2025-06-08 10:49:19,152 [main_trainer.py:163] INFO Time per iteration including communication: 0.847301. computation: 0.677029. Speed: 18.883493 images/s, current density: 0.010000
2025-06-08 10:49:35,684 [main_trainer.py:163] INFO Time per iteration including communication: 0.843872. computation: 0.673883. Speed: 18.960216 images/s, current density: 0.010000
2025-06-08 10:49:52,216 [main_trainer.py:163] INFO Time per iteration including communication: 0.841418. computation: 0.671547. Speed: 19.015524 images/s, current density: 0.010000
2025-06-08 10:49:59,614 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-08 10:49:59,615 [allreducer.py:856] INFO [rank:0]total[58341028]: 0.000000,0.000078,0.040465,0.081480,0.009595,0.000000,0.000000
2025-06-08 10:50:08,740 [main_trainer.py:163] INFO Time per iteration including communication: 0.839525. computation: 0.669275. Speed: 19.058394 images/s, current density: 0.010000
2025-06-08 10:50:25,288 [main_trainer.py:163] INFO Time per iteration including communication: 0.838181. computation: 0.667990. Speed: 19.088955 images/s, current density: 0.010000
2025-06-08 10:50:41,019 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-08 10:50:41,019 [allreducer.py:856] INFO [rank:0]total[58341028]: 0.000000,0.000079,0.040583,0.083110,0.008060,0.000000,0.000000
2025-06-08 10:50:41,890 [main_trainer.py:163] INFO Time per iteration including communication: 0.837372. computation: 0.667009. Speed: 19.107404 images/s, current density: 0.010000
2025-06-08 10:50:58,441 [main_trainer.py:163] INFO Time per iteration including communication: 0.836477. computation: 0.666196. Speed: 19.127850 images/s, current density: 0.010000
2025-06-08 10:51:14,984 [main_trainer.py:163] INFO Time per iteration including communication: 0.835701. computation: 0.665523. Speed: 19.145603 images/s, current density: 0.010000
2025-06-08 10:51:22,385 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-08 10:51:22,386 [allreducer.py:856] INFO [rank:0]total[58341028]: 0.000000,0.000078,0.040217,0.081962,0.008010,0.000000,0.000000
2025-06-08 10:51:31,527 [main_trainer.py:163] INFO Time per iteration including communication: 0.835043. computation: 0.664956. Speed: 19.160696 images/s, current density: 0.010000
2025-06-08 10:51:48,057 [main_trainer.py:163] INFO Time per iteration including communication: 0.834432. computation: 0.664441. Speed: 19.174727 images/s, current density: 0.010000
2025-06-08 10:52:03,735 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-08 10:52:03,735 [allreducer.py:856] INFO [rank:0]total[58341028]: 0.000000,0.000078,0.040511,0.081981,0.008082,0.000000,0.000000
2025-06-08 10:52:04,604 [main_trainer.py:163] INFO Time per iteration including communication: 0.833960. computation: 0.663977. Speed: 19.185575 images/s, current density: 0.010000
2025-06-08 10:52:21,266 [main_trainer.py:163] INFO Time per iteration including communication: 0.833904. computation: 0.663666. Speed: 19.186859 images/s, current density: 0.010000
2025-06-08 10:52:37,729 [main_trainer.py:163] INFO Time per iteration including communication: 0.833268. computation: 0.663106. Speed: 19.201506 images/s, current density: 0.010000
2025-06-08 10:52:45,127 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-08 10:52:45,128 [allreducer.py:856] INFO [rank:0]total[58341028]: 0.000000,0.000081,0.039629,0.082557,0.009560,0.000000,0.000000
2025-06-08 10:52:54,247 [main_trainer.py:163] INFO Time per iteration including communication: 0.832859. computation: 0.662811. Speed: 19.210939 images/s, current density: 0.010000
2025-06-08 10:53:10,799 [main_trainer.py:163] INFO Time per iteration including communication: 0.832581. computation: 0.662549. Speed: 19.217361 images/s, current density: 0.010000
2025-06-08 10:53:26,477 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-08 10:53:26,478 [allreducer.py:856] INFO [rank:0]total[58341028]: 0.000000,0.000082,0.039337,0.082071,0.008031,0.000000,0.000000
2025-06-08 10:53:27,350 [main_trainer.py:163] INFO Time per iteration including communication: 0.832327. computation: 0.662291. Speed: 19.223206 images/s, current density: 0.010000
2025-06-08 10:53:43,923 [main_trainer.py:163] INFO Time per iteration including communication: 0.832152. computation: 0.662083. Speed: 19.227263 images/s, current density: 0.010000
2025-06-08 13:13:53,695 [main_trainer.py:304] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-08 13:13:53,696 [main_trainer.py:305] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-08 13:13:58,459 [dl_trainer.py:299] INFO target_sparsities: [1.0]
2025-06-08 13:13:58,460 [dl_trainer.py:311] INFO num_batches_per_epoch: 520
2025-06-08 13:13:58,460 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-08 13:13:59,565 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-08 13:13:59,638 [allreducer.py:284] INFO density: 0.010000
2025-06-08 13:13:59,639 [allreducer.py:285] INFO threshold scale: 1.092000
2025-06-08 13:13:59,641 [allreducer.py:712] INFO offsets: 
2025-06-08 13:13:59,641 [allreducer.py:347] INFO dynamic densities = [0.01]
2025-06-08 13:13:59,651 [allreducer.py:993] INFO Allreducer thread started ...
2025-06-08 13:13:59,652 [main_trainer.py:135] INFO Start training ....
2025-06-08 13:14:19,065 [main_trainer.py:164] INFO Time per iteration including communication: 0.924389. computation: 0.750247. Speed: 17.308735 images/s, current density: 0.010000
2025-06-08 13:14:35,656 [main_trainer.py:164] INFO Time per iteration including communication: 0.878098. computation: 0.705328. Speed: 18.221191 images/s, current density: 0.010000
2025-06-08 13:14:43,054 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-08 13:14:43,054 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000083,0.041707,0.082423,0.009939,0.000000,0.000000
2025-06-08 13:14:52,186 [main_trainer.py:164] INFO Time per iteration including communication: 0.861152. computation: 0.689855. Speed: 18.579774 images/s, current density: 0.010000
2025-06-08 13:15:08,724 [main_trainer.py:164] INFO Time per iteration including communication: 0.852688. computation: 0.682065. Speed: 18.764187 images/s, current density: 0.010000
2025-06-08 13:15:24,414 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-08 13:15:24,415 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000083,0.042912,0.081830,0.008294,0.000000,0.000000
2025-06-08 13:15:25,284 [main_trainer.py:164] INFO Time per iteration including communication: 0.847789. computation: 0.677175. Speed: 18.872630 images/s, current density: 0.010000
2025-06-08 13:15:41,816 [main_trainer.py:164] INFO Time per iteration including communication: 0.844274. computation: 0.673856. Speed: 18.951195 images/s, current density: 0.010000
2025-06-08 13:15:58,360 [main_trainer.py:164] INFO Time per iteration including communication: 0.841842. computation: 0.671521. Speed: 19.005948 images/s, current density: 0.010000
2025-06-08 13:16:05,765 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-08 13:16:05,765 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000079,0.041464,0.081853,0.010402,0.000000,0.000000
2025-06-09 05:06:43,541 [main_trainer.py:304] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-09 05:06:43,541 [main_trainer.py:305] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-09 05:06:48,288 [dl_trainer.py:299] INFO target_sparsities: [1.0]
2025-06-09 05:06:48,288 [dl_trainer.py:311] INFO num_batches_per_epoch: 520
2025-06-09 05:06:48,289 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-09 05:06:49,364 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-09 05:06:49,423 [allreducer.py:284] INFO density: 0.010000
2025-06-09 05:06:49,423 [allreducer.py:285] INFO threshold scale: 1.092000
2025-06-09 05:06:49,425 [allreducer.py:712] INFO offsets: 
2025-06-09 05:06:49,425 [allreducer.py:347] INFO dynamic densities = [0.01]
2025-06-09 05:06:49,435 [allreducer.py:993] INFO Allreducer thread started ...
2025-06-09 05:06:49,435 [main_trainer.py:135] INFO Start training ....
2025-06-09 05:07:08,824 [main_trainer.py:164] INFO Time per iteration including communication: 0.923268. computation: 0.746361. Speed: 17.329748 images/s, current density: 0.010000
2025-06-09 05:07:43,838 [main_trainer.py:304] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-09 05:07:43,838 [main_trainer.py:305] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-09 05:07:48,424 [dl_trainer.py:299] INFO target_sparsities: [1.0]
2025-06-09 05:07:48,425 [dl_trainer.py:311] INFO num_batches_per_epoch: 520
2025-06-09 05:07:48,425 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-09 05:07:49,499 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-09 05:07:49,553 [allreducer.py:284] INFO density: 0.010000
2025-06-09 05:07:49,553 [allreducer.py:285] INFO threshold scale: 1.092000
2025-06-09 05:07:49,555 [allreducer.py:712] INFO offsets: 
2025-06-09 05:07:49,555 [allreducer.py:347] INFO dynamic densities = [0.01]
2025-06-09 05:07:49,565 [allreducer.py:993] INFO Allreducer thread started ...
2025-06-09 05:07:49,566 [main_trainer.py:135] INFO Start training ....
2025-06-09 05:08:08,966 [main_trainer.py:164] INFO Time per iteration including communication: 0.923780. computation: 0.750353. Speed: 17.320147 images/s, current density: 0.010000
2025-06-09 05:08:25,533 [main_trainer.py:164] INFO Time per iteration including communication: 0.877221. computation: 0.705513. Speed: 18.239427 images/s, current density: 0.010000
2025-06-09 05:08:32,933 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 05:08:32,933 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000082,0.042305,0.082867,0.009185,0.000000,0.000000
2025-06-09 05:08:42,066 [main_trainer.py:164] INFO Time per iteration including communication: 0.860630. computation: 0.689383. Speed: 18.591033 images/s, current density: 0.010000
2025-06-09 05:08:58,602 [main_trainer.py:164] INFO Time per iteration including communication: 0.852266. computation: 0.681715. Speed: 18.773473 images/s, current density: 0.010000
2025-06-09 05:09:14,256 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 05:09:14,257 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000080,0.043182,0.081914,0.007716,0.000000,0.000000
2025-06-09 05:09:15,122 [main_trainer.py:164] INFO Time per iteration including communication: 0.847056. computation: 0.677086. Speed: 18.888952 images/s, current density: 0.010000
2025-06-09 05:58:38,614 [main_trainer.py:304] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-09 05:58:38,614 [main_trainer.py:305] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-09 05:58:43,342 [dl_trainer.py:299] INFO target_sparsities: [1.0]
2025-06-09 05:58:43,343 [dl_trainer.py:311] INFO num_batches_per_epoch: 520
2025-06-09 05:58:43,344 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-09 05:58:44,429 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-09 05:58:44,493 [allreducer.py:284] INFO density: 0.010000
2025-06-09 05:58:44,493 [allreducer.py:285] INFO threshold scale: 1.092000
2025-06-09 05:58:44,496 [allreducer.py:712] INFO offsets: 
2025-06-09 05:58:44,496 [allreducer.py:347] INFO dynamic densities = [0.01]
2025-06-09 05:58:44,502 [allreducer.py:993] INFO Allreducer thread started ...
2025-06-09 05:58:44,502 [main_trainer.py:135] INFO Start training ....
2025-06-09 05:59:03,855 [main_trainer.py:164] INFO Time per iteration including communication: 0.921518. computation: 0.748971. Speed: 17.362655 images/s, current density: 0.010000
2025-06-09 05:59:20,446 [main_trainer.py:164] INFO Time per iteration including communication: 0.876641. computation: 0.704511. Speed: 18.251483 images/s, current density: 0.010000
2025-06-09 05:59:27,842 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 05:59:27,843 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000084,0.040703,0.081738,0.010501,0.000000,0.000000
2025-06-09 05:59:36,977 [main_trainer.py:164] INFO Time per iteration including communication: 0.860192. computation: 0.689271. Speed: 18.600494 images/s, current density: 0.010000
2025-06-09 05:59:53,522 [main_trainer.py:164] INFO Time per iteration including communication: 0.852059. computation: 0.681448. Speed: 18.778048 images/s, current density: 0.010000
2025-06-09 06:00:09,183 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 06:00:09,184 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000081,0.040969,0.081091,0.008025,0.000000,0.000000
2025-06-09 06:00:10,050 [main_trainer.py:164] INFO Time per iteration including communication: 0.846964. computation: 0.676906. Speed: 18.891012 images/s, current density: 0.010000
2025-06-09 06:00:26,592 [main_trainer.py:164] INFO Time per iteration including communication: 0.843673. computation: 0.673794. Speed: 18.964696 images/s, current density: 0.010000
2025-06-09 06:00:43,124 [main_trainer.py:164] INFO Time per iteration including communication: 0.841244. computation: 0.671523. Speed: 19.019457 images/s, current density: 0.010000
2025-06-09 06:00:50,534 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 06:00:50,534 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000079,0.041518,0.081718,0.010224,0.000000,0.000000
2025-06-09 06:00:59,675 [main_trainer.py:164] INFO Time per iteration including communication: 0.839536. computation: 0.669135. Speed: 19.058155 images/s, current density: 0.010000
2025-06-09 06:01:16,238 [main_trainer.py:164] INFO Time per iteration including communication: 0.838278. computation: 0.667972. Speed: 19.086739 images/s, current density: 0.010000
2025-06-09 06:01:31,996 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 06:01:31,996 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000079,0.041732,0.083001,0.008181,0.000000,0.000000
2025-06-09 06:01:32,865 [main_trainer.py:164] INFO Time per iteration including communication: 0.837586. computation: 0.667144. Speed: 19.102509 images/s, current density: 0.010000
2025-06-09 06:01:49,420 [main_trainer.py:164] INFO Time per iteration including communication: 0.836689. computation: 0.666385. Speed: 19.123001 images/s, current density: 0.010000
2025-06-09 06:02:05,989 [main_trainer.py:164] INFO Time per iteration including communication: 0.836002. computation: 0.665781. Speed: 19.138718 images/s, current density: 0.010000
2025-06-09 06:02:13,400 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 06:02:13,401 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000079,0.041764,0.081649,0.008150,0.000000,0.000000
2025-06-09 06:02:22,540 [main_trainer.py:164] INFO Time per iteration including communication: 0.835352. computation: 0.665323. Speed: 19.153609 images/s, current density: 0.010000
2025-06-09 06:02:39,092 [main_trainer.py:164] INFO Time per iteration including communication: 0.834795. computation: 0.664891. Speed: 19.166382 images/s, current density: 0.010000
2025-06-09 06:02:54,785 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 06:02:54,786 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000079,0.040700,0.081753,0.008062,0.000000,0.000000
2025-06-09 06:02:55,659 [main_trainer.py:164] INFO Time per iteration including communication: 0.834367. computation: 0.664509. Speed: 19.176225 images/s, current density: 0.010000
2025-06-09 06:03:12,340 [main_trainer.py:164] INFO Time per iteration including communication: 0.834345. computation: 0.664259. Speed: 19.176730 images/s, current density: 0.010000
2025-06-09 06:03:28,828 [main_trainer.py:164] INFO Time per iteration including communication: 0.833756. computation: 0.663772. Speed: 19.190271 images/s, current density: 0.010000
2025-06-09 06:03:36,244 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 06:03:36,244 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000079,0.041792,0.082243,0.009493,0.000000,0.000000
2025-06-09 06:03:45,388 [main_trainer.py:164] INFO Time per iteration including communication: 0.833436. computation: 0.663483. Speed: 19.197635 images/s, current density: 0.010000
2025-06-09 06:04:01,945 [main_trainer.py:164] INFO Time per iteration including communication: 0.833139. computation: 0.663261. Speed: 19.204467 images/s, current density: 0.010000
2025-06-09 06:04:17,632 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 06:04:17,632 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000079,0.041794,0.082413,0.008106,0.000000,0.000000
2025-06-09 06:04:18,501 [main_trainer.py:164] INFO Time per iteration including communication: 0.832871. computation: 0.663089. Speed: 19.210648 images/s, current density: 0.010000
2025-06-09 06:04:35,066 [main_trainer.py:164] INFO Time per iteration including communication: 0.832650. computation: 0.662846. Speed: 19.215760 images/s, current density: 0.010000
2025-06-09 06:04:51,617 [main_trainer.py:164] INFO Time per iteration including communication: 0.832418. computation: 0.662630. Speed: 19.221106 images/s, current density: 0.010000
2025-06-09 06:04:59,036 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 06:04:59,036 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000080,0.041938,0.081549,0.009615,0.000000,0.000000
2025-06-09 06:05:08,200 [main_trainer.py:164] INFO Time per iteration including communication: 0.832272. computation: 0.662328. Speed: 19.224493 images/s, current density: 0.010000
2025-06-09 06:05:24,773 [main_trainer.py:164] INFO Time per iteration including communication: 0.832119. computation: 0.662194. Speed: 19.228014 images/s, current density: 0.010000
2025-06-09 06:46:22,148 [main_trainer.py:307] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-09 06:46:22,149 [main_trainer.py:308] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-09 06:46:26,817 [dl_trainer.py:299] INFO target_sparsities: [1.0]
2025-06-09 06:46:26,818 [dl_trainer.py:311] INFO num_batches_per_epoch: 520
2025-06-09 06:46:26,818 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-09 06:46:27,891 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-09 06:46:27,946 [allreducer.py:284] INFO density: 0.010000
2025-06-09 06:46:27,946 [allreducer.py:285] INFO threshold scale: 1.092000
2025-06-09 06:46:27,948 [allreducer.py:712] INFO offsets: 
2025-06-09 06:46:27,948 [allreducer.py:347] INFO dynamic densities = [0.01]
2025-06-09 06:46:27,956 [allreducer.py:993] INFO Allreducer thread started ...
2025-06-09 06:46:27,957 [main_trainer.py:135] INFO Start training ....
2025-06-09 06:46:47,330 [main_trainer.py:166] INFO Time per iteration including communication: 0.922520. computation: 0.750233. Speed: 17.343794 images/s, current density: 0.010000
2025-06-09 06:47:03,942 [main_trainer.py:166] INFO Time per iteration including communication: 0.877663. computation: 0.706290. Speed: 18.230242 images/s, current density: 0.010000
2025-06-09 06:47:11,355 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 06:47:11,356 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000085,0.042446,0.084645,0.009299,0.000000,0.000000
2025-06-09 06:47:20,485 [main_trainer.py:166] INFO Time per iteration including communication: 0.861091. computation: 0.691080. Speed: 18.581078 images/s, current density: 0.010000
2025-06-09 06:47:37,029 [main_trainer.py:166] INFO Time per iteration including communication: 0.852714. computation: 0.683459. Speed: 18.763621 images/s, current density: 0.010000
2025-06-09 06:47:52,711 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 06:47:52,711 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000087,0.042650,0.083316,0.007745,0.000000,0.000000
2025-06-09 06:47:53,582 [main_trainer.py:166] INFO Time per iteration including communication: 0.847742. computation: 0.678772. Speed: 18.873672 images/s, current density: 0.010000
2025-06-09 06:48:10,135 [main_trainer.py:166] INFO Time per iteration including communication: 0.844412. computation: 0.675622. Speed: 18.948092 images/s, current density: 0.010000
2025-06-09 06:48:26,686 [main_trainer.py:166] INFO Time per iteration including communication: 0.842015. computation: 0.673388. Speed: 19.002027 images/s, current density: 0.010000
2025-06-09 06:48:34,090 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 06:48:34,090 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000086,0.042563,0.083223,0.009161,0.000000,0.000000
2025-06-09 06:48:43,239 [main_trainer.py:166] INFO Time per iteration including communication: 0.840226. computation: 0.671360. Speed: 19.042506 images/s, current density: 0.010000
2025-06-09 06:48:59,813 [main_trainer.py:166] INFO Time per iteration including communication: 0.838947. computation: 0.670061. Speed: 19.071524 images/s, current density: 0.010000
2025-06-09 06:49:15,575 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 06:49:15,576 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000083,0.041243,0.082466,0.007865,0.000000,0.000000
2025-06-09 06:49:16,445 [main_trainer.py:166] INFO Time per iteration including communication: 0.838210. computation: 0.669103. Speed: 19.088304 images/s, current density: 0.010000
2025-06-09 06:49:33,021 [main_trainer.py:166] INFO Time per iteration including communication: 0.837356. computation: 0.668306. Speed: 19.107772 images/s, current density: 0.010000
2025-06-09 06:49:49,600 [main_trainer.py:166] INFO Time per iteration including communication: 0.836652. computation: 0.667667. Speed: 19.123851 images/s, current density: 0.010000
2025-06-09 06:49:57,019 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 06:49:57,019 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000079,0.043116,0.081209,0.008543,0.000000,0.000000
2025-06-09 06:50:06,183 [main_trainer.py:166] INFO Time per iteration including communication: 0.836073. computation: 0.666970. Speed: 19.137096 images/s, current density: 0.010000
2025-06-09 06:50:22,758 [main_trainer.py:166] INFO Time per iteration including communication: 0.835549. computation: 0.666453. Speed: 19.149092 images/s, current density: 0.010000
2025-06-09 06:50:38,461 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 06:50:38,462 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000080,0.044558,0.082192,0.007902,0.000000,0.000000
2025-06-09 06:50:39,333 [main_trainer.py:166] INFO Time per iteration including communication: 0.835095. computation: 0.665963. Speed: 19.159500 images/s, current density: 0.010000
2025-06-09 06:50:56,042 [main_trainer.py:166] INFO Time per iteration including communication: 0.835112. computation: 0.665635. Speed: 19.159100 images/s, current density: 0.010000
2025-06-09 06:51:12,550 [main_trainer.py:166] INFO Time per iteration including communication: 0.834540. computation: 0.665130. Speed: 19.172231 images/s, current density: 0.010000
2025-06-09 06:51:19,973 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 06:51:19,973 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000080,0.042140,0.081904,0.009884,0.000000,0.000000
2025-06-09 06:51:29,126 [main_trainer.py:166] INFO Time per iteration including communication: 0.834216. computation: 0.664811. Speed: 19.179689 images/s, current density: 0.010000
2025-06-09 06:51:45,689 [main_trainer.py:166] INFO Time per iteration including communication: 0.833897. computation: 0.664569. Speed: 19.187033 images/s, current density: 0.010000
2025-06-09 06:52:01,394 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 06:52:01,395 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000080,0.043294,0.081667,0.007908,0.000000,0.000000
2025-06-09 06:52:02,266 [main_trainer.py:166] INFO Time per iteration including communication: 0.833643. computation: 0.664394. Speed: 19.192860 images/s, current density: 0.010000
2025-06-09 06:52:18,858 [main_trainer.py:166] INFO Time per iteration including communication: 0.833447. computation: 0.664181. Speed: 19.197384 images/s, current density: 0.010000
2025-06-09 06:52:35,426 [main_trainer.py:166] INFO Time per iteration including communication: 0.833218. computation: 0.663989. Speed: 19.202660 images/s, current density: 0.010000
2025-06-09 06:52:42,852 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 06:52:42,853 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000080,0.043451,0.081908,0.009664,0.000000,0.000000
2025-06-09 06:52:52,011 [main_trainer.py:166] INFO Time per iteration including communication: 0.833041. computation: 0.663665. Speed: 19.206737 images/s, current density: 0.010000
2025-06-09 11:02:39,829 [main_trainer.py:312] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-09 11:02:39,829 [main_trainer.py:313] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-09 11:02:44,513 [dl_trainer.py:299] INFO target_sparsities: [1.0]
2025-06-09 11:02:44,514 [dl_trainer.py:311] INFO num_batches_per_epoch: 520
2025-06-09 11:02:44,515 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-09 11:02:45,593 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-09 11:02:45,651 [allreducer.py:284] INFO density: 0.010000
2025-06-09 11:02:45,651 [allreducer.py:285] INFO threshold scale: 1.092000
2025-06-09 11:02:45,653 [allreducer.py:712] INFO offsets: 
2025-06-09 11:02:45,653 [allreducer.py:347] INFO dynamic densities = [0.01]
2025-06-09 11:02:45,662 [allreducer.py:993] INFO Allreducer thread started ...
2025-06-09 11:02:45,662 [main_trainer.py:136] INFO Start training ....
2025-06-09 11:03:05,127 [main_trainer.py:170] INFO Time per iteration including communication: 0.926841. computation: 0.752954. compression: 17.262939. Speed: 0.000003 images/s, current density: 0.010000
2025-06-09 11:03:21,702 [main_trainer.py:170] INFO Time per iteration including communication: 0.878965. computation: 0.706310. compression: 18.203221. Speed: 0.000003 images/s, current density: 0.010000
2025-06-09 11:03:29,100 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 11:03:29,100 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000087,0.041767,0.083664,0.010175,0.000000,0.000000
2025-06-09 11:03:38,233 [main_trainer.py:170] INFO Time per iteration including communication: 0.861754. computation: 0.690157. compression: 18.566783. Speed: 0.000003 images/s, current density: 0.010000
2025-06-09 11:03:54,772 [main_trainer.py:170] INFO Time per iteration including communication: 0.853150. computation: 0.682035. compression: 18.754025. Speed: 0.000003 images/s, current density: 0.010000
2025-06-09 11:04:10,424 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 11:04:10,424 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000080,0.041210,0.081940,0.008291,0.000000,0.000000
2025-06-09 11:04:11,293 [main_trainer.py:170] INFO Time per iteration including communication: 0.847780. computation: 0.677253. compression: 18.872822. Speed: 0.000003 images/s, current density: 0.010000
2025-06-09 11:04:27,826 [main_trainer.py:170] INFO Time per iteration including communication: 0.844277. computation: 0.673927. compression: 18.951126. Speed: 0.000002 images/s, current density: 0.010000
2025-06-09 11:29:37,112 [main_trainer.py:314] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-09 11:29:37,112 [main_trainer.py:315] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-09 11:29:41,830 [dl_trainer.py:299] INFO target_sparsities: [1.0]
2025-06-09 11:29:41,831 [dl_trainer.py:311] INFO num_batches_per_epoch: 520
2025-06-09 11:29:41,831 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-09 11:29:42,874 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-09 11:29:42,930 [allreducer.py:284] INFO density: 0.010000
2025-06-09 11:29:42,930 [allreducer.py:285] INFO threshold scale: 1.092000
2025-06-09 11:29:42,932 [allreducer.py:712] INFO offsets: 
2025-06-09 11:29:42,932 [allreducer.py:347] INFO dynamic densities = [0.01]
2025-06-09 11:29:42,942 [allreducer.py:993] INFO Allreducer thread started ...
2025-06-09 11:29:42,942 [main_trainer.py:136] INFO Start training ....
2025-06-09 11:30:02,388 [main_trainer.py:172] INFO Time per iteration including communication: 0.925895. computation: 0.747227. compression: 17.280573. Speed: nan images/s, current density: 0.010000
2025-06-09 11:30:19,018 [main_trainer.py:172] INFO Time per iteration including communication: 0.879852. computation: 0.703868. compression: 18.184871. Speed: nan images/s, current density: 0.010000
2025-06-09 11:30:26,427 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 11:30:26,428 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000080,0.041093,0.085328,0.009875,0.000000,0.000000
2025-06-09 11:30:35,573 [main_trainer.py:172] INFO Time per iteration including communication: 0.862750. computation: 0.689102. compression: 18.545345. Speed: nan images/s, current density: 0.010000
2025-06-09 11:30:52,124 [main_trainer.py:172] INFO Time per iteration including communication: 0.854050. computation: 0.681751. compression: 18.734264. Speed: nan images/s, current density: 0.010000
2025-06-09 11:31:07,818 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 11:31:07,819 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000081,0.042104,0.081397,0.007967,0.000000,0.000000
2025-06-09 11:31:08,689 [main_trainer.py:172] INFO Time per iteration including communication: 0.848928. computation: 0.677212. compression: 18.847299. Speed: nan images/s, current density: 0.010000
2025-06-09 11:31:25,238 [main_trainer.py:172] INFO Time per iteration including communication: 0.845365. computation: 0.674195. compression: 18.926726. Speed: nan images/s, current density: 0.010000
2025-06-09 11:31:41,790 [main_trainer.py:172] INFO Time per iteration including communication: 0.842842. computation: 0.672066. compression: 18.983394. Speed: nan images/s, current density: 0.010000
2025-06-09 11:31:49,210 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 11:31:49,210 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000080,0.041984,0.081864,0.009407,0.000000,0.000000
2025-06-09 11:31:58,347 [main_trainer.py:172] INFO Time per iteration including communication: 0.840975. computation: 0.670011. compression: 19.025542. Speed: nan images/s, current density: 0.010000
2025-06-09 11:32:14,920 [main_trainer.py:172] INFO Time per iteration including communication: 0.839604. computation: 0.668869. compression: 19.056612. Speed: nan images/s, current density: 0.010000
2025-06-09 11:32:30,662 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 11:32:30,662 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000079,0.041464,0.082846,0.007999,0.000000,0.000000
2025-06-09 11:32:31,530 [main_trainer.py:172] INFO Time per iteration including communication: 0.838694. computation: 0.667988. compression: 19.077290. Speed: nan images/s, current density: 0.010000
2025-06-09 11:32:48,100 [main_trainer.py:172] INFO Time per iteration including communication: 0.837768. computation: 0.667163. compression: 19.098362. Speed: nan images/s, current density: 0.010000
2025-06-09 11:33:49,671 [main_trainer.py:314] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-09 11:33:49,671 [main_trainer.py:315] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-09 11:33:54,101 [dl_trainer.py:299] INFO target_sparsities: [1.0]
2025-06-09 11:33:54,101 [dl_trainer.py:311] INFO num_batches_per_epoch: 520
2025-06-09 11:33:54,102 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-09 11:33:55,181 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-09 11:33:55,232 [allreducer.py:284] INFO density: 0.010000
2025-06-09 11:33:55,232 [allreducer.py:285] INFO threshold scale: 1.092000
2025-06-09 11:33:55,234 [allreducer.py:712] INFO offsets: 
2025-06-09 11:33:55,234 [allreducer.py:347] INFO dynamic densities = [0.01]
2025-06-09 11:33:55,242 [allreducer.py:993] INFO Allreducer thread started ...
2025-06-09 11:33:55,242 [main_trainer.py:136] INFO Start training ....
2025-06-09 11:34:14,704 [main_trainer.py:172] INFO Time per iteration including communication: 0.926711. computation: 0.753542. compression: 17.265369. Speed: nan images/s, current density: 0.010000
2025-06-09 11:34:31,336 [main_trainer.py:172] INFO Time per iteration including communication: 0.880291. computation: 0.707346. compression: 18.175804. Speed: nan images/s, current density: 0.010000
2025-06-09 11:34:38,746 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 11:34:38,746 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000084,0.041017,0.085016,0.009815,0.000000,0.000000
2025-06-09 11:34:47,892 [main_trainer.py:172] INFO Time per iteration including communication: 0.863073. computation: 0.691577. compression: 18.538399. Speed: nan images/s, current density: 0.010000
2025-06-09 11:35:04,450 [main_trainer.py:172] INFO Time per iteration including communication: 0.854376. computation: 0.683518. compression: 18.727119. Speed: nan images/s, current density: 0.010000
2025-06-09 11:35:20,131 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 11:35:20,131 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000079,0.043490,0.081106,0.007826,0.000000,0.000000
2025-06-09 11:35:20,999 [main_trainer.py:172] INFO Time per iteration including communication: 0.849032. computation: 0.678754. compression: 18.844990. Speed: nan images/s, current density: 0.010000
2025-06-09 11:35:37,569 [main_trainer.py:172] INFO Time per iteration including communication: 0.845630. computation: 0.675324. compression: 18.920814. Speed: nan images/s, current density: 0.010000
2025-06-09 11:35:54,124 [main_trainer.py:172] INFO Time per iteration including communication: 0.843089. computation: 0.673083. compression: 18.977824. Speed: nan images/s, current density: 0.010000
2025-06-09 11:36:01,550 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 11:36:01,551 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000081,0.042453,0.081586,0.009224,0.000000,0.000000
2025-06-09 11:36:10,453 [main_trainer.py:314] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-09 11:36:10,454 [main_trainer.py:315] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-09 11:36:15,117 [dl_trainer.py:299] INFO target_sparsities: [1.0]
2025-06-09 11:36:15,118 [dl_trainer.py:311] INFO num_batches_per_epoch: 520
2025-06-09 11:36:15,118 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-09 11:36:16,205 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-09 11:36:16,261 [allreducer.py:284] INFO density: 0.010000
2025-06-09 11:36:16,262 [allreducer.py:285] INFO threshold scale: 1.092000
2025-06-09 11:36:16,264 [allreducer.py:712] INFO offsets: 
2025-06-09 11:36:16,264 [allreducer.py:347] INFO dynamic densities = [0.01]
2025-06-09 11:36:16,273 [allreducer.py:993] INFO Allreducer thread started ...
2025-06-09 11:36:16,273 [main_trainer.py:136] INFO Start training ....
2025-06-09 11:36:35,709 [main_trainer.py:172] INFO Time per iteration including communication: 0.925447. computation: 0.753549. compression: nan. Speed: 17.288945 images/s, current density: 0.010000
2025-06-09 11:36:52,313 [main_trainer.py:172] INFO Time per iteration including communication: 0.878959. computation: 0.706373. compression: nan. Speed: 18.203350 images/s, current density: 0.010000
2025-06-09 11:36:59,716 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 11:36:59,717 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000080,0.041074,0.081742,0.010710,0.000000,0.000000
2025-06-09 11:37:08,856 [main_trainer.py:172] INFO Time per iteration including communication: 0.861961. computation: 0.690532. compression: nan. Speed: 18.562316 images/s, current density: 0.010000
2025-06-09 11:38:08,672 [main_trainer.py:314] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-09 11:38:08,673 [main_trainer.py:315] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-09 11:38:13,575 [dl_trainer.py:299] INFO target_sparsities: [1.0]
2025-06-09 11:38:13,575 [dl_trainer.py:311] INFO num_batches_per_epoch: 520
2025-06-09 11:38:13,576 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-09 11:38:14,602 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-09 11:38:14,658 [allreducer.py:284] INFO density: 0.010000
2025-06-09 11:38:14,658 [allreducer.py:285] INFO threshold scale: 1.092000
2025-06-09 11:38:14,660 [allreducer.py:712] INFO offsets: 
2025-06-09 11:38:14,660 [allreducer.py:347] INFO dynamic densities = [0.01]
2025-06-09 11:38:14,671 [allreducer.py:993] INFO Allreducer thread started ...
2025-06-09 11:38:14,671 [main_trainer.py:136] INFO Start training ....
2025-06-09 11:38:34,135 [main_trainer.py:172] INFO Time per iteration including communication: 0.926841. computation: 0.753608. compression: 0.000002. Speed: 17.262931 images/s, current density: 0.010000
2025-06-09 11:38:50,740 [main_trainer.py:172] INFO Time per iteration including communication: 0.879704. computation: 0.706171. compression: 0.000002. Speed: 18.187940 images/s, current density: 0.010000
2025-06-09 11:38:58,134 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 11:38:58,134 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000081,0.040978,0.082328,0.010572,0.000000,0.000000
2025-06-09 11:39:07,278 [main_trainer.py:172] INFO Time per iteration including communication: 0.862377. computation: 0.690385. compression: 0.000002. Speed: 18.553381 images/s, current density: 0.010000
2025-06-09 11:39:23,809 [main_trainer.py:172] INFO Time per iteration including communication: 0.853514. computation: 0.682317. compression: 0.000002. Speed: 18.746035 images/s, current density: 0.010000
2025-06-09 11:39:39,475 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 11:39:39,475 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000077,0.042850,0.081139,0.008105,0.000000,0.000000
2025-06-09 11:39:40,345 [main_trainer.py:172] INFO Time per iteration including communication: 0.848222. computation: 0.677469. compression: 0.000002. Speed: 18.862977 images/s, current density: 0.010000
2025-06-09 11:39:56,890 [main_trainer.py:172] INFO Time per iteration including communication: 0.844748. computation: 0.672838. compression: 0.000002. Speed: 18.940568 images/s, current density: 0.010000
2025-06-09 11:53:01,785 [main_trainer.py:316] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-09 11:53:01,786 [main_trainer.py:317] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-09 11:53:06,428 [dl_trainer.py:300] INFO target_sparsities: [1.0]
2025-06-09 11:53:06,429 [dl_trainer.py:312] INFO num_batches_per_epoch: 520
2025-06-09 11:53:06,429 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-09 11:53:07,507 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-09 11:53:07,556 [allreducer.py:284] INFO density: 0.010000
2025-06-09 11:53:07,556 [allreducer.py:285] INFO threshold scale: 1.092000
2025-06-09 11:53:07,558 [allreducer.py:712] INFO offsets: 
2025-06-09 11:53:07,558 [allreducer.py:347] INFO dynamic densities = [0.01]
2025-06-09 11:53:07,568 [allreducer.py:993] INFO Allreducer thread started ...
2025-06-09 11:53:07,569 [main_trainer.py:136] INFO Start training ....
2025-06-09 11:53:26,954 [main_trainer.py:173] INFO Time per iteration including communication: 0.923063. computation: 0.745482. compression: 0.000002. io: 0.007600. Speed: 17.333590 images/s, current density: 0.010000
2025-06-09 11:53:43,572 [main_trainer.py:173] INFO Time per iteration including communication: 0.878093. computation: 0.703673. compression: 0.000002. io: 0.006647. Speed: 18.221295 images/s, current density: 0.010000
2025-06-09 11:53:50,961 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 11:53:50,962 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000082,0.040042,0.081507,0.011050,0.000000,0.000000
2025-06-09 11:54:07,656 [main_trainer.py:316] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-09 11:54:07,656 [main_trainer.py:317] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-09 11:54:12,522 [dl_trainer.py:300] INFO target_sparsities: [1.0]
2025-06-09 11:54:12,522 [dl_trainer.py:312] INFO num_batches_per_epoch: 520
2025-06-09 11:54:12,523 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-09 11:54:13,594 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-09 11:54:13,678 [allreducer.py:284] INFO density: 0.010000
2025-06-09 11:54:13,678 [allreducer.py:285] INFO threshold scale: 1.092000
2025-06-09 11:54:13,681 [allreducer.py:712] INFO offsets: 
2025-06-09 11:54:13,681 [allreducer.py:347] INFO dynamic densities = [0.01]
2025-06-09 11:54:13,693 [allreducer.py:993] INFO Allreducer thread started ...
2025-06-09 11:54:13,693 [main_trainer.py:136] INFO Start training ....
2025-06-09 11:54:33,105 [main_trainer.py:173] INFO Time per iteration including communication: 0.924363. computation: 0.750913. compression: 0.000003. io: 0.005626. Speed: 17.309222 images/s, current density: 0.010000
2025-06-09 11:54:49,726 [main_trainer.py:173] INFO Time per iteration including communication: 0.878826. computation: 0.705689. compression: 0.000002. io: 0.005546. Speed: 18.206113 images/s, current density: 0.010000
2025-06-09 11:54:57,152 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 11:54:57,152 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000081,0.041345,0.083032,0.009783,0.000000,0.000000
2025-06-09 11:55:06,299 [main_trainer.py:173] INFO Time per iteration including communication: 0.862351. computation: 0.690213. compression: 0.000002. io: 0.005549. Speed: 18.553938 images/s, current density: 0.010000
2025-06-09 11:55:22,862 [main_trainer.py:173] INFO Time per iteration including communication: 0.853897. computation: 0.682695. compression: 0.000002. io: 0.005463. Speed: 18.737631 images/s, current density: 0.010000
2025-06-09 11:55:38,542 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 11:55:38,542 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000079,0.041630,0.082804,0.008062,0.000000,0.000000
2025-06-09 11:55:39,410 [main_trainer.py:173] INFO Time per iteration including communication: 0.848644. computation: 0.677785. compression: 0.000002. io: 0.005429. Speed: 18.853599 images/s, current density: 0.010000
2025-06-09 11:55:55,971 [main_trainer.py:173] INFO Time per iteration including communication: 0.845233. computation: 0.674708. compression: 0.000002. io: 0.005420. Speed: 18.929692 images/s, current density: 0.010000
2025-06-09 11:56:12,541 [main_trainer.py:173] INFO Time per iteration including communication: 0.842846. computation: 0.672409. compression: 0.000002. io: 0.005404. Speed: 18.983302 images/s, current density: 0.010000
2025-06-09 11:56:19,960 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 11:56:19,960 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000080,0.042257,0.081662,0.009492,0.000000,0.000000
2025-06-09 12:01:14,223 [main_trainer.py:317] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-09 12:01:14,223 [main_trainer.py:318] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-09 12:01:19,013 [dl_trainer.py:300] INFO target_sparsities: [1.0]
2025-06-09 12:01:19,014 [dl_trainer.py:312] INFO num_batches_per_epoch: 520
2025-06-09 12:01:19,015 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-09 12:01:20,117 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-09 12:01:20,169 [allreducer.py:284] INFO density: 0.010000
2025-06-09 12:01:20,170 [allreducer.py:285] INFO threshold scale: 1.092000
2025-06-09 12:01:20,172 [allreducer.py:712] INFO offsets: 
2025-06-09 12:01:20,172 [allreducer.py:347] INFO dynamic densities = [0.01]
2025-06-09 12:01:20,180 [allreducer.py:993] INFO Allreducer thread started ...
2025-06-09 12:01:20,180 [main_trainer.py:136] INFO Start training ....
2025-06-09 12:01:39,638 [main_trainer.py:174] INFO Time per iteration including communication: 0.926523. computation: 0.748005. compression: 0.000004. io: 0.007589. Speed: 17.268872 images/s, current density: 0.010000
2025-06-09 12:01:56,201 [main_trainer.py:174] INFO Time per iteration including communication: 0.878512. computation: 0.703077. compression: 0.000003. io: 0.006574. Speed: 18.212614 images/s, current density: 0.010000
2025-06-09 12:19:38,158 [main_trainer.py:319] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-09 12:19:38,159 [main_trainer.py:320] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-09 12:19:42,761 [dl_trainer.py:300] INFO target_sparsities: [1.0]
2025-06-09 12:19:42,761 [dl_trainer.py:312] INFO num_batches_per_epoch: 520
2025-06-09 12:19:42,762 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-09 12:19:43,844 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-09 12:19:43,899 [allreducer.py:284] INFO density: 0.010000
2025-06-09 12:19:43,899 [allreducer.py:285] INFO threshold scale: 1.092000
2025-06-09 12:19:43,901 [allreducer.py:712] INFO offsets: 
2025-06-09 12:19:43,901 [allreducer.py:347] INFO dynamic densities = [0.01]
2025-06-09 12:19:43,910 [allreducer.py:993] INFO Allreducer thread started ...
2025-06-09 12:19:43,911 [main_trainer.py:136] INFO Start training ....
2025-06-09 12:20:03,317 [main_trainer.py:176] INFO Time per iteration including communication: 0.924096. computation: 0.747339. compression: 0.126198. io: 0.005913. Speed: 17.314210 images/s, current density: 0.010000
2025-06-09 12:20:19,921 [main_trainer.py:176] INFO Time per iteration including communication: 0.878268. computation: 0.703624. compression: 0.124994. io: 0.005739. Speed: 18.217671 images/s, current density: 0.010000
2025-06-09 12:20:27,319 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 12:20:27,320 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000082,0.042688,0.085285,0.009790,0.000000,0.000000
2025-06-09 12:20:36,469 [main_trainer.py:176] INFO Time per iteration including communication: 0.861575. computation: 0.689026. compression: 0.123359. io: 0.005645. Speed: 18.570631 images/s, current density: 0.010000
2025-06-09 12:20:53,009 [main_trainer.py:176] INFO Time per iteration including communication: 0.853026. computation: 0.681661. compression: 0.122436. io: 0.005606. Speed: 18.756763 images/s, current density: 0.010000
2025-06-09 12:21:08,674 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 12:21:08,675 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000081,0.043884,0.082269,0.007865,0.000000,0.000000
2025-06-09 12:21:09,540 [main_trainer.py:176] INFO Time per iteration including communication: 0.847774. computation: 0.677052. compression: 0.121962. io: 0.005546. Speed: 18.872962 images/s, current density: 0.010000
2025-06-09 12:21:26,108 [main_trainer.py:176] INFO Time per iteration including communication: 0.844563. computation: 0.673794. compression: 0.122010. io: 0.005506. Speed: 18.944705 images/s, current density: 0.010000
2025-06-09 12:21:42,663 [main_trainer.py:176] INFO Time per iteration including communication: 0.842170. computation: 0.671442. compression: 0.121937. io: 0.005488. Speed: 18.998541 images/s, current density: 0.010000
2025-06-09 12:21:50,081 [allreducer.py:804] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-09 12:21:50,081 [allreducer.py:859] INFO [rank:0]total[58341028]: 0.000000,0.000078,0.041918,0.079677,0.011343,0.000000,0.000000
2025-06-09 12:21:59,222 [main_trainer.py:176] INFO Time per iteration including communication: 0.840396. computation: 0.669217. compression: 0.122480. io: 0.005461. Speed: 19.038646 images/s, current density: 0.010000
2025-06-09 12:22:15,773 [main_trainer.py:176] INFO Time per iteration including communication: 0.838974. computation: 0.668070. compression: 0.122263. io: 0.005440. Speed: 19.070907 images/s, current density: 0.010000
2025-06-10 03:37:11,840 [main_trainer.py:324] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-10 03:37:11,840 [main_trainer.py:325] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-10 03:37:16,560 [dl_trainer.py:300] INFO target_sparsities: [1.0]
2025-06-10 03:37:16,561 [dl_trainer.py:312] INFO num_batches_per_epoch: 520
2025-06-10 03:37:16,561 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-10 03:37:17,597 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-10 03:37:17,649 [allreducer.py:285] INFO density: 0.010000
2025-06-10 03:37:17,649 [allreducer.py:286] INFO threshold scale: 1.092000
2025-06-10 03:37:17,651 [allreducer.py:713] INFO offsets: 
2025-06-10 03:37:17,651 [allreducer.py:348] INFO dynamic densities = [0.01]
2025-06-10 03:37:17,666 [allreducer.py:994] INFO Allreducer thread started ...
2025-06-10 03:37:17,666 [main_trainer.py:137] INFO Start training ....
2025-06-10 03:37:37,083 [main_trainer.py:181] INFO Time per iteration is 0.924589. including communication: 0.096459. computation: 0.736198. compression: 0.040797. io: 0.005465. Speed: 17.304985 images/s, current density: 0.010000
2025-06-10 03:37:53,649 [main_trainer.py:181] INFO Time per iteration is 0.877600. including communication: 0.090550. computation: 0.697648. compression: 0.040431. io: 0.005394. Speed: 18.231540 images/s, current density: 0.010000
2025-06-10 03:38:01,026 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 03:38:01,027 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000081,0.040297,0.088957,0.010132,0.000000,0.000000
2025-06-10 03:38:10,147 [main_trainer.py:181] INFO Time per iteration is 0.860296. including communication: 0.087616. computation: 0.684358. compression: 0.040583. io: 0.005386. Speed: 18.598250 images/s, current density: 0.010000
2025-06-10 03:38:26,662 [main_trainer.py:181] INFO Time per iteration is 0.851758. including communication: 0.085898. computation: 0.677750. compression: 0.040797. io: 0.005346. Speed: 18.784685 images/s, current density: 0.010000
2025-06-10 03:38:42,310 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 03:38:42,311 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000080,0.041532,0.080958,0.008046,0.000000,0.000000
2025-06-10 03:38:43,178 [main_trainer.py:181] INFO Time per iteration is 0.846611. including communication: 0.084901. computation: 0.673818. compression: 0.040922. io: 0.005331. Speed: 18.898870 images/s, current density: 0.010000
2025-06-10 04:02:50,396 [main_trainer.py:328] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-10 04:02:50,397 [main_trainer.py:329] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-10 04:02:55,020 [dl_trainer.py:300] INFO target_sparsities: [1.0]
2025-06-10 04:02:55,020 [dl_trainer.py:312] INFO num_batches_per_epoch: 520
2025-06-10 04:02:55,021 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-10 04:02:56,084 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-10 04:02:56,138 [allreducer.py:285] INFO density: 0.010000
2025-06-10 04:02:56,139 [allreducer.py:286] INFO threshold scale: 1.092000
2025-06-10 04:02:56,140 [allreducer.py:713] INFO offsets: 
2025-06-10 04:02:56,141 [allreducer.py:348] INFO dynamic densities = [0.01]
2025-06-10 04:02:56,150 [allreducer.py:994] INFO Allreducer thread started ...
2025-06-10 04:02:56,150 [main_trainer.py:138] INFO Start training ....
2025-06-10 04:03:15,539 [main_trainer.py:184] INFO Time per iteration is 0.923223. including communication: 0.084517. forward: 0.128390. backward: 0.622854. compression: 0.039840. io: 0.005579. Speed: 17.330596 images/s, current density: 0.010000
2025-06-10 04:03:32,144 [main_trainer.py:184] INFO Time per iteration is 0.877848. including communication: 0.084775. forward: 0.083677. backward: 0.621985. compression: 0.041026. io: 0.005527. Speed: 18.226392 images/s, current density: 0.010000
2025-06-10 04:03:39,540 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 04:03:39,541 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000085,0.041050,0.084517,0.009952,0.000000,0.000000
2025-06-10 04:03:48,693 [main_trainer.py:184] INFO Time per iteration is 0.861311. including communication: 0.083765. forward: 0.068233. backward: 0.621735. compression: 0.041454. io: 0.005498. Speed: 18.576331 images/s, current density: 0.010000
2025-06-10 04:04:05,249 [main_trainer.py:184] INFO Time per iteration is 0.853026. including communication: 0.082987. forward: 0.060824. backward: 0.621143. compression: 0.041812. io: 0.005562. Speed: 18.756761 images/s, current density: 0.010000
2025-06-10 04:04:20,920 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 04:04:20,921 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000080,0.042863,0.080402,0.008357,0.000000,0.000000
2025-06-10 04:04:21,786 [main_trainer.py:184] INFO Time per iteration is 0.847831. including communication: 0.082463. forward: 0.056808. backward: 0.619284. compression: 0.041950. io: 0.005639. Speed: 18.871682 images/s, current density: 0.010000
2025-06-10 04:04:38,365 [main_trainer.py:184] INFO Time per iteration is 0.844697. including communication: 0.082453. forward: 0.053300. backward: 0.619889. compression: 0.042357. io: 0.005567. Speed: 18.941706 images/s, current density: 0.010000
2025-06-10 04:04:54,931 [main_trainer.py:184] INFO Time per iteration is 0.842361. including communication: 0.082407. forward: 0.050765. backward: 0.620252. compression: 0.042647. io: 0.005521. Speed: 18.994236 images/s, current density: 0.010000
2025-06-10 04:05:02,344 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 04:05:02,344 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000078,0.044424,0.082207,0.009459,0.000000,0.000000
2025-06-10 04:05:11,491 [main_trainer.py:184] INFO Time per iteration is 0.840571. including communication: 0.082321. forward: 0.048871. backward: 0.620143. compression: 0.042789. io: 0.005482. Speed: 19.034671 images/s, current density: 0.010000
2025-06-10 04:05:28,057 [main_trainer.py:184] INFO Time per iteration is 0.839208. including communication: 0.082364. forward: 0.047355. backward: 0.620644. compression: 0.042975. io: 0.005436. Speed: 19.065596 images/s, current density: 0.010000
2025-06-10 04:05:43,801 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 04:05:43,802 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000079,0.044089,0.083064,0.008100,0.000000,0.000000
2025-06-10 04:05:44,670 [main_trainer.py:184] INFO Time per iteration is 0.838356. including communication: 0.082531. forward: 0.046173. backward: 0.621059. compression: 0.043091. io: 0.005402. Speed: 19.084971 images/s, current density: 0.010000
2025-06-10 04:06:01,255 [main_trainer.py:184] INFO Time per iteration is 0.837525. including communication: 0.082526. forward: 0.045208. backward: 0.621337. compression: 0.043264. io: 0.005380. Speed: 19.103910 images/s, current density: 0.010000
2025-06-10 04:51:10,878 [main_trainer.py:331] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-10 04:51:10,879 [main_trainer.py:332] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-10 04:51:15,613 [dl_trainer.py:300] INFO target_sparsities: [1.0]
2025-06-10 04:51:15,614 [dl_trainer.py:312] INFO num_batches_per_epoch: 520
2025-06-10 04:51:15,614 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-10 04:51:16,665 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-10 04:51:16,722 [allreducer.py:285] INFO density: 0.010000
2025-06-10 04:51:16,722 [allreducer.py:286] INFO threshold scale: 1.092000
2025-06-10 04:51:16,724 [allreducer.py:713] INFO offsets: 
2025-06-10 04:51:16,724 [allreducer.py:348] INFO dynamic densities = [0.01]
2025-06-10 04:51:16,735 [allreducer.py:994] INFO Allreducer thread started ...
2025-06-10 04:51:16,735 [main_trainer.py:138] INFO Start training ....
2025-06-10 04:51:36,190 [main_trainer.py:186] INFO Time per iteration is 0.926402. including communication: 0.079912. forward: 0.133650. backward: 0.619138. compression: 0.040146. io: 0.005637. HOOK: 0.439698. Speed: 17.271124 images/s, current density: 0.010000
2025-06-10 04:51:52,805 [main_trainer.py:186] INFO Time per iteration is 0.879710. including communication: 0.082753. forward: 0.086467. backward: 0.619528. compression: 0.040908. io: 0.005608. HOOK: 0.544769. Speed: 18.187818 images/s, current density: 0.010000
2025-06-10 04:52:00,215 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 04:52:00,216 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000077,0.041307,0.082515,0.010186,0.000000,0.000000
2025-06-10 04:52:09,370 [main_trainer.py:186] INFO Time per iteration is 0.862831. including communication: 0.082395. forward: 0.070175. backward: 0.620422. compression: 0.041821. io: 0.005564. HOOK: 0.546666. Speed: 18.543611 images/s, current density: 0.010000
2025-06-10 05:52:49,243 [main_trainer.py:331] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-10 05:52:49,244 [main_trainer.py:332] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-10 05:52:54,101 [dl_trainer.py:300] INFO target_sparsities: [1.0]
2025-06-10 05:52:54,102 [dl_trainer.py:312] INFO num_batches_per_epoch: 520
2025-06-10 05:52:54,102 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-10 05:52:55,212 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-10 05:52:55,267 [allreducer.py:285] INFO density: 0.010000
2025-06-10 05:52:55,267 [allreducer.py:286] INFO threshold scale: 1.092000
2025-06-10 05:52:55,269 [allreducer.py:713] INFO offsets: 
2025-06-10 05:52:55,269 [allreducer.py:348] INFO dynamic densities = [0.01]
2025-06-10 05:52:55,278 [allreducer.py:994] INFO Allreducer thread started ...
2025-06-10 05:52:55,278 [main_trainer.py:138] INFO Start training ....
2025-06-10 05:53:14,682 [main_trainer.py:186] INFO Time per iteration is 0.923946. including communication: 0.082552. forward: 0.130772. backward: 0.618701. compression: 0.039344. io: 0.005820. HOOK: 0.439680. Speed: 17.317031 images/s, current density: 0.010000
2025-06-10 05:53:31,286 [main_trainer.py:186] INFO Time per iteration is 0.878206. including communication: 0.083838. forward: 0.084403. backward: 0.620182. compression: 0.040311. io: 0.005641. HOOK: 0.551916. Speed: 18.218967 images/s, current density: 0.010000
2025-06-10 05:53:38,678 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 05:53:38,678 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000084,0.040004,0.083554,0.010426,0.000000,0.000000
2025-06-10 05:53:47,797 [main_trainer.py:186] INFO Time per iteration is 0.860912. including communication: 0.083034. forward: 0.068413. backward: 0.620960. compression: 0.040414. io: 0.005551. HOOK: 0.554395. Speed: 18.584949 images/s, current density: 0.010000
2025-06-10 05:54:04,333 [main_trainer.py:186] INFO Time per iteration is 0.852481. including communication: 0.082651. forward: 0.060328. backward: 0.621396. compression: 0.040894. io: 0.005488. HOOK: 0.545944. Speed: 18.768748 images/s, current density: 0.010000
2025-06-10 05:54:20,013 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 05:54:20,014 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000081,0.042572,0.081380,0.008172,0.000000,0.000000
2025-06-10 05:54:20,879 [main_trainer.py:186] INFO Time per iteration is 0.847487. including communication: 0.082475. forward: 0.055496. backward: 0.621674. compression: 0.041330. io: 0.005478. HOOK: 0.547165. Speed: 18.879343 images/s, current density: 0.010000
2025-06-10 05:54:37,397 [main_trainer.py:186] INFO Time per iteration is 0.843909. including communication: 0.082000. forward: 0.052163. backward: 0.621939. compression: 0.041394. io: 0.005440. HOOK: 0.549037. Speed: 18.959398 images/s, current density: 0.010000
2025-06-10 05:54:53,938 [main_trainer.py:186] INFO Time per iteration is 0.841516. including communication: 0.081957. forward: 0.049901. backward: 0.621924. compression: 0.041413. io: 0.005424. HOOK: 0.548509. Speed: 19.013302 images/s, current density: 0.010000
2025-06-10 05:55:01,353 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 05:55:01,353 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000076,0.041832,0.080669,0.009587,0.000000,0.000000
2025-06-10 05:55:10,508 [main_trainer.py:186] INFO Time per iteration is 0.839891. including communication: 0.081834. forward: 0.048250. backward: 0.621491. compression: 0.041574. io: 0.005428. HOOK: 0.550993. Speed: 19.050086 images/s, current density: 0.010000
2025-06-10 05:55:27,070 [main_trainer.py:186] INFO Time per iteration is 0.838582. including communication: 0.081768. forward: 0.046954. backward: 0.621650. compression: 0.041536. io: 0.005430. HOOK: 0.548156. Speed: 19.079827 images/s, current density: 0.010000
2025-06-10 05:55:42,806 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 05:55:42,806 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000080,0.042150,0.082349,0.008173,0.000000,0.000000
2025-06-10 05:55:43,679 [main_trainer.py:186] INFO Time per iteration is 0.837767. including communication: 0.081991. forward: 0.045868. backward: 0.621848. compression: 0.041661. io: 0.005421. HOOK: 0.548829. Speed: 19.098378 images/s, current density: 0.010000
2025-06-10 05:56:00,249 [main_trainer.py:186] INFO Time per iteration is 0.836928. including communication: 0.081975. forward: 0.044955. backward: 0.621927. compression: 0.041717. io: 0.005417. HOOK: 0.544507. Speed: 19.117545 images/s, current density: 0.010000
2025-06-10 05:56:16,829 [main_trainer.py:186] INFO Time per iteration is 0.836261. including communication: 0.081952. forward: 0.044161. backward: 0.622055. compression: 0.041875. io: 0.005417. HOOK: 0.551944. Speed: 19.132783 images/s, current density: 0.010000
2025-06-10 05:56:24,225 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 05:56:24,225 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000081,0.042871,0.081374,0.008209,0.000000,0.000000
2025-06-10 05:56:33,365 [main_trainer.py:186] INFO Time per iteration is 0.835532. including communication: 0.081831. forward: 0.043488. backward: 0.622163. compression: 0.041939. io: 0.005404. HOOK: 0.548343. Speed: 19.149478 images/s, current density: 0.010000
2025-06-10 05:56:49,898 [main_trainer.py:186] INFO Time per iteration is 0.834895. including communication: 0.081740. forward: 0.042968. backward: 0.622177. compression: 0.041851. io: 0.005391. HOOK: 0.548512. Speed: 19.164083 images/s, current density: 0.010000
2025-06-10 06:00:58,827 [main_trainer.py:331] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-10 06:00:58,827 [main_trainer.py:332] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-10 06:01:03,293 [dl_trainer.py:300] INFO target_sparsities: [1.0]
2025-06-10 06:01:03,293 [dl_trainer.py:312] INFO num_batches_per_epoch: 520
2025-06-10 06:01:03,294 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-10 06:01:04,361 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-10 06:01:04,416 [allreducer.py:285] INFO density: 0.010000
2025-06-10 06:01:04,416 [allreducer.py:286] INFO threshold scale: 1.092000
2025-06-10 06:01:04,418 [allreducer.py:713] INFO offsets: 
2025-06-10 06:01:04,418 [allreducer.py:348] INFO dynamic densities = [0.01]
2025-06-10 06:01:04,432 [allreducer.py:994] INFO Allreducer thread started ...
2025-06-10 06:01:04,432 [main_trainer.py:138] INFO Start training ....
2025-06-10 06:01:23,805 [main_trainer.py:186] INFO Time per iteration is 0.922510. including communication: 0.083975. forward: 0.127113. backward: 0.622273. compression: 0.041731. io: 0.005389. HOOK: 0.477259. Speed: 17.343992 images/s, current density: 0.010000
2025-06-10 06:01:40,407 [main_trainer.py:186] INFO Time per iteration is 0.877412. including communication: 0.085230. forward: 0.082038. backward: 0.620938. compression: 0.041242. io: 0.005273. HOOK: 0.543777. Speed: 18.235456 images/s, current density: 0.010000
2025-06-10 06:01:47,798 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:01:47,798 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000076,0.041892,0.085054,0.010047,0.000000,0.000000
2025-06-10 06:01:56,938 [main_trainer.py:186] INFO Time per iteration is 0.860714. including communication: 0.083896. forward: 0.066699. backward: 0.621543. compression: 0.041832. io: 0.005265. HOOK: 0.542721. Speed: 18.589218 images/s, current density: 0.010000
2025-06-10 06:02:13,467 [main_trainer.py:186] INFO Time per iteration is 0.852240. including communication: 0.083196. forward: 0.059129. backward: 0.621423. compression: 0.042449. io: 0.005232. HOOK: 0.538874. Speed: 18.774064 images/s, current density: 0.010000
2025-06-10 06:03:11,998 [main_trainer.py:331] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-10 06:03:11,999 [main_trainer.py:332] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-10 06:03:16,795 [dl_trainer.py:300] INFO target_sparsities: [1.0]
2025-06-10 06:03:16,796 [dl_trainer.py:312] INFO num_batches_per_epoch: 520
2025-06-10 06:03:16,797 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-10 06:03:17,866 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-10 06:03:17,917 [allreducer.py:285] INFO density: 0.010000
2025-06-10 06:03:17,917 [allreducer.py:286] INFO threshold scale: 1.092000
2025-06-10 06:03:17,920 [allreducer.py:713] INFO offsets: 
2025-06-10 06:03:17,920 [allreducer.py:348] INFO dynamic densities = [0.01]
2025-06-10 06:03:17,929 [allreducer.py:994] INFO Allreducer thread started ...
2025-06-10 06:03:17,929 [main_trainer.py:138] INFO Start training ....
2025-06-10 06:03:37,366 [main_trainer.py:186] INFO Time per iteration is 0.925518. including communication: 0.080873. forward: 0.133038. backward: 0.618116. compression: 0.038597. io: 0.006091. HOOK: 0.000213. Speed: 17.287611 images/s, current density: 0.010000
2025-06-10 06:03:54,000 [main_trainer.py:186] INFO Time per iteration is 0.879739. including communication: 0.083823. forward: 0.085565. backward: 0.619717. compression: 0.040311. io: 0.005720. HOOK: 0.000210. Speed: 18.187222 images/s, current density: 0.010000
2025-06-10 06:04:01,404 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:04:01,405 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000081,0.040526,0.083117,0.010200,0.000000,0.000000
2025-06-10 06:04:10,550 [main_trainer.py:186] INFO Time per iteration is 0.862590. including communication: 0.082787. forward: 0.069526. backward: 0.620306. compression: 0.040358. io: 0.005635. HOOK: 0.000210. Speed: 18.548798 images/s, current density: 0.010000
2025-06-10 06:04:27,114 [main_trainer.py:186] INFO Time per iteration is 0.854089. including communication: 0.082607. forward: 0.061197. backward: 0.621115. compression: 0.040924. io: 0.005532. HOOK: 0.000219. Speed: 18.733409 images/s, current density: 0.010000
2025-06-10 06:04:42,822 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:04:42,822 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000080,0.042573,0.082098,0.008175,0.000000,0.000000
2025-06-10 06:04:43,690 [main_trainer.py:186] INFO Time per iteration is 0.849069. including communication: 0.082572. forward: 0.056329. backward: 0.621331. compression: 0.041524. io: 0.005476. HOOK: 0.000211. Speed: 18.844177 images/s, current density: 0.010000
2025-06-10 06:05:00,242 [main_trainer.py:186] INFO Time per iteration is 0.845512. including communication: 0.082273. forward: 0.052926. backward: 0.621586. compression: 0.041582. io: 0.005425. HOOK: 0.000217. Speed: 18.923447 images/s, current density: 0.010000
2025-06-10 06:05:16,824 [main_trainer.py:186] INFO Time per iteration is 0.843176. including communication: 0.082222. forward: 0.050474. backward: 0.621874. compression: 0.041857. io: 0.005387. HOOK: 0.000212. Speed: 18.975876 images/s, current density: 0.010000
2025-06-10 06:07:54,728 [main_trainer.py:331] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-10 06:07:54,728 [main_trainer.py:332] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-10 06:07:59,635 [dl_trainer.py:300] INFO target_sparsities: [1.0]
2025-06-10 06:07:59,635 [dl_trainer.py:312] INFO num_batches_per_epoch: 520
2025-06-10 06:07:59,635 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-10 06:08:00,711 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-10 06:08:00,767 [allreducer.py:285] INFO density: 0.010000
2025-06-10 06:08:00,767 [allreducer.py:286] INFO threshold scale: 1.092000
2025-06-10 06:08:00,770 [allreducer.py:713] INFO offsets: 
2025-06-10 06:08:00,770 [allreducer.py:348] INFO dynamic densities = [0.01]
2025-06-10 06:08:00,780 [allreducer.py:994] INFO Allreducer thread started ...
2025-06-10 06:08:00,781 [main_trainer.py:138] INFO Start training ....
2025-06-10 06:08:20,239 [main_trainer.py:186] INFO Time per iteration is 0.926537. including communication: 0.080364. forward: 0.136850. backward: 0.614689. compression: 0.040969. io: 0.007747. HOOK: 0.424595. Speed: 17.268598 images/s, current density: 0.010000
2025-06-10 06:08:36,790 [main_trainer.py:186] INFO Time per iteration is 0.878220. including communication: 0.083583. forward: 0.087706. backward: 0.617619. compression: 0.040174. io: 0.006709. HOOK: 0.526451. Speed: 18.218665 images/s, current density: 0.010000
2025-06-10 06:13:56,286 [main_trainer.py:331] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-10 06:13:56,286 [main_trainer.py:332] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-10 06:14:01,067 [dl_trainer.py:300] INFO target_sparsities: [1.0]
2025-06-10 06:14:01,068 [dl_trainer.py:312] INFO num_batches_per_epoch: 520
2025-06-10 06:14:01,068 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-10 06:14:02,155 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-10 06:14:02,210 [allreducer.py:285] INFO density: 0.010000
2025-06-10 06:14:02,210 [allreducer.py:286] INFO threshold scale: 1.092000
2025-06-10 06:14:02,212 [allreducer.py:713] INFO offsets: 
2025-06-10 06:14:02,213 [allreducer.py:348] INFO dynamic densities = [0.01]
2025-06-10 06:14:02,222 [allreducer.py:994] INFO Allreducer thread started ...
2025-06-10 06:14:02,222 [main_trainer.py:138] INFO Start training ....
2025-06-10 06:14:17,032 [main_trainer.py:186] INFO Time per iteration is 0.705217. including communication: 0.127536. forward: 0.127176. backward: 0.276071. compression: 0.052324. io: 0.005265. HOOK: 0.000223. Speed: 22.688037 images/s, current density: 0.010000
2025-06-10 06:14:29,244 [main_trainer.py:186] INFO Time per iteration is 0.659041. including communication: 0.124170. forward: 0.082026. backward: 0.271524. compression: 0.059298. io: 0.005164. HOOK: 0.000235. Speed: 24.277718 images/s, current density: 0.010000
2025-06-10 06:14:34,688 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:14:34,689 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000157,0.055010,0.115232,0.009420,0.000000,0.000000
2025-06-10 06:14:41,420 [main_trainer.py:186] INFO Time per iteration is 0.642552. including communication: 0.107892. forward: 0.066388. backward: 0.271856. compression: 0.051178. io: 0.005132. HOOK: 0.000206. Speed: 24.900714 images/s, current density: 0.010000
2025-06-10 06:14:53,570 [main_trainer.py:186] INFO Time per iteration is 0.633886. including communication: 0.106369. forward: 0.058606. backward: 0.271884. compression: 0.048907. io: 0.005145. HOOK: 0.000207. Speed: 25.241142 images/s, current density: 0.010000
2025-06-10 06:15:05,060 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:15:05,060 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000154,0.037688,0.092957,0.007812,0.000000,0.000000
2025-06-10 06:15:05,686 [main_trainer.py:186] INFO Time per iteration is 0.628317. including communication: 0.103826. forward: 0.053800. backward: 0.272132. compression: 0.046272. io: 0.005102. HOOK: 0.000211. Speed: 25.464861 images/s, current density: 0.010000
2025-06-10 06:15:17,883 [main_trainer.py:186] INFO Time per iteration is 0.625258. including communication: 0.104096. forward: 0.050675. backward: 0.272128. compression: 0.048382. io: 0.005093. HOOK: 0.000205. Speed: 25.589444 images/s, current density: 0.010000
2025-06-10 06:15:30,067 [main_trainer.py:186] INFO Time per iteration is 0.622973. including communication: 0.103175. forward: 0.048603. backward: 0.272055. compression: 0.047696. io: 0.005098. HOOK: 0.000218. Speed: 25.683307 images/s, current density: 0.010000
2025-06-10 06:15:35,503 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:15:35,503 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000159,0.048053,0.100243,0.009203,0.000000,0.000000
2025-06-10 06:15:42,243 [main_trainer.py:186] INFO Time per iteration is 0.621202. including communication: 0.103613. forward: 0.046989. backward: 0.272245. compression: 0.048163. io: 0.005098. HOOK: 0.000224. Speed: 25.756520 images/s, current density: 0.010000
2025-06-10 06:15:54,401 [main_trainer.py:186] INFO Time per iteration is 0.619727. including communication: 0.103830. forward: 0.045670. backward: 0.272275. compression: 0.048618. io: 0.005086. HOOK: 0.000222. Speed: 25.817820 images/s, current density: 0.010000
2025-06-10 06:16:06,011 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:16:06,012 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003153,0.049516,0.113395,0.008650,0.000000,0.000000
2025-06-10 06:16:06,661 [main_trainer.py:186] INFO Time per iteration is 0.619054. including communication: 0.105320. forward: 0.044600. backward: 0.271755. compression: 0.047518. io: 0.005077. HOOK: 0.000242. Speed: 25.845894 images/s, current density: 0.010000
2025-06-10 06:16:18,806 [main_trainer.py:186] INFO Time per iteration is 0.617982. including communication: 0.104005. forward: 0.043716. backward: 0.272033. compression: 0.047698. io: 0.005071. HOOK: 0.000251. Speed: 25.890708 images/s, current density: 0.010000
2025-06-10 06:17:10,382 [main_trainer.py:331] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-10 06:17:10,383 [main_trainer.py:332] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-10 06:17:15,127 [dl_trainer.py:300] INFO target_sparsities: [1.0]
2025-06-10 06:17:15,127 [dl_trainer.py:312] INFO num_batches_per_epoch: 520
2025-06-10 06:17:15,128 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-10 06:17:16,231 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-10 06:17:16,282 [allreducer.py:285] INFO density: 0.010000
2025-06-10 06:17:16,282 [allreducer.py:286] INFO threshold scale: 1.092000
2025-06-10 06:17:16,286 [allreducer.py:713] INFO offsets: 
2025-06-10 06:17:16,286 [allreducer.py:348] INFO dynamic densities = [0.01]
2025-06-10 06:17:16,310 [allreducer.py:994] INFO Allreducer thread started ...
2025-06-10 06:17:16,310 [main_trainer.py:138] INFO Start training ....
2025-06-10 06:17:31,146 [main_trainer.py:186] INFO Time per iteration is 0.706446. including communication: 0.114243. forward: 0.131344. backward: 0.280713. compression: 0.049915. io: 0.005403. HOOK: 0.007419. Speed: 22.648584 images/s, current density: 0.010000
2025-06-10 06:17:43,412 [main_trainer.py:186] INFO Time per iteration is 0.660965. including communication: 0.112783. forward: 0.084867. backward: 0.271972. compression: 0.051103. io: 0.005320. HOOK: 0.009197. Speed: 24.207045 images/s, current density: 0.010000
2025-06-10 06:17:48,854 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:17:48,854 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003465,0.048663,0.110275,0.009906,0.000000,0.000000
2025-06-10 06:17:55,598 [main_trainer.py:186] INFO Time per iteration is 0.644020. including communication: 0.106568. forward: 0.069695. backward: 0.272163. compression: 0.046107. io: 0.005396. HOOK: 0.006693. Speed: 24.843965 images/s, current density: 0.010000
2025-06-10 06:18:07,801 [main_trainer.py:186] INFO Time per iteration is 0.635641. including communication: 0.104977. forward: 0.062599. backward: 0.271588. compression: 0.045468. io: 0.005441. HOOK: 0.006380. Speed: 25.171436 images/s, current density: 0.010000
2025-06-10 06:20:19,744 [main_trainer.py:331] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-10 06:20:19,744 [main_trainer.py:332] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-10 06:20:24,139 [dl_trainer.py:300] INFO target_sparsities: [1.0]
2025-06-10 06:20:24,140 [dl_trainer.py:312] INFO num_batches_per_epoch: 520
2025-06-10 06:20:24,140 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-10 06:20:25,246 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-10 06:20:25,302 [allreducer.py:285] INFO density: 0.010000
2025-06-10 06:20:25,303 [allreducer.py:286] INFO threshold scale: 1.092000
2025-06-10 06:20:25,305 [allreducer.py:713] INFO offsets: 
2025-06-10 06:20:25,305 [allreducer.py:348] INFO dynamic densities = [0.01]
2025-06-10 06:20:25,315 [allreducer.py:994] INFO Allreducer thread started ...
2025-06-10 06:20:25,316 [main_trainer.py:138] INFO Start training ....
2025-06-10 06:20:40,100 [main_trainer.py:186] INFO Time per iteration is 0.703981. including communication: 0.093661. forward: 0.131378. backward: 0.274256. compression: 0.041896. io: 0.006052. HOOK: 0.007422. Speed: 22.727894 images/s, current density: 0.010000
2025-06-10 06:20:52,335 [main_trainer.py:186] INFO Time per iteration is 0.658975. including communication: 0.107528. forward: 0.084695. backward: 0.270466. compression: 0.038696. io: 0.005665. HOOK: 0.007217. Speed: 24.280141 images/s, current density: 0.010000
2025-06-10 06:20:57,775 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:20:57,775 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003172,0.041175,0.108562,0.010293,0.000000,0.000000
2025-06-10 06:21:04,499 [main_trainer.py:186] INFO Time per iteration is 0.642317. including communication: 0.105360. forward: 0.068371. backward: 0.271862. compression: 0.042423. io: 0.005509. HOOK: 0.007326. Speed: 24.909831 images/s, current density: 0.010000
2025-06-10 06:21:16,669 [main_trainer.py:186] INFO Time per iteration is 0.633945. including communication: 0.098286. forward: 0.060123. backward: 0.272313. compression: 0.040005. io: 0.005409. HOOK: 0.007048. Speed: 25.238797 images/s, current density: 0.010000
2025-06-10 06:27:18,218 [main_trainer.py:331] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-10 06:27:18,218 [main_trainer.py:332] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-10 06:27:23,025 [dl_trainer.py:300] INFO target_sparsities: [1.0]
2025-06-10 06:27:23,025 [dl_trainer.py:312] INFO num_batches_per_epoch: 520
2025-06-10 06:27:23,026 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-10 06:27:24,130 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-10 06:27:24,181 [allreducer.py:285] INFO density: 0.010000
2025-06-10 06:27:24,181 [allreducer.py:286] INFO threshold scale: 1.092000
2025-06-10 06:27:24,184 [allreducer.py:713] INFO offsets: 
2025-06-10 06:27:24,184 [allreducer.py:348] INFO dynamic densities = [0.01]
2025-06-10 06:27:24,203 [allreducer.py:994] INFO Allreducer thread started ...
2025-06-10 06:27:24,203 [main_trainer.py:138] INFO Start training ....
2025-06-10 06:27:39,052 [main_trainer.py:186] INFO Time per iteration is 0.707030. including communication: 0.103489. forward: 0.132559. backward: 0.281827. compression: 0.039568. io: 0.005341. HOOK: 0.007328. Speed: 22.629883 images/s, current density: 0.010000
2025-06-10 06:27:51,251 [main_trainer.py:186] INFO Time per iteration is 0.659668. including communication: 0.099838. forward: 0.085326. backward: 0.275060. compression: 0.037653. io: 0.005274. HOOK: 0.007109. Speed: 24.254609 images/s, current density: 0.010000
2025-06-10 06:43:12,827 [main_trainer.py:331] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-10 06:43:12,828 [main_trainer.py:332] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-10 06:43:17,531 [dl_trainer.py:300] INFO target_sparsities: [1.0]
2025-06-10 06:43:17,531 [dl_trainer.py:312] INFO num_batches_per_epoch: 520
2025-06-10 06:43:17,532 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-10 06:43:18,629 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-10 06:43:18,680 [allreducer.py:285] INFO density: 0.010000
2025-06-10 06:43:18,680 [allreducer.py:286] INFO threshold scale: 1.092000
2025-06-10 06:43:18,682 [allreducer.py:713] INFO offsets: 
2025-06-10 06:43:18,682 [allreducer.py:348] INFO dynamic densities = [0.01]
2025-06-10 06:43:18,694 [allreducer.py:994] INFO Allreducer thread started ...
2025-06-10 06:43:18,694 [main_trainer.py:138] INFO Start training ....
2025-06-10 06:43:33,528 [main_trainer.py:186] INFO Time per iteration is 0.706309. including communication: 0.089428. forward: 0.132026. backward: 0.281150. compression: 0.035370. io: 0.005267. HOOK: 0.007027. Speed: 22.652972 images/s, current density: 0.010000
2025-06-10 06:43:45,729 [main_trainer.py:186] INFO Time per iteration is 0.659336. including communication: 0.101205. forward: 0.085162. backward: 0.271599. compression: 0.042374. io: 0.005215. HOOK: 0.006814. Speed: 24.266825 images/s, current density: 0.010000
2025-06-10 06:43:51,177 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:43:51,178 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000163,0.040629,0.097243,0.010390,0.000000,0.000000
2025-06-10 06:43:57,916 [main_trainer.py:186] INFO Time per iteration is 0.642942. including communication: 0.095930. forward: 0.069065. backward: 0.271603. compression: 0.039542. io: 0.005227. HOOK: 0.007204. Speed: 24.885594 images/s, current density: 0.010000
2025-06-10 06:44:10,091 [main_trainer.py:186] INFO Time per iteration is 0.634484. including communication: 0.097836. forward: 0.060790. backward: 0.271538. compression: 0.038138. io: 0.005206. HOOK: 0.007580. Speed: 25.217330 images/s, current density: 0.010000
2025-06-10 06:44:21,603 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:44:21,603 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000298,0.033984,0.094357,0.008219,0.000000,0.000000
2025-06-10 06:44:22,236 [main_trainer.py:186] INFO Time per iteration is 0.629087. including communication: 0.095572. forward: 0.055709. backward: 0.271930. compression: 0.037255. io: 0.005187. HOOK: 0.009036. Speed: 25.433681 images/s, current density: 0.010000
2025-06-10 06:44:34,409 [main_trainer.py:186] INFO Time per iteration is 0.625695. including communication: 0.096507. forward: 0.052437. backward: 0.272064. compression: 0.036924. io: 0.005218. HOOK: 0.007181. Speed: 25.571584 images/s, current density: 0.010000
2025-06-10 06:44:46,593 [main_trainer.py:186] INFO Time per iteration is 0.623349. including communication: 0.097793. forward: 0.050054. backward: 0.272183. compression: 0.036718. io: 0.005222. HOOK: 0.007912. Speed: 25.667787 images/s, current density: 0.010000
2025-06-10 06:44:52,033 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:44:52,033 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000163,0.034706,0.103938,0.009733,0.000000,0.000000
2025-06-10 06:44:58,751 [main_trainer.py:186] INFO Time per iteration is 0.621426. including communication: 0.096958. forward: 0.048261. backward: 0.272203. compression: 0.036216. io: 0.005210. HOOK: 0.009568. Speed: 25.747213 images/s, current density: 0.010000
2025-06-10 06:45:10,972 [main_trainer.py:186] INFO Time per iteration is 0.620274. including communication: 0.098065. forward: 0.046929. backward: 0.272229. compression: 0.036309. io: 0.005196. HOOK: 0.009003. Speed: 25.795039 images/s, current density: 0.010000
2025-06-10 06:45:22,599 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:45:22,599 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003065,0.035645,0.094690,0.008180,0.000000,0.000000
2025-06-10 06:45:23,253 [main_trainer.py:186] INFO Time per iteration is 0.619647. including communication: 0.097474. forward: 0.045912. backward: 0.271004. compression: 0.036215. io: 0.005192. HOOK: 0.008977. Speed: 25.821153 images/s, current density: 0.010000
2025-06-10 06:45:35,447 [main_trainer.py:186] INFO Time per iteration is 0.618747. including communication: 0.096732. forward: 0.045047. backward: 0.270754. compression: 0.036153. io: 0.005178. HOOK: 0.007368. Speed: 25.858719 images/s, current density: 0.010000
2025-06-10 06:45:47,626 [main_trainer.py:186] INFO Time per iteration is 0.617926. including communication: 0.096664. forward: 0.044292. backward: 0.270941. compression: 0.037402. io: 0.005173. HOOK: 0.007155. Speed: 25.893058 images/s, current density: 0.010000
2025-06-10 06:45:53,081 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:45:53,081 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003360,0.041531,0.092929,0.008208,0.000000,0.000000
2025-06-10 06:45:59,818 [main_trainer.py:186] INFO Time per iteration is 0.617286. including communication: 0.095779. forward: 0.043651. backward: 0.271029. compression: 0.037155. io: 0.005168. HOOK: 0.007831. Speed: 25.919902 images/s, current density: 0.010000
2025-06-10 06:46:12,012 [main_trainer.py:186] INFO Time per iteration is 0.616741. including communication: 0.095790. forward: 0.043090. backward: 0.271337. compression: 0.037563. io: 0.005161. HOOK: 0.007229. Speed: 25.942802 images/s, current density: 0.010000
2025-06-10 06:46:23,534 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:46:23,534 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003134,0.037900,0.088448,0.008176,0.000000,0.000000
2025-06-10 06:46:24,184 [main_trainer.py:186] INFO Time per iteration is 0.616198. including communication: 0.095272. forward: 0.042628. backward: 0.271525. compression: 0.037394. io: 0.005166. HOOK: 0.007422. Speed: 25.965694 images/s, current density: 0.010000
2025-06-10 06:46:36,424 [main_trainer.py:186] INFO Time per iteration is 0.615932. including communication: 0.093889. forward: 0.042228. backward: 0.271768. compression: 0.036982. io: 0.005164. HOOK: 0.007850. Speed: 25.976879 images/s, current density: 0.010000
2025-06-10 06:46:48,586 [main_trainer.py:186] INFO Time per iteration is 0.615469. including communication: 0.094508. forward: 0.041878. backward: 0.271660. compression: 0.036904. io: 0.005165. HOOK: 0.007937. Speed: 25.996418 images/s, current density: 0.010000
2025-06-10 06:46:54,043 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:46:54,043 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003101,0.033013,0.087027,0.009637,0.000000,0.000000
2025-06-10 06:47:00,793 [main_trainer.py:186] INFO Time per iteration is 0.615183. including communication: 0.094174. forward: 0.041557. backward: 0.271859. compression: 0.037138. io: 0.005166. HOOK: 0.009990. Speed: 26.008524 images/s, current density: 0.010000
2025-06-10 06:47:12,952 [main_trainer.py:186] INFO Time per iteration is 0.614802. including communication: 0.093928. forward: 0.041272. backward: 0.272030. compression: 0.037445. io: 0.005166. HOOK: 0.009394. Speed: 26.024631 images/s, current density: 0.010000
2025-06-10 06:47:24,492 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:47:24,492 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.008923,0.044566,0.093553,0.008172,0.000000,0.000000
2025-06-10 06:47:25,132 [main_trainer.py:186] INFO Time per iteration is 0.614510. including communication: 0.094000. forward: 0.041010. backward: 0.272078. compression: 0.037724. io: 0.005163. HOOK: 0.008468. Speed: 26.036988 images/s, current density: 0.010000
2025-06-10 06:47:37,297 [main_trainer.py:186] INFO Time per iteration is 0.614210. including communication: 0.094462. forward: 0.040762. backward: 0.272314. compression: 0.037633. io: 0.005159. HOOK: 0.007305. Speed: 26.049738 images/s, current density: 0.010000
2025-06-10 06:47:49,463 [main_trainer.py:186] INFO Time per iteration is 0.613941. including communication: 0.094007. forward: 0.040539. backward: 0.272657. compression: 0.037426. io: 0.005161. HOOK: 0.007086. Speed: 26.061149 images/s, current density: 0.010000
2025-06-10 06:47:54,891 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:47:54,891 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003125,0.035519,0.092860,0.009552,0.000000,0.000000
2025-06-10 06:48:01,630 [main_trainer.py:186] INFO Time per iteration is 0.613695. including communication: 0.093929. forward: 0.040310. backward: 0.272729. compression: 0.037798. io: 0.005154. HOOK: 0.007073. Speed: 26.071576 images/s, current density: 0.010000
2025-06-10 06:48:13,791 [main_trainer.py:186] INFO Time per iteration is 0.613458. including communication: 0.093805. forward: 0.040095. backward: 0.272961. compression: 0.038008. io: 0.005151. HOOK: 0.007217. Speed: 26.081656 images/s, current density: 0.010000
2025-06-10 06:48:25,349 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:48:25,350 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000168,0.042197,0.096562,0.008173,0.000000,0.000000
2025-06-10 06:48:25,995 [main_trainer.py:186] INFO Time per iteration is 0.613325. including communication: 0.094128. forward: 0.039895. backward: 0.272852. compression: 0.037946. io: 0.005146. HOOK: 0.007461. Speed: 26.087305 images/s, current density: 0.010000
2025-06-10 06:48:37,430 [dl_trainer.py:917] INFO [  0][  520/  520][rank:0] loss: 4.154, average forward and backward time: 0.477667, iotime: 0.005146 
2025-06-10 06:48:37,432 [dl_trainer.py:923] INFO GPU memory usage memory_allocated: 2056 MBytes, max_memory_allocated: 3103 MBytes, memory_cached: 3198 MBytes, max_memory_cached: 3198 MBytes, CPU memory usage: 3173 MBytes
2025-06-10 06:48:37,570 [main_trainer.py:198] INFO Time per epoch including communication: 318.874594, 0.000000
2025-06-10 06:48:37,573 [dl_trainer.py:762] INFO train iter: 520, num_batches_per_epoch: 520
2025-06-10 06:48:37,573 [dl_trainer.py:765] INFO Epoch 0, avg train acc: 3.028846, lr: 0.002500, avg loss: 4.489316
2025-06-10 06:48:37,574 [dl_trainer.py:771] WARNING NaN detected! sparsities:  []
2025-06-10 06:48:37,575 [dl_trainer.py:773] INFO Average Sparsity: nan, compression ratio: nan, communication size: nan
2025-06-10 06:48:58,032 [dl_trainer.py:1016] INFO Epoch 1, lr: 0.002500, val loss: 4.313040, val acc: 0.054500
2025-06-10 06:49:10,440 [main_trainer.py:186] INFO Time per iteration is 0.650127. including communication: 0.094624. forward: 0.039559. backward: 0.272607. compression: 0.037780. io: 0.005157. HOOK: 0.007230. Speed: 24.610585 images/s, current density: 0.010000
2025-06-10 06:49:15,890 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:49:15,891 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.006028,0.035341,0.096506,0.008204,0.000000,0.000000
2025-06-10 06:49:22,635 [main_trainer.py:186] INFO Time per iteration is 0.648685. including communication: 0.094548. forward: 0.039414. backward: 0.272691. compression: 0.037694. io: 0.005155. HOOK: 0.006839. Speed: 24.665275 images/s, current density: 0.010000
2025-06-10 06:49:34,809 [main_trainer.py:186] INFO Time per iteration is 0.647306. including communication: 0.093990. forward: 0.039273. backward: 0.272774. compression: 0.037638. io: 0.005150. HOOK: 0.007383. Speed: 24.717835 images/s, current density: 0.010000
2025-06-10 06:49:46,323 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:49:46,323 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000376,0.036113,0.093275,0.008255,0.000000,0.000000
2025-06-10 06:49:46,972 [main_trainer.py:186] INFO Time per iteration is 0.646000. including communication: 0.094256. forward: 0.039153. backward: 0.272775. compression: 0.037602. io: 0.005148. HOOK: 0.007610. Speed: 24.767809 images/s, current density: 0.010000
2025-06-10 06:49:59,227 [main_trainer.py:186] INFO Time per iteration is 0.644927. including communication: 0.094101. forward: 0.039072. backward: 0.272779. compression: 0.037501. io: 0.005155. HOOK: 0.007467. Speed: 24.808999 images/s, current density: 0.010000
2025-06-10 06:50:11,388 [main_trainer.py:186] INFO Time per iteration is 0.643774. including communication: 0.094318. forward: 0.038987. backward: 0.272633. compression: 0.037631. io: 0.005159. HOOK: 0.007590. Speed: 24.853456 images/s, current density: 0.010000
2025-06-10 06:50:16,811 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:50:16,812 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000152,0.040183,0.097903,0.009761,0.000000,0.000000
2025-06-10 06:50:23,517 [main_trainer.py:186] INFO Time per iteration is 0.642642. including communication: 0.094531. forward: 0.038891. backward: 0.272578. compression: 0.037755. io: 0.005162. HOOK: 0.007609. Speed: 24.897208 images/s, current density: 0.010000
2025-06-10 06:50:35,718 [main_trainer.py:186] INFO Time per iteration is 0.641682. including communication: 0.094589. forward: 0.038813. backward: 0.272546. compression: 0.037634. io: 0.005163. HOOK: 0.009062. Speed: 24.934452 images/s, current density: 0.010000
2025-06-10 06:50:47,259 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:50:47,259 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000171,0.034572,0.092223,0.008272,0.000000,0.000000
2025-06-10 06:50:47,898 [main_trainer.py:186] INFO Time per iteration is 0.640748. including communication: 0.094591. forward: 0.038736. backward: 0.272547. compression: 0.037547. io: 0.005166. HOOK: 0.009003. Speed: 24.970802 images/s, current density: 0.010000
2025-06-10 06:51:00,114 [main_trainer.py:186] INFO Time per iteration is 0.639916. including communication: 0.095000. forward: 0.038662. backward: 0.272491. compression: 0.037753. io: 0.005169. HOOK: 0.007882. Speed: 25.003289 images/s, current density: 0.010000
2025-06-10 06:51:12,309 [main_trainer.py:186] INFO Time per iteration is 0.639100. including communication: 0.094812. forward: 0.038576. backward: 0.272450. compression: 0.037662. io: 0.005164. HOOK: 0.007584. Speed: 25.035216 images/s, current density: 0.010000
2025-06-10 06:51:17,750 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:51:17,751 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000161,0.038199,0.104304,0.009706,0.000000,0.000000
2025-06-10 06:51:24,493 [main_trainer.py:186] INFO Time per iteration is 0.638312. including communication: 0.095001. forward: 0.038507. backward: 0.272488. compression: 0.037574. io: 0.005164. HOOK: 0.007463. Speed: 25.066105 images/s, current density: 0.010000
2025-06-10 06:51:36,722 [main_trainer.py:186] INFO Time per iteration is 0.637621. including communication: 0.095271. forward: 0.038447. backward: 0.272421. compression: 0.037690. io: 0.005166. HOOK: 0.008568. Speed: 25.093264 images/s, current density: 0.010000
2025-06-10 06:51:48,243 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:51:48,243 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000164,0.037607,0.095811,0.008255,0.000000,0.000000
2025-06-10 06:51:48,940 [main_trainer.py:186] INFO Time per iteration is 0.636952. including communication: 0.095299. forward: 0.038391. backward: 0.272284. compression: 0.037627. io: 0.005169. HOOK: 0.008049. Speed: 25.119624 images/s, current density: 0.010000
2025-06-10 06:52:01,154 [main_trainer.py:186] INFO Time per iteration is 0.636310. including communication: 0.095559. forward: 0.038329. backward: 0.272309. compression: 0.037735. io: 0.005172. HOOK: 0.007235. Speed: 25.144958 images/s, current density: 0.010000
2025-06-10 06:52:13,354 [main_trainer.py:186] INFO Time per iteration is 0.635683. including communication: 0.095219. forward: 0.038265. backward: 0.272342. compression: 0.037673. io: 0.005171. HOOK: 0.007186. Speed: 25.169759 images/s, current density: 0.010000
2025-06-10 06:52:18,808 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:52:18,808 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.006001,0.038640,0.101529,0.008369,0.000000,0.000000
2025-06-10 06:52:25,563 [main_trainer.py:186] INFO Time per iteration is 0.635096. including communication: 0.095532. forward: 0.038204. backward: 0.272301. compression: 0.037611. io: 0.005169. HOOK: 0.007413. Speed: 25.193046 images/s, current density: 0.010000
2025-06-10 06:52:37,771 [main_trainer.py:186] INFO Time per iteration is 0.634534. including communication: 0.095346. forward: 0.038142. backward: 0.272386. compression: 0.037544. io: 0.005168. HOOK: 0.007145. Speed: 25.215372 images/s, current density: 0.010000
2025-06-10 06:52:49,310 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:52:49,310 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003381,0.034136,0.090226,0.008277,0.000000,0.000000
2025-06-10 06:52:49,970 [main_trainer.py:186] INFO Time per iteration is 0.633986. including communication: 0.095167. forward: 0.038090. backward: 0.272445. compression: 0.037464. io: 0.005169. HOOK: 0.007335. Speed: 25.237152 images/s, current density: 0.010000
2025-06-10 06:53:02,158 [main_trainer.py:186] INFO Time per iteration is 0.633451. including communication: 0.095660. forward: 0.038041. backward: 0.272397. compression: 0.037614. io: 0.005169. HOOK: 0.009087. Speed: 25.258483 images/s, current density: 0.010000
2025-06-10 06:53:14,401 [main_trainer.py:186] INFO Time per iteration is 0.632996. including communication: 0.095761. forward: 0.037998. backward: 0.272322. compression: 0.037689. io: 0.005169. HOOK: 0.006947. Speed: 25.276628 images/s, current density: 0.010000
2025-06-10 06:53:19,867 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:53:19,867 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.009064,0.040838,0.103312,0.009761,0.000000,0.000000
2025-06-10 06:53:26,610 [main_trainer.py:186] INFO Time per iteration is 0.632526. including communication: 0.095471. forward: 0.037964. backward: 0.272266. compression: 0.037619. io: 0.005169. HOOK: 0.008742. Speed: 25.295418 images/s, current density: 0.010000
2025-06-10 06:53:38,801 [main_trainer.py:186] INFO Time per iteration is 0.632055. including communication: 0.095522. forward: 0.037933. backward: 0.272247. compression: 0.037515. io: 0.005169. HOOK: 0.007351. Speed: 25.314254 images/s, current density: 0.010000
2025-06-10 06:53:50,366 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:53:50,367 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000328,0.034567,0.101141,0.008270,0.000000,0.000000
2025-06-10 06:53:51,018 [main_trainer.py:186] INFO Time per iteration is 0.631628. including communication: 0.095865. forward: 0.037909. backward: 0.272295. compression: 0.037480. io: 0.005174. HOOK: 0.007375. Speed: 25.331359 images/s, current density: 0.010000
2025-06-10 06:54:03,221 [main_trainer.py:186] INFO Time per iteration is 0.631206. including communication: 0.095833. forward: 0.037879. backward: 0.272310. compression: 0.037433. io: 0.005174. HOOK: 0.007263. Speed: 25.348310 images/s, current density: 0.010000
2025-06-10 06:54:14,654 [dl_trainer.py:917] INFO [  1][ 1040/  520][rank:0] loss: 3.744, average forward and backward time: 0.513315, iotime: 0.005211 
2025-06-10 06:54:14,656 [dl_trainer.py:923] INFO GPU memory usage memory_allocated: 2056 MBytes, max_memory_allocated: 3948 MBytes, memory_cached: 4018 MBytes, max_memory_cached: 4018 MBytes, CPU memory usage: 3184 MBytes
2025-06-10 06:54:14,814 [main_trainer.py:198] INFO Time per epoch including communication: 316.779272, 0.000000
2025-06-10 06:54:14,818 [dl_trainer.py:762] INFO train iter: 1040, num_batches_per_epoch: 520
2025-06-10 06:54:14,819 [dl_trainer.py:765] INFO Epoch 1, avg train acc: 7.463943, lr: 0.003333, avg loss: 4.097803
2025-06-10 06:54:14,819 [dl_trainer.py:771] WARNING NaN detected! sparsities:  []
2025-06-10 06:54:14,819 [dl_trainer.py:773] INFO Average Sparsity: nan, compression ratio: nan, communication size: nan
2025-06-10 06:54:35,742 [dl_trainer.py:1016] INFO Epoch 2, lr: 0.003333, val loss: 3.869213, val acc: 0.110700
2025-06-10 06:54:41,453 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:54:41,454 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000163,0.035857,0.092413,0.010011,0.000000,0.000000
2025-06-10 06:54:48,181 [main_trainer.py:186] INFO Time per iteration is 0.649781. including communication: 0.095920. forward: 0.037836. backward: 0.272035. compression: 0.037378. io: 0.005185. HOOK: 0.007558. Speed: 24.623684 images/s, current density: 0.010000
2025-06-10 06:55:00,357 [main_trainer.py:186] INFO Time per iteration is 0.649021. including communication: 0.095808. forward: 0.037804. backward: 0.272075. compression: 0.037332. io: 0.005185. HOOK: 0.008922. Speed: 24.652513 images/s, current density: 0.010000
2025-06-10 06:55:11,885 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:55:11,885 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000163,0.034682,0.103461,0.008197,0.000000,0.000000
2025-06-10 06:55:12,539 [main_trainer.py:186] INFO Time per iteration is 0.648295. including communication: 0.096063. forward: 0.037769. backward: 0.272121. compression: 0.037298. io: 0.005183. HOOK: 0.007647. Speed: 24.680129 images/s, current density: 0.010000
2025-06-10 06:55:24,757 [main_trainer.py:186] INFO Time per iteration is 0.647626. including communication: 0.096452. forward: 0.037742. backward: 0.272049. compression: 0.037255. io: 0.005183. HOOK: 0.007463. Speed: 24.705614 images/s, current density: 0.010000
2025-06-10 06:55:36,960 [main_trainer.py:186] INFO Time per iteration is 0.646967. including communication: 0.096229. forward: 0.037723. backward: 0.272003. compression: 0.037201. io: 0.005185. HOOK: 0.007027. Speed: 24.730783 images/s, current density: 0.010000
2025-06-10 06:55:42,379 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:55:42,380 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000161,0.034668,0.098498,0.008195,0.000000,0.000000
2025-06-10 06:55:49,101 [main_trainer.py:186] INFO Time per iteration is 0.646277. including communication: 0.096052. forward: 0.037701. backward: 0.272069. compression: 0.037160. io: 0.005185. HOOK: 0.007295. Speed: 24.757191 images/s, current density: 0.010000
2025-06-10 06:56:01,281 [main_trainer.py:186] INFO Time per iteration is 0.645644. including communication: 0.096317. forward: 0.037679. backward: 0.272081. compression: 0.037158. io: 0.005185. HOOK: 0.007067. Speed: 24.781457 images/s, current density: 0.010000
2025-06-10 06:56:12,804 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:56:12,805 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.006021,0.036032,0.091633,0.009934,0.000000,0.000000
2025-06-10 06:56:13,452 [main_trainer.py:186] INFO Time per iteration is 0.645025. including communication: 0.095968. forward: 0.037659. backward: 0.272079. compression: 0.037123. io: 0.005187. HOOK: 0.007421. Speed: 24.805239 images/s, current density: 0.010000
2025-06-10 06:56:25,617 [main_trainer.py:186] INFO Time per iteration is 0.644420. including communication: 0.095978. forward: 0.037644. backward: 0.272035. compression: 0.037097. io: 0.005188. HOOK: 0.008192. Speed: 24.828510 images/s, current density: 0.010000
2025-06-10 06:56:37,829 [main_trainer.py:186] INFO Time per iteration is 0.643874. including communication: 0.096130. forward: 0.037630. backward: 0.271875. compression: 0.037101. io: 0.005189. HOOK: 0.006975. Speed: 24.849587 images/s, current density: 0.010000
2025-06-10 06:56:43,272 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:56:43,272 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000327,0.039179,0.099680,0.008212,0.000000,0.000000
2025-06-10 06:56:49,990 [main_trainer.py:186] INFO Time per iteration is 0.643304. including communication: 0.096005. forward: 0.037605. backward: 0.271929. compression: 0.037187. io: 0.005187. HOOK: 0.007224. Speed: 24.871585 images/s, current density: 0.010000
2025-06-10 06:57:02,213 [main_trainer.py:186] INFO Time per iteration is 0.642801. including communication: 0.095761. forward: 0.037570. backward: 0.271984. compression: 0.037131. io: 0.005184. HOOK: 0.007074. Speed: 24.891067 images/s, current density: 0.010000
2025-06-10 06:57:13,754 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:57:13,754 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003157,0.033726,0.087071,0.008050,0.000000,0.000000
2025-06-10 06:57:14,392 [main_trainer.py:186] INFO Time per iteration is 0.642278. including communication: 0.095776. forward: 0.037534. backward: 0.271973. compression: 0.037080. io: 0.005181. HOOK: 0.007291. Speed: 24.911332 images/s, current density: 0.010000
2025-06-10 06:57:26,662 [main_trainer.py:186] INFO Time per iteration is 0.641841. including communication: 0.095686. forward: 0.037515. backward: 0.271950. compression: 0.037044. io: 0.005180. HOOK: 0.007823. Speed: 24.928292 images/s, current density: 0.010000
2025-06-10 06:57:38,838 [main_trainer.py:186] INFO Time per iteration is 0.641347. including communication: 0.095807. forward: 0.037503. backward: 0.271941. compression: 0.037039. io: 0.005182. HOOK: 0.008304. Speed: 24.947502 images/s, current density: 0.010000
2025-06-10 06:57:44,259 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:57:44,259 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000284,0.035862,0.096729,0.009823,0.000000,0.000000
2025-06-10 06:57:50,995 [main_trainer.py:186] INFO Time per iteration is 0.640853. including communication: 0.095801. forward: 0.037490. backward: 0.271981. compression: 0.037012. io: 0.005181. HOOK: 0.009457. Speed: 24.966719 images/s, current density: 0.010000
2025-06-10 06:58:03,159 [main_trainer.py:186] INFO Time per iteration is 0.640379. including communication: 0.095978. forward: 0.037472. backward: 0.272070. compression: 0.037188. io: 0.005183. HOOK: 0.009583. Speed: 24.985209 images/s, current density: 0.010000
2025-06-10 06:58:14,766 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:58:14,766 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003026,0.044353,0.104998,0.008124,0.000000,0.000000
2025-06-10 06:58:15,415 [main_trainer.py:186] INFO Time per iteration is 0.639984. including communication: 0.096134. forward: 0.037450. backward: 0.271975. compression: 0.037288. io: 0.005181. HOOK: 0.007250. Speed: 25.000640 images/s, current density: 0.010000
2025-06-10 06:58:27,593 [main_trainer.py:186] INFO Time per iteration is 0.639545. including communication: 0.096476. forward: 0.037432. backward: 0.272001. compression: 0.037274. io: 0.005180. HOOK: 0.009807. Speed: 25.017801 images/s, current density: 0.010000
2025-06-10 06:58:39,760 [main_trainer.py:186] INFO Time per iteration is 0.639110. including communication: 0.096686. forward: 0.037419. backward: 0.272009. compression: 0.037270. io: 0.005180. HOOK: 0.007173. Speed: 25.034813 images/s, current density: 0.010000
2025-06-10 06:58:45,217 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:58:45,218 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000323,0.041856,0.114096,0.008167,0.000000,0.000000
2025-06-10 06:58:51,977 [main_trainer.py:186] INFO Time per iteration is 0.638722. including communication: 0.096934. forward: 0.037409. backward: 0.272085. compression: 0.037541. io: 0.005181. HOOK: 0.008075. Speed: 25.050024 images/s, current density: 0.010000
2025-06-10 06:59:04,198 [main_trainer.py:186] INFO Time per iteration is 0.638347. including communication: 0.096857. forward: 0.037400. backward: 0.272146. compression: 0.037606. io: 0.005182. HOOK: 0.009961. Speed: 25.064751 images/s, current density: 0.010000
2025-06-10 06:59:15,762 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:59:15,763 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003115,0.044149,0.094811,0.009632,0.000000,0.000000
2025-06-10 06:59:16,410 [main_trainer.py:186] INFO Time per iteration is 0.637975. including communication: 0.096692. forward: 0.037393. backward: 0.272177. compression: 0.037673. io: 0.005184. HOOK: 0.008208. Speed: 25.079367 images/s, current density: 0.010000
2025-06-10 06:59:28,602 [main_trainer.py:186] INFO Time per iteration is 0.637600. including communication: 0.096622. forward: 0.037384. backward: 0.272232. compression: 0.037736. io: 0.005186. HOOK: 0.007198. Speed: 25.094100 images/s, current density: 0.010000
2025-06-10 06:59:40,852 [main_trainer.py:186] INFO Time per iteration is 0.637273. including communication: 0.096658. forward: 0.037370. backward: 0.272152. compression: 0.037782. io: 0.005186. HOOK: 0.007678. Speed: 25.106990 images/s, current density: 0.010000
2025-06-10 06:59:46,278 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 06:59:46,278 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000161,0.039812,0.090650,0.008103,0.000000,0.000000
2025-06-10 06:59:52,282 [dl_trainer.py:917] INFO [  2][ 1560/  520][rank:0] loss: 3.458, average forward and backward time: 0.513724, iotime: 0.005203 
2025-06-10 06:59:52,283 [dl_trainer.py:923] INFO GPU memory usage memory_allocated: 2017 MBytes, max_memory_allocated: 3948 MBytes, memory_cached: 4018 MBytes, max_memory_cached: 4018 MBytes, CPU memory usage: 3216 MBytes
2025-06-10 06:59:52,438 [main_trainer.py:198] INFO Time per epoch including communication: 316.691950, 0.000000
2025-06-10 06:59:52,441 [dl_trainer.py:762] INFO train iter: 1560, num_batches_per_epoch: 520
2025-06-10 06:59:52,441 [dl_trainer.py:765] INFO Epoch 2, avg train acc: 10.228365, lr: 0.004167, avg loss: 3.878370
2025-06-10 06:59:52,441 [dl_trainer.py:771] WARNING NaN detected! sparsities:  []
2025-06-10 06:59:52,441 [dl_trainer.py:773] INFO Average Sparsity: nan, compression ratio: nan, communication size: nan
2025-06-10 07:00:13,094 [dl_trainer.py:1016] INFO Epoch 3, lr: 0.004167, val loss: 3.701627, val acc: 0.135200
2025-06-10 07:00:25,526 [main_trainer.py:186] INFO Time per iteration is 0.649403. including communication: 0.096324. forward: 0.037341. backward: 0.272107. compression: 0.037673. io: 0.005192. HOOK: 0.007568. Speed: 24.638003 images/s, current density: 0.010000
2025-06-10 07:00:37,054 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:00:37,055 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000171,0.034096,0.087132,0.008165,0.000000,0.000000
2025-06-10 07:00:37,692 [main_trainer.py:186] INFO Time per iteration is 0.648888. including communication: 0.096202. forward: 0.037322. backward: 0.272131. compression: 0.037628. io: 0.005190. HOOK: 0.007339. Speed: 24.657555 images/s, current density: 0.010000
2025-06-10 07:00:49,852 [main_trainer.py:186] INFO Time per iteration is 0.648381. including communication: 0.096044. forward: 0.037306. backward: 0.272151. compression: 0.037592. io: 0.005191. HOOK: 0.008627. Speed: 24.676833 images/s, current density: 0.010000
2025-06-10 07:01:02,034 [main_trainer.py:186] INFO Time per iteration is 0.647901. including communication: 0.096022. forward: 0.037287. backward: 0.272199. compression: 0.037566. io: 0.005191. HOOK: 0.006968. Speed: 24.695126 images/s, current density: 0.010000
2025-06-10 07:01:07,488 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:01:07,488 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000337,0.034881,0.089385,0.010080,0.000000,0.000000
2025-06-10 07:01:14,248 [main_trainer.py:186] INFO Time per iteration is 0.647452. including communication: 0.095975. forward: 0.037272. backward: 0.272191. compression: 0.037518. io: 0.005192. HOOK: 0.007104. Speed: 24.712254 images/s, current density: 0.010000
2025-06-10 07:01:26,446 [main_trainer.py:186] INFO Time per iteration is 0.647004. including communication: 0.095854. forward: 0.037257. backward: 0.272243. compression: 0.037451. io: 0.005191. HOOK: 0.009414. Speed: 24.729369 images/s, current density: 0.010000
2025-06-10 07:01:38,036 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:01:38,036 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000402,0.036300,0.089796,0.008117,0.000000,0.000000
2025-06-10 07:01:38,685 [main_trainer.py:186] INFO Time per iteration is 0.646590. including communication: 0.095816. forward: 0.037251. backward: 0.272170. compression: 0.037508. io: 0.005191. HOOK: 0.008168. Speed: 24.745184 images/s, current density: 0.010000
2025-06-10 07:01:50,864 [main_trainer.py:186] INFO Time per iteration is 0.646151. including communication: 0.096109. forward: 0.037234. backward: 0.272126. compression: 0.037625. io: 0.005189. HOOK: 0.007972. Speed: 24.762007 images/s, current density: 0.010000
2025-06-10 07:02:03,033 [main_trainer.py:186] INFO Time per iteration is 0.645716. including communication: 0.096003. forward: 0.037215. backward: 0.272123. compression: 0.037687. io: 0.005189. HOOK: 0.007282. Speed: 24.778703 images/s, current density: 0.010000
2025-06-10 07:02:08,469 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:02:08,470 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003109,0.043313,0.105460,0.008051,0.000000,0.000000
2025-06-10 07:02:15,222 [main_trainer.py:186] INFO Time per iteration is 0.645303. including communication: 0.096207. forward: 0.037195. backward: 0.272168. compression: 0.037777. io: 0.005187. HOOK: 0.007505. Speed: 24.794559 images/s, current density: 0.010000
2025-06-10 07:02:27,397 [main_trainer.py:186] INFO Time per iteration is 0.644891. including communication: 0.096332. forward: 0.037169. backward: 0.272204. compression: 0.037827. io: 0.005186. HOOK: 0.007147. Speed: 24.810399 images/s, current density: 0.010000
2025-06-10 07:02:39,039 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:02:39,040 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000247,0.044551,0.104119,0.009961,0.000000,0.000000
2025-06-10 07:02:39,586 [main_trainer.py:186] INFO Time per iteration is 0.644496. including communication: 0.096305. forward: 0.037144. backward: 0.272245. compression: 0.037859. io: 0.005184. HOOK: 0.011858. Speed: 24.825608 images/s, current density: 0.010000
2025-06-10 07:02:51,776 [main_trainer.py:186] INFO Time per iteration is 0.644110. including communication: 0.096111. forward: 0.037125. backward: 0.272294. compression: 0.037800. io: 0.005184. HOOK: 0.007872. Speed: 24.840476 images/s, current density: 0.010000
2025-06-10 07:03:03,993 [main_trainer.py:186] INFO Time per iteration is 0.643748. including communication: 0.096214. forward: 0.037107. backward: 0.272180. compression: 0.037767. io: 0.005184. HOOK: 0.007164. Speed: 24.854456 images/s, current density: 0.010000
2025-06-10 07:03:09,444 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:03:09,444 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003151,0.033722,0.089833,0.008226,0.000000,0.000000
2025-06-10 07:03:16,174 [main_trainer.py:186] INFO Time per iteration is 0.643373. including communication: 0.096060. forward: 0.037087. backward: 0.272216. compression: 0.037737. io: 0.005183. HOOK: 0.007537. Speed: 24.868915 images/s, current density: 0.010000
2025-06-10 07:03:28,422 [main_trainer.py:186] INFO Time per iteration is 0.643041. including communication: 0.096118. forward: 0.037070. backward: 0.272188. compression: 0.037707. io: 0.005184. HOOK: 0.007313. Speed: 24.881753 images/s, current density: 0.010000
2025-06-10 07:03:39,970 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:03:39,970 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.012028,0.037630,0.092789,0.008285,0.000000,0.000000
2025-06-10 07:03:40,620 [main_trainer.py:186] INFO Time per iteration is 0.642692. including communication: 0.096054. forward: 0.037056. backward: 0.272182. compression: 0.037749. io: 0.005185. HOOK: 0.008413. Speed: 24.895287 images/s, current density: 0.010000
2025-06-10 07:03:52,819 [main_trainer.py:186] INFO Time per iteration is 0.642349. including communication: 0.096047. forward: 0.037045. backward: 0.272191. compression: 0.037732. io: 0.005185. HOOK: 0.007179. Speed: 24.908564 images/s, current density: 0.010000
2025-06-10 07:04:04,996 [main_trainer.py:186] INFO Time per iteration is 0.642003. including communication: 0.095896. forward: 0.037038. backward: 0.272151. compression: 0.037719. io: 0.005186. HOOK: 0.007742. Speed: 24.921997 images/s, current density: 0.010000
2025-06-10 07:04:10,429 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:04:10,429 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000266,0.036052,0.086322,0.010288,0.000000,0.000000
2025-06-10 07:04:17,191 [main_trainer.py:186] INFO Time per iteration is 0.641673. including communication: 0.095711. forward: 0.037031. backward: 0.272181. compression: 0.037694. io: 0.005185. HOOK: 0.008768. Speed: 24.934837 images/s, current density: 0.010000
2025-06-10 07:04:29,369 [main_trainer.py:186] INFO Time per iteration is 0.641340. including communication: 0.095745. forward: 0.037018. backward: 0.272175. compression: 0.037665. io: 0.005185. HOOK: 0.008200. Speed: 24.947754 images/s, current density: 0.010000
2025-06-10 07:04:40,944 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:04:40,944 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000358,0.039857,0.109584,0.008192,0.000000,0.000000
2025-06-10 07:04:41,579 [main_trainer.py:186] INFO Time per iteration is 0.641031. including communication: 0.096148. forward: 0.037003. backward: 0.272084. compression: 0.037765. io: 0.005184. HOOK: 0.007632. Speed: 24.959796 images/s, current density: 0.010000
2025-06-10 07:04:53,755 [main_trainer.py:186] INFO Time per iteration is 0.640711. including communication: 0.096222. forward: 0.036996. backward: 0.272087. compression: 0.037736. io: 0.005184. HOOK: 0.007183. Speed: 24.972272 images/s, current density: 0.010000
2025-06-10 07:05:05,925 [main_trainer.py:186] INFO Time per iteration is 0.640394. including communication: 0.096122. forward: 0.036991. backward: 0.272065. compression: 0.037787. io: 0.005185. HOOK: 0.007393. Speed: 24.984634 images/s, current density: 0.010000
2025-06-10 07:05:11,388 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:05:11,388 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000158,0.037979,0.094031,0.008193,0.000000,0.000000
2025-06-10 07:05:18,144 [main_trainer.py:186] INFO Time per iteration is 0.640107. including communication: 0.096010. forward: 0.036985. backward: 0.272062. compression: 0.037732. io: 0.005184. HOOK: 0.008013. Speed: 24.995828 images/s, current density: 0.010000
2025-06-10 07:05:29,639 [dl_trainer.py:917] INFO [  3][ 2080/  520][rank:0] loss: 2.723, average forward and backward time: 0.513193, iotime: 0.005179 
2025-06-10 07:05:29,640 [dl_trainer.py:923] INFO GPU memory usage memory_allocated: 2017 MBytes, max_memory_allocated: 3948 MBytes, memory_cached: 3998 MBytes, max_memory_cached: 4018 MBytes, CPU memory usage: 3227 MBytes
2025-06-10 07:05:29,796 [main_trainer.py:198] INFO Time per epoch including communication: 316.698075, 0.000000
2025-06-10 07:05:29,799 [dl_trainer.py:762] INFO train iter: 2080, num_batches_per_epoch: 520
2025-06-10 07:05:29,800 [dl_trainer.py:765] INFO Epoch 3, avg train acc: 14.326923, lr: 0.005000, avg loss: 3.617348
2025-06-10 07:05:29,800 [dl_trainer.py:771] WARNING NaN detected! sparsities:  []
2025-06-10 07:05:29,800 [dl_trainer.py:773] INFO Average Sparsity: nan, compression ratio: nan, communication size: nan
2025-06-10 07:05:50,747 [dl_trainer.py:1016] INFO Epoch 4, lr: 0.005000, val loss: 3.411054, val acc: 0.186200
2025-06-10 07:06:02,552 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:06:02,552 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003412,0.035703,0.096958,0.010141,0.000000,0.000000
2025-06-10 07:06:03,204 [main_trainer.py:186] INFO Time per iteration is 0.649366. including communication: 0.096114. forward: 0.036971. backward: 0.271982. compression: 0.037717. io: 0.005188. HOOK: 0.009258. Speed: 24.639434 images/s, current density: 0.010000
2025-06-10 07:06:15,387 [main_trainer.py:186] INFO Time per iteration is 0.648985. including communication: 0.096201. forward: 0.036964. backward: 0.271980. compression: 0.037684. io: 0.005188. HOOK: 0.007307. Speed: 24.653879 images/s, current density: 0.010000
2025-06-10 07:06:27,669 [main_trainer.py:186] INFO Time per iteration is 0.648658. including communication: 0.096463. forward: 0.036961. backward: 0.271924. compression: 0.037662. io: 0.005189. HOOK: 0.007592. Speed: 24.666325 images/s, current density: 0.010000
2025-06-10 07:06:33,128 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:06:33,128 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000166,0.035060,0.107389,0.008229,0.000000,0.000000
2025-06-10 07:06:39,841 [main_trainer.py:186] INFO Time per iteration is 0.648286. including communication: 0.096385. forward: 0.036954. backward: 0.271954. compression: 0.037657. io: 0.005188. HOOK: 0.007467. Speed: 24.680471 images/s, current density: 0.010000
2025-06-10 07:06:52,022 [main_trainer.py:186] INFO Time per iteration is 0.647925. including communication: 0.096413. forward: 0.036952. backward: 0.271955. compression: 0.037638. io: 0.005189. HOOK: 0.008028. Speed: 24.694234 images/s, current density: 0.010000
2025-06-10 07:07:03,538 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:07:03,539 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.008753,0.038713,0.093905,0.008242,0.000000,0.000000
2025-06-10 07:07:04,168 [main_trainer.py:186] INFO Time per iteration is 0.647555. including communication: 0.096322. forward: 0.036949. backward: 0.271959. compression: 0.037679. io: 0.005189. HOOK: 0.010261. Speed: 24.708344 images/s, current density: 0.010000
2025-06-10 07:07:16,375 [main_trainer.py:186] INFO Time per iteration is 0.647218. including communication: 0.096255. forward: 0.036941. backward: 0.271941. compression: 0.037674. io: 0.005189. HOOK: 0.007810. Speed: 24.721184 images/s, current density: 0.010000
2025-06-10 07:07:28,574 [main_trainer.py:186] INFO Time per iteration is 0.646884. including communication: 0.096209. forward: 0.036934. backward: 0.271940. compression: 0.037657. io: 0.005188. HOOK: 0.007274. Speed: 24.733945 images/s, current density: 0.010000
2025-06-10 07:07:34,010 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:07:34,010 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003261,0.039300,0.094451,0.008144,0.000000,0.000000
2025-06-10 07:07:40,779 [main_trainer.py:186] INFO Time per iteration is 0.646559. including communication: 0.096294. forward: 0.036925. backward: 0.271983. compression: 0.037697. io: 0.005187. HOOK: 0.007313. Speed: 24.746389 images/s, current density: 0.010000
2025-06-10 07:07:53,001 [main_trainer.py:186] INFO Time per iteration is 0.646246. including communication: 0.096355. forward: 0.036911. backward: 0.272011. compression: 0.037665. io: 0.005187. HOOK: 0.007600. Speed: 24.758360 images/s, current density: 0.010000
2025-06-10 07:08:04,640 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:08:04,640 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003338,0.034183,0.104442,0.009831,0.000000,0.000000
2025-06-10 07:08:05,302 [main_trainer.py:186] INFO Time per iteration is 0.645974. including communication: 0.096454. forward: 0.036899. backward: 0.271951. compression: 0.037638. io: 0.005186. HOOK: 0.006949. Speed: 24.768791 images/s, current density: 0.010000
2025-06-10 07:08:17,516 [main_trainer.py:186] INFO Time per iteration is 0.645668. including communication: 0.096375. forward: 0.036885. backward: 0.272002. compression: 0.037616. io: 0.005185. HOOK: 0.007554. Speed: 24.780533 images/s, current density: 0.010000
2025-06-10 07:08:29,729 [main_trainer.py:186] INFO Time per iteration is 0.645367. including communication: 0.096404. forward: 0.036871. backward: 0.271994. compression: 0.037617. io: 0.005184. HOOK: 0.010676. Speed: 24.792102 images/s, current density: 0.010000
2025-06-10 07:08:35,190 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:08:35,190 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000166,0.035618,0.089868,0.008179,0.000000,0.000000
2025-06-10 07:08:41,957 [main_trainer.py:186] INFO Time per iteration is 0.645078. including communication: 0.096226. forward: 0.036866. backward: 0.272003. compression: 0.037582. io: 0.005183. HOOK: 0.008401. Speed: 24.803212 images/s, current density: 0.010000
2025-06-10 07:08:54,175 [main_trainer.py:186] INFO Time per iteration is 0.644788. including communication: 0.096140. forward: 0.036864. backward: 0.271995. compression: 0.037544. io: 0.005183. HOOK: 0.008167. Speed: 24.814350 images/s, current density: 0.010000
2025-06-10 07:09:05,737 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:09:05,737 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000164,0.037288,0.089560,0.010284,0.000000,0.000000
2025-06-10 07:09:06,373 [main_trainer.py:186] INFO Time per iteration is 0.644496. including communication: 0.096176. forward: 0.036857. backward: 0.271969. compression: 0.037589. io: 0.005183. HOOK: 0.007509. Speed: 24.825612 images/s, current density: 0.010000
2025-06-10 07:09:18,563 [main_trainer.py:186] INFO Time per iteration is 0.644205. including communication: 0.096146. forward: 0.036852. backward: 0.271947. compression: 0.037575. io: 0.005183. HOOK: 0.008027. Speed: 24.836819 images/s, current density: 0.010000
2025-06-10 07:09:30,813 [main_trainer.py:186] INFO Time per iteration is 0.643942. including communication: 0.096187. forward: 0.036848. backward: 0.271873. compression: 0.037579. io: 0.005183. HOOK: 0.007344. Speed: 24.846946 images/s, current density: 0.010000
2025-06-10 07:09:36,286 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:09:36,287 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003156,0.037069,0.101957,0.008087,0.000000,0.000000
2025-06-10 07:09:43,052 [main_trainer.py:186] INFO Time per iteration is 0.643681. including communication: 0.096258. forward: 0.036844. backward: 0.271821. compression: 0.037564. io: 0.005184. HOOK: 0.007338. Speed: 24.857028 images/s, current density: 0.010000
2025-06-10 07:09:55,267 [main_trainer.py:186] INFO Time per iteration is 0.643414. including communication: 0.096259. forward: 0.036837. backward: 0.271816. compression: 0.037524. io: 0.005184. HOOK: 0.006838. Speed: 24.867332 images/s, current density: 0.010000
2025-06-10 07:10:06,833 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:10:06,834 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000166,0.032917,0.094851,0.008215,0.000000,0.000000
2025-06-10 07:10:07,486 [main_trainer.py:186] INFO Time per iteration is 0.643152. including communication: 0.096265. forward: 0.036832. backward: 0.271834. compression: 0.037487. io: 0.005185. HOOK: 0.007243. Speed: 24.877478 images/s, current density: 0.010000
2025-06-10 07:10:19,709 [main_trainer.py:186] INFO Time per iteration is 0.642897. including communication: 0.096250. forward: 0.036828. backward: 0.271827. compression: 0.037505. io: 0.005185. HOOK: 0.007269. Speed: 24.887354 images/s, current density: 0.010000
2025-06-10 07:10:31,901 [main_trainer.py:186] INFO Time per iteration is 0.642633. including communication: 0.096169. forward: 0.036827. backward: 0.271827. compression: 0.037492. io: 0.005186. HOOK: 0.008803. Speed: 24.897558 images/s, current density: 0.010000
2025-06-10 07:10:37,349 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:10:37,349 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000160,0.037234,0.090862,0.008219,0.000000,0.000000
2025-06-10 07:10:44,090 [main_trainer.py:186] INFO Time per iteration is 0.642373. including communication: 0.096176. forward: 0.036824. backward: 0.271838. compression: 0.037475. io: 0.005187. HOOK: 0.007304. Speed: 24.907644 images/s, current density: 0.010000
2025-06-10 07:10:56,265 [main_trainer.py:186] INFO Time per iteration is 0.642110. including communication: 0.096158. forward: 0.036823. backward: 0.271850. compression: 0.037456. io: 0.005188. HOOK: 0.008063. Speed: 24.917853 images/s, current density: 0.010000
2025-06-10 07:11:07,691 [dl_trainer.py:917] INFO [  4][ 2600/  520][rank:0] loss: 3.397, average forward and backward time: 0.513789, iotime: 0.005204 
2025-06-10 07:11:07,693 [dl_trainer.py:923] INFO GPU memory usage memory_allocated: 2017 MBytes, max_memory_allocated: 3948 MBytes, memory_cached: 3998 MBytes, max_memory_cached: 4018 MBytes, CPU memory usage: 3237 MBytes
2025-06-10 07:11:07,811 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:11:07,811 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.002959,0.034693,0.101841,0.010452,0.000000,0.000000
2025-06-10 07:11:07,842 [main_trainer.py:198] INFO Time per epoch including communication: 317.091133, 0.000000
2025-06-10 07:11:07,845 [dl_trainer.py:762] INFO train iter: 2600, num_batches_per_epoch: 520
2025-06-10 07:11:07,846 [dl_trainer.py:765] INFO Epoch 4, avg train acc: 18.064903, lr: 0.005833, avg loss: 3.410897
2025-06-10 07:11:07,846 [dl_trainer.py:771] WARNING NaN detected! sparsities:  []
2025-06-10 07:11:07,846 [dl_trainer.py:773] INFO Average Sparsity: nan, compression ratio: nan, communication size: nan
2025-06-10 07:11:28,639 [dl_trainer.py:1016] INFO Epoch 5, lr: 0.005833, val loss: 3.230428, val acc: 0.232600
2025-06-10 07:11:41,073 [main_trainer.py:186] INFO Time per iteration is 0.649405. including communication: 0.096360. forward: 0.036816. backward: 0.271835. compression: 0.037394. io: 0.005191. HOOK: 0.007174. Speed: 24.637951 images/s, current density: 0.010000
2025-06-10 07:11:53,249 [main_trainer.py:186] INFO Time per iteration is 0.649096. including communication: 0.096341. forward: 0.036807. backward: 0.271862. compression: 0.037388. io: 0.005191. HOOK: 0.008344. Speed: 24.649664 images/s, current density: 0.010000
2025-06-10 07:11:58,688 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:11:58,688 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000326,0.034609,0.100104,0.008163,0.000000,0.000000
2025-06-10 07:12:05,416 [main_trainer.py:186] INFO Time per iteration is 0.648789. including communication: 0.096522. forward: 0.036798. backward: 0.271876. compression: 0.037361. io: 0.005190. HOOK: 0.007616. Speed: 24.661347 images/s, current density: 0.010000
2025-06-10 07:12:17,584 [main_trainer.py:186] INFO Time per iteration is 0.648485. including communication: 0.096449. forward: 0.036791. backward: 0.271894. compression: 0.037341. io: 0.005190. HOOK: 0.007428. Speed: 24.672908 images/s, current density: 0.010000
2025-06-10 07:12:29,111 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:12:29,112 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000170,0.035573,0.095569,0.008213,0.000000,0.000000
2025-06-10 07:12:29,757 [main_trainer.py:186] INFO Time per iteration is 0.648188. including communication: 0.096328. forward: 0.036785. backward: 0.271910. compression: 0.037342. io: 0.005190. HOOK: 0.009543. Speed: 24.684178 images/s, current density: 0.010000
2025-06-10 07:12:41,911 [main_trainer.py:186] INFO Time per iteration is 0.647890. including communication: 0.096368. forward: 0.036777. backward: 0.271936. compression: 0.037380. io: 0.005190. HOOK: 0.007171. Speed: 24.695568 images/s, current density: 0.010000
2025-06-10 07:12:54,136 [main_trainer.py:186] INFO Time per iteration is 0.647621. including communication: 0.096502. forward: 0.036771. backward: 0.271884. compression: 0.037356. io: 0.005190. HOOK: 0.007371. Speed: 24.705810 images/s, current density: 0.010000
2025-06-10 07:12:59,567 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:12:59,567 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003082,0.037713,0.102756,0.010350,0.000000,0.000000
2025-06-10 07:13:06,271 [main_trainer.py:186] INFO Time per iteration is 0.647324. including communication: 0.096362. forward: 0.036764. backward: 0.271893. compression: 0.037329. io: 0.005190. HOOK: 0.008272. Speed: 24.717156 images/s, current density: 0.010000
2025-06-10 07:13:18,427 [main_trainer.py:186] INFO Time per iteration is 0.647038. including communication: 0.096282. forward: 0.036755. backward: 0.271896. compression: 0.037315. io: 0.005189. HOOK: 0.007317. Speed: 24.728063 images/s, current density: 0.010000
2025-06-10 07:13:29,947 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:13:29,947 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000164,0.035925,0.089858,0.008145,0.000000,0.000000
2025-06-10 07:13:30,582 [main_trainer.py:186] INFO Time per iteration is 0.646756. including communication: 0.096319. forward: 0.036748. backward: 0.271910. compression: 0.037318. io: 0.005188. HOOK: 0.007298. Speed: 24.738834 images/s, current density: 0.010000
2025-06-10 07:13:42,760 [main_trainer.py:186] INFO Time per iteration is 0.646487. including communication: 0.096195. forward: 0.036745. backward: 0.271902. compression: 0.037300. io: 0.005187. HOOK: 0.007578. Speed: 24.749156 images/s, current density: 0.010000
2025-06-10 07:13:54,945 [main_trainer.py:186] INFO Time per iteration is 0.646222. including communication: 0.096257. forward: 0.036743. backward: 0.271919. compression: 0.037333. io: 0.005188. HOOK: 0.007193. Speed: 24.759289 images/s, current density: 0.010000
2025-06-10 07:14:00,376 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:14:00,377 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000166,0.037802,0.095493,0.008221,0.000000,0.000000
2025-06-10 07:14:07,110 [main_trainer.py:186] INFO Time per iteration is 0.645956. including communication: 0.096411. forward: 0.036743. backward: 0.271932. compression: 0.037304. io: 0.005188. HOOK: 0.007679. Speed: 24.769508 images/s, current density: 0.010000
2025-06-10 07:14:19,298 [main_trainer.py:186] INFO Time per iteration is 0.645701. including communication: 0.096344. forward: 0.036739. backward: 0.271938. compression: 0.037300. io: 0.005188. HOOK: 0.007103. Speed: 24.779284 images/s, current density: 0.010000
2025-06-10 07:14:30,822 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:14:30,822 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003077,0.034011,0.097252,0.010325,0.000000,0.000000
2025-06-10 07:14:31,477 [main_trainer.py:186] INFO Time per iteration is 0.645446. including communication: 0.096329. forward: 0.036735. backward: 0.271948. compression: 0.037273. io: 0.005188. HOOK: 0.009631. Speed: 24.789068 images/s, current density: 0.010000
2025-06-10 07:14:43,757 [main_trainer.py:186] INFO Time per iteration is 0.645229. including communication: 0.096586. forward: 0.036731. backward: 0.271883. compression: 0.037333. io: 0.005188. HOOK: 0.008285. Speed: 24.797395 images/s, current density: 0.010000
2025-06-10 07:14:55,918 [main_trainer.py:186] INFO Time per iteration is 0.644975. including communication: 0.096566. forward: 0.036723. backward: 0.271915. compression: 0.037371. io: 0.005187. HOOK: 0.006957. Speed: 24.807158 images/s, current density: 0.010000
2025-06-10 07:15:01,365 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:15:01,365 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000157,0.042027,0.110167,0.008103,0.000000,0.000000
2025-06-10 07:15:08,102 [main_trainer.py:186] INFO Time per iteration is 0.644732. including communication: 0.096491. forward: 0.036714. backward: 0.271923. compression: 0.037349. io: 0.005186. HOOK: 0.010023. Speed: 24.816496 images/s, current density: 0.010000
2025-06-10 07:15:20,299 [main_trainer.py:186] INFO Time per iteration is 0.644497. including communication: 0.096531. forward: 0.036703. backward: 0.271938. compression: 0.037332. io: 0.005185. HOOK: 0.011719. Speed: 24.825563 images/s, current density: 0.010000
2025-06-10 07:15:31,811 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:15:31,812 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000170,0.034449,0.090161,0.008155,0.000000,0.000000
2025-06-10 07:15:32,460 [main_trainer.py:186] INFO Time per iteration is 0.644253. including communication: 0.096505. forward: 0.036693. backward: 0.271971. compression: 0.037305. io: 0.005185. HOOK: 0.007995. Speed: 24.834962 images/s, current density: 0.010000
2025-06-10 07:15:44,613 [main_trainer.py:186] INFO Time per iteration is 0.644009. including communication: 0.096538. forward: 0.036683. backward: 0.272007. compression: 0.037314. io: 0.005184. HOOK: 0.006950. Speed: 24.844359 images/s, current density: 0.010000
2025-06-10 07:15:56,864 [main_trainer.py:186] INFO Time per iteration is 0.643801. including communication: 0.096551. forward: 0.036676. backward: 0.271936. compression: 0.037302. io: 0.005184. HOOK: 0.007230. Speed: 24.852394 images/s, current density: 0.010000
2025-06-10 07:16:02,335 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:16:02,336 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003134,0.036956,0.098695,0.010013,0.000000,0.000000
2025-06-10 07:16:09,051 [main_trainer.py:186] INFO Time per iteration is 0.643575. including communication: 0.096434. forward: 0.036667. backward: 0.271948. compression: 0.037281. io: 0.005183. HOOK: 0.007551. Speed: 24.861132 images/s, current density: 0.010000
2025-06-10 07:16:21,275 [main_trainer.py:186] INFO Time per iteration is 0.643363. including communication: 0.096342. forward: 0.036659. backward: 0.271952. compression: 0.037264. io: 0.005182. HOOK: 0.007483. Speed: 24.869336 images/s, current density: 0.010000
2025-06-10 07:16:32,826 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:16:32,827 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003127,0.033931,0.083926,0.008116,0.000000,0.000000
2025-06-10 07:16:33,467 [main_trainer.py:186] INFO Time per iteration is 0.643144. including communication: 0.096339. forward: 0.036656. backward: 0.271956. compression: 0.037248. io: 0.005181. HOOK: 0.007774. Speed: 24.877806 images/s, current density: 0.010000
2025-06-10 07:16:44,928 [dl_trainer.py:917] INFO [  5][ 3120/  520][rank:0] loss: 2.047, average forward and backward time: 0.513462, iotime: 0.005142 
2025-06-10 07:16:44,930 [dl_trainer.py:923] INFO GPU memory usage memory_allocated: 2017 MBytes, max_memory_allocated: 3948 MBytes, memory_cached: 4020 MBytes, max_memory_cached: 4020 MBytes, CPU memory usage: 3246 MBytes
2025-06-10 07:16:45,087 [main_trainer.py:198] INFO Time per epoch including communication: 316.444420, 0.000000
2025-06-10 07:16:45,090 [dl_trainer.py:762] INFO train iter: 3120, num_batches_per_epoch: 520
2025-06-10 07:16:45,091 [dl_trainer.py:765] INFO Epoch 5, avg train acc: 21.430288, lr: 0.006667, avg loss: 3.213845
2025-06-10 07:16:45,091 [dl_trainer.py:771] WARNING NaN detected! sparsities:  []
2025-06-10 07:16:45,091 [dl_trainer.py:773] INFO Average Sparsity: nan, compression ratio: nan, communication size: nan
2025-06-10 07:17:05,790 [dl_trainer.py:1016] INFO Epoch 6, lr: 0.006667, val loss: 3.006691, val acc: 0.275000
2025-06-10 07:17:18,237 [main_trainer.py:186] INFO Time per iteration is 0.649204. including communication: 0.096349. forward: 0.036646. backward: 0.271936. compression: 0.037187. io: 0.005183. HOOK: 0.006944. Speed: 24.645566 images/s, current density: 0.010000
2025-06-10 07:17:23,669 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:17:23,670 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000238,0.033177,0.096258,0.008212,0.000000,0.000000
2025-06-10 07:17:30,429 [main_trainer.py:186] INFO Time per iteration is 0.648952. including communication: 0.096243. forward: 0.036639. backward: 0.271947. compression: 0.037180. io: 0.005182. HOOK: 0.009474. Speed: 24.655131 images/s, current density: 0.010000
2025-06-10 07:17:42,649 [main_trainer.py:186] INFO Time per iteration is 0.648712. including communication: 0.096167. forward: 0.036631. backward: 0.271971. compression: 0.037169. io: 0.005181. HOOK: 0.007271. Speed: 24.664243 images/s, current density: 0.010000
2025-06-10 07:17:54,226 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:17:54,226 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000168,0.036135,0.084694,0.010536,0.000000,0.000000
2025-06-10 07:17:54,874 [main_trainer.py:186] INFO Time per iteration is 0.648476. including communication: 0.096103. forward: 0.036626. backward: 0.271964. compression: 0.037161. io: 0.005181. HOOK: 0.007251. Speed: 24.673223 images/s, current density: 0.010000
2025-06-10 07:18:07,164 [main_trainer.py:186] INFO Time per iteration is 0.648263. including communication: 0.096195. forward: 0.036626. backward: 0.271905. compression: 0.037205. io: 0.005183. HOOK: 0.007185. Speed: 24.681326 images/s, current density: 0.010000
2025-06-10 07:18:19,327 [main_trainer.py:186] INFO Time per iteration is 0.648015. including communication: 0.096278. forward: 0.036622. backward: 0.271929. compression: 0.037192. io: 0.005183. HOOK: 0.007033. Speed: 24.690796 images/s, current density: 0.010000
2025-06-10 07:18:24,764 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:18:24,765 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.002939,0.038886,0.103573,0.008225,0.000000,0.000000
2025-06-10 07:18:31,514 [main_trainer.py:186] INFO Time per iteration is 0.647776. including communication: 0.096363. forward: 0.036620. backward: 0.271939. compression: 0.037235. io: 0.005183. HOOK: 0.007211. Speed: 24.699885 images/s, current density: 0.010000
2025-06-10 07:18:43,702 [main_trainer.py:186] INFO Time per iteration is 0.647541. including communication: 0.096326. forward: 0.036622. backward: 0.271957. compression: 0.037224. io: 0.005184. HOOK: 0.007518. Speed: 24.708860 images/s, current density: 0.010000
2025-06-10 07:18:55,242 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:18:55,242 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000160,0.037817,0.097366,0.010487,0.000000,0.000000
2025-06-10 07:18:55,895 [main_trainer.py:186] INFO Time per iteration is 0.647310. including communication: 0.096236. forward: 0.036624. backward: 0.271958. compression: 0.037199. io: 0.005185. HOOK: 0.007141. Speed: 24.717666 images/s, current density: 0.010000
2025-06-10 07:19:08,040 [main_trainer.py:186] INFO Time per iteration is 0.647068. including communication: 0.096203. forward: 0.036627. backward: 0.271987. compression: 0.037229. io: 0.005186. HOOK: 0.008190. Speed: 24.726939 images/s, current density: 0.010000
2025-06-10 07:19:20,312 [main_trainer.py:186] INFO Time per iteration is 0.646866. including communication: 0.096210. forward: 0.036630. backward: 0.271938. compression: 0.037266. io: 0.005187. HOOK: 0.007605. Speed: 24.734655 images/s, current density: 0.010000
2025-06-10 07:19:25,745 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:19:25,745 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000301,0.040961,0.090162,0.008163,0.000000,0.000000
2025-06-10 07:19:32,493 [main_trainer.py:186] INFO Time per iteration is 0.646638. including communication: 0.096173. forward: 0.036631. backward: 0.271964. compression: 0.037296. io: 0.005188. HOOK: 0.006965. Speed: 24.743349 images/s, current density: 0.010000
2025-06-10 07:19:44,682 [main_trainer.py:186] INFO Time per iteration is 0.646417. including communication: 0.096106. forward: 0.036631. backward: 0.271965. compression: 0.037279. io: 0.005188. HOOK: 0.007291. Speed: 24.751814 images/s, current density: 0.010000
2025-06-10 07:19:56,217 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:19:56,218 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003101,0.040897,0.091876,0.008080,0.000000,0.000000
2025-06-10 07:19:56,867 [main_trainer.py:186] INFO Time per iteration is 0.646197. including communication: 0.096082. forward: 0.036632. backward: 0.271993. compression: 0.037308. io: 0.005189. HOOK: 0.007428. Speed: 24.760242 images/s, current density: 0.010000
2025-06-10 07:20:09,064 [main_trainer.py:186] INFO Time per iteration is 0.645984. including communication: 0.096152. forward: 0.036631. backward: 0.272009. compression: 0.037339. io: 0.005190. HOOK: 0.007492. Speed: 24.768430 images/s, current density: 0.010000
2025-06-10 07:20:21,252 [main_trainer.py:186] INFO Time per iteration is 0.645770. including communication: 0.096145. forward: 0.036630. backward: 0.272022. compression: 0.037329. io: 0.005191. HOOK: 0.008223. Speed: 24.776633 images/s, current density: 0.010000
2025-06-10 07:20:26,699 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:20:26,700 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003137,0.038478,0.100761,0.008214,0.000000,0.000000
2025-06-10 07:20:33,430 [main_trainer.py:186] INFO Time per iteration is 0.645556. including communication: 0.096143. forward: 0.036627. backward: 0.272030. compression: 0.037358. io: 0.005191. HOOK: 0.007657. Speed: 24.784848 images/s, current density: 0.010000
2025-06-10 07:20:45,637 [main_trainer.py:186] INFO Time per iteration is 0.645352. including communication: 0.096080. forward: 0.036624. backward: 0.272036. compression: 0.037338. io: 0.005191. HOOK: 0.007236. Speed: 24.792668 images/s, current density: 0.010000
2025-06-10 07:20:57,256 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:20:57,256 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000162,0.036957,0.091814,0.010544,0.000000,0.000000
2025-06-10 07:20:57,910 [main_trainer.py:186] INFO Time per iteration is 0.645169. including communication: 0.096139. forward: 0.036619. backward: 0.271988. compression: 0.037318. io: 0.005191. HOOK: 0.007643. Speed: 24.799722 images/s, current density: 0.010000
2025-06-10 07:21:10,103 [main_trainer.py:186] INFO Time per iteration is 0.644965. including communication: 0.096160. forward: 0.036614. backward: 0.272004. compression: 0.037299. io: 0.005191. HOOK: 0.009085. Speed: 24.807531 images/s, current density: 0.010000
2025-06-10 07:21:22,342 [main_trainer.py:186] INFO Time per iteration is 0.644778. including communication: 0.096117. forward: 0.036609. backward: 0.272010. compression: 0.037284. io: 0.005191. HOOK: 0.006925. Speed: 24.814751 images/s, current density: 0.010000
2025-06-10 07:21:27,786 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:21:27,787 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003176,0.034063,0.095522,0.008276,0.000000,0.000000
2025-06-10 07:21:34,534 [main_trainer.py:186] INFO Time per iteration is 0.644579. including communication: 0.096040. forward: 0.036605. backward: 0.272001. compression: 0.037264. io: 0.005192. HOOK: 0.007156. Speed: 24.822409 images/s, current density: 0.010000
2025-06-10 07:21:46,710 [main_trainer.py:186] INFO Time per iteration is 0.644378. including communication: 0.096094. forward: 0.036599. backward: 0.272010. compression: 0.037289. io: 0.005191. HOOK: 0.008152. Speed: 24.830147 images/s, current density: 0.010000
2025-06-10 07:21:58,282 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:21:58,283 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003270,0.037078,0.089352,0.010592,0.000000,0.000000
2025-06-10 07:21:58,937 [main_trainer.py:186] INFO Time per iteration is 0.644193. including communication: 0.095987. forward: 0.036591. backward: 0.272006. compression: 0.037271. io: 0.005190. HOOK: 0.007157. Speed: 24.837270 images/s, current density: 0.010000
2025-06-10 07:22:11,110 [main_trainer.py:186] INFO Time per iteration is 0.643996. including communication: 0.096080. forward: 0.036583. backward: 0.272021. compression: 0.037258. io: 0.005189. HOOK: 0.008771. Speed: 24.844881 images/s, current density: 0.010000
2025-06-10 07:22:22,631 [dl_trainer.py:917] INFO [  6][ 3640/  520][rank:0] loss: 2.691, average forward and backward time: 0.512370, iotime: 0.005243 
2025-06-10 07:22:22,632 [dl_trainer.py:923] INFO GPU memory usage memory_allocated: 2017 MBytes, max_memory_allocated: 3948 MBytes, memory_cached: 4020 MBytes, max_memory_cached: 4020 MBytes, CPU memory usage: 3255 MBytes
2025-06-10 07:22:22,799 [main_trainer.py:198] INFO Time per epoch including communication: 317.004953, 0.000000
2025-06-10 07:22:22,803 [dl_trainer.py:762] INFO train iter: 3640, num_batches_per_epoch: 520
2025-06-10 07:22:22,803 [dl_trainer.py:765] INFO Epoch 6, avg train acc: 25.072115, lr: 0.007500, avg loss: 3.009581
2025-06-10 07:22:22,803 [dl_trainer.py:771] WARNING NaN detected! sparsities:  []
2025-06-10 07:22:22,803 [dl_trainer.py:773] INFO Average Sparsity: nan, compression ratio: nan, communication size: nan
2025-06-10 07:22:43,972 [dl_trainer.py:1016] INFO Epoch 7, lr: 0.007500, val loss: 2.795194, val acc: 0.304500
2025-06-10 07:22:49,654 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:22:49,654 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000374,0.035682,0.111089,0.008175,0.000000,0.000000
2025-06-10 07:22:56,372 [main_trainer.py:186] INFO Time per iteration is 0.649320. including communication: 0.096142. forward: 0.036580. backward: 0.271950. compression: 0.037243. io: 0.005192. HOOK: 0.007649. Speed: 24.641145 images/s, current density: 0.010000
2025-06-10 07:23:08,509 [main_trainer.py:186] INFO Time per iteration is 0.649087. including communication: 0.096170. forward: 0.036580. backward: 0.271958. compression: 0.037281. io: 0.005192. HOOK: 0.009624. Speed: 24.650003 images/s, current density: 0.010000
2025-06-10 07:23:20,017 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:23:20,017 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000165,0.041786,0.088664,0.008196,0.000000,0.000000
2025-06-10 07:23:20,677 [main_trainer.py:186] INFO Time per iteration is 0.648866. including communication: 0.096094. forward: 0.036583. backward: 0.271973. compression: 0.037312. io: 0.005193. HOOK: 0.007759. Speed: 24.658408 images/s, current density: 0.010000
2025-06-10 07:23:32,850 [main_trainer.py:186] INFO Time per iteration is 0.648649. including communication: 0.096185. forward: 0.036580. backward: 0.271989. compression: 0.037348. io: 0.005193. HOOK: 0.007324. Speed: 24.666665 images/s, current density: 0.010000
2025-06-10 07:23:45,042 [main_trainer.py:186] INFO Time per iteration is 0.648439. including communication: 0.096096. forward: 0.036579. backward: 0.271986. compression: 0.037345. io: 0.005193. HOOK: 0.008019. Speed: 24.674656 images/s, current density: 0.010000
2025-06-10 07:23:50,478 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:23:50,479 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000162,0.039127,0.096135,0.010738,0.000000,0.000000
2025-06-10 07:23:57,221 [main_trainer.py:186] INFO Time per iteration is 0.648227. including communication: 0.096122. forward: 0.036576. backward: 0.271993. compression: 0.037332. io: 0.005193. HOOK: 0.008506. Speed: 24.682705 images/s, current density: 0.010000
2025-06-10 07:24:09,398 [main_trainer.py:186] INFO Time per iteration is 0.648017. including communication: 0.096157. forward: 0.036574. backward: 0.272004. compression: 0.037326. io: 0.005192. HOOK: 0.007206. Speed: 24.690720 images/s, current density: 0.010000
2025-06-10 07:24:20,967 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:24:20,967 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000156,0.036798,0.114753,0.008201,0.000000,0.000000
2025-06-10 07:24:21,621 [main_trainer.py:186] INFO Time per iteration is 0.647822. including communication: 0.096339. forward: 0.036573. backward: 0.271968. compression: 0.037330. io: 0.005192. HOOK: 0.007122. Speed: 24.698154 images/s, current density: 0.010000
2025-06-10 07:24:33,779 [main_trainer.py:186] INFO Time per iteration is 0.647612. including communication: 0.096284. forward: 0.036573. backward: 0.271979. compression: 0.037312. io: 0.005193. HOOK: 0.009166. Speed: 24.706168 images/s, current density: 0.010000
2025-06-10 07:24:45,932 [main_trainer.py:186] INFO Time per iteration is 0.647402. including communication: 0.096273. forward: 0.036571. backward: 0.271991. compression: 0.037295. io: 0.005192. HOOK: 0.007822. Speed: 24.714160 images/s, current density: 0.010000
2025-06-10 07:24:51,362 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:24:51,363 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000163,0.037370,0.094211,0.008227,0.000000,0.000000
2025-06-10 07:24:58,107 [main_trainer.py:186] INFO Time per iteration is 0.647201. including communication: 0.096302. forward: 0.036568. backward: 0.271985. compression: 0.037324. io: 0.005192. HOOK: 0.007375. Speed: 24.721854 images/s, current density: 0.010000
2025-06-10 07:25:10,273 [main_trainer.py:186] INFO Time per iteration is 0.646999. including communication: 0.096198. forward: 0.036565. backward: 0.271988. compression: 0.037302. io: 0.005192. HOOK: 0.006834. Speed: 24.729555 images/s, current density: 0.010000
2025-06-10 07:25:21,774 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:25:21,774 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003151,0.033731,0.095164,0.008197,0.000000,0.000000
2025-06-10 07:25:22,428 [main_trainer.py:186] INFO Time per iteration is 0.646797. including communication: 0.096301. forward: 0.036560. backward: 0.272008. compression: 0.037283. io: 0.005192. HOOK: 0.007651. Speed: 24.737297 images/s, current density: 0.010000
2025-06-10 07:25:34,595 [main_trainer.py:186] INFO Time per iteration is 0.646599. including communication: 0.096222. forward: 0.036558. backward: 0.272018. compression: 0.037254. io: 0.005192. HOOK: 0.007081. Speed: 24.744843 images/s, current density: 0.010000
2025-06-10 07:25:46,879 [main_trainer.py:186] INFO Time per iteration is 0.646434. including communication: 0.096253. forward: 0.036557. backward: 0.271972. compression: 0.037247. io: 0.005192. HOOK: 0.006826. Speed: 24.751183 images/s, current density: 0.010000
2025-06-10 07:25:52,325 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:25:52,326 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003009,0.034302,0.089680,0.010918,0.000000,0.000000
2025-06-10 07:25:59,058 [main_trainer.py:186] INFO Time per iteration is 0.646243. including communication: 0.096214. forward: 0.036557. backward: 0.271961. compression: 0.037242. io: 0.005192. HOOK: 0.007498. Speed: 24.758481 images/s, current density: 0.010000
2025-06-10 07:26:11,242 [main_trainer.py:186] INFO Time per iteration is 0.646056. including communication: 0.096115. forward: 0.036557. backward: 0.271960. compression: 0.037230. io: 0.005193. HOOK: 0.007070. Speed: 24.765659 images/s, current density: 0.010000
2025-06-10 07:26:22,799 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:26:22,799 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000169,0.034903,0.083104,0.008236,0.000000,0.000000
2025-06-10 07:26:23,460 [main_trainer.py:186] INFO Time per iteration is 0.645879. including communication: 0.096050. forward: 0.036557. backward: 0.271966. compression: 0.037217. io: 0.005193. HOOK: 0.007397. Speed: 24.772443 images/s, current density: 0.010000
2025-06-10 07:26:35,628 [main_trainer.py:186] INFO Time per iteration is 0.645692. including communication: 0.096145. forward: 0.036556. backward: 0.271961. compression: 0.037212. io: 0.005193. HOOK: 0.007445. Speed: 24.779633 images/s, current density: 0.010000
2025-06-10 07:26:47,841 [main_trainer.py:186] INFO Time per iteration is 0.645517. including communication: 0.096110. forward: 0.036556. backward: 0.271963. compression: 0.037199. io: 0.005193. HOOK: 0.009538. Speed: 24.786340 images/s, current density: 0.010000
2025-06-10 07:26:53,302 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:26:53,302 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003128,0.035782,0.100882,0.010364,0.000000,0.000000
2025-06-10 07:27:00,055 [main_trainer.py:186] INFO Time per iteration is 0.645344. including communication: 0.096094. forward: 0.036556. backward: 0.271957. compression: 0.037227. io: 0.005193. HOOK: 0.007263. Speed: 24.792971 images/s, current density: 0.010000
2025-06-10 07:27:12,271 [main_trainer.py:186] INFO Time per iteration is 0.645174. including communication: 0.096152. forward: 0.036557. backward: 0.271953. compression: 0.037215. io: 0.005194. HOOK: 0.009522. Speed: 24.799520 images/s, current density: 0.010000
2025-06-10 07:27:23,898 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:27:23,898 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.006436,0.040355,0.109309,0.008241,0.000000,0.000000
2025-06-10 07:27:24,560 [main_trainer.py:186] INFO Time per iteration is 0.645021. including communication: 0.096269. forward: 0.036559. backward: 0.271891. compression: 0.037236. io: 0.005194. HOOK: 0.007845. Speed: 24.805375 images/s, current density: 0.010000
2025-06-10 07:27:36,759 [main_trainer.py:186] INFO Time per iteration is 0.644850. including communication: 0.096291. forward: 0.036558. backward: 0.271885. compression: 0.037220. io: 0.005195. HOOK: 0.007579. Speed: 24.811970 images/s, current density: 0.010000
2025-06-10 07:27:48,980 [main_trainer.py:186] INFO Time per iteration is 0.644685. including communication: 0.096315. forward: 0.036556. backward: 0.271900. compression: 0.037209. io: 0.005195. HOOK: 0.007145. Speed: 24.818305 images/s, current density: 0.010000
2025-06-10 07:27:54,404 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:27:54,405 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000205,0.034385,0.099452,0.008312,0.000000,0.000000
2025-06-10 07:28:00,357 [dl_trainer.py:917] INFO [  7][ 4160/  520][rank:0] loss: 3.067, average forward and backward time: 0.513966, iotime: 0.005236 
2025-06-10 07:28:00,358 [dl_trainer.py:923] INFO GPU memory usage memory_allocated: 2017 MBytes, max_memory_allocated: 3948 MBytes, memory_cached: 4020 MBytes, max_memory_cached: 4020 MBytes, CPU memory usage: 3267 MBytes
2025-06-10 07:28:00,527 [main_trainer.py:198] INFO Time per epoch including communication: 316.550937, 0.000000
2025-06-10 07:28:00,530 [dl_trainer.py:762] INFO train iter: 4160, num_batches_per_epoch: 520
2025-06-10 07:28:00,530 [dl_trainer.py:765] INFO Epoch 7, avg train acc: 27.944712, lr: 0.008333, avg loss: 2.877652
2025-06-10 07:28:00,531 [dl_trainer.py:771] WARNING NaN detected! sparsities:  []
2025-06-10 07:28:00,531 [dl_trainer.py:773] INFO Average Sparsity: nan, compression ratio: nan, communication size: nan
2025-06-10 07:28:21,035 [dl_trainer.py:1016] INFO Epoch 8, lr: 0.008333, val loss: 2.656662, val acc: 0.332900
2025-06-10 07:28:33,452 [main_trainer.py:186] INFO Time per iteration is 0.649152. including communication: 0.096279. forward: 0.036550. backward: 0.271879. compression: 0.037228. io: 0.005198. HOOK: 0.007357. Speed: 24.647548 images/s, current density: 0.010000
2025-06-10 07:28:44,972 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:28:44,972 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000162,0.038122,0.089630,0.010791,0.000000,0.000000
2025-06-10 07:28:45,613 [main_trainer.py:186] INFO Time per iteration is 0.648955. including communication: 0.096230. forward: 0.036547. backward: 0.271876. compression: 0.037214. io: 0.005198. HOOK: 0.008787. Speed: 24.655028 images/s, current density: 0.010000
2025-06-10 07:28:57,809 [main_trainer.py:186] INFO Time per iteration is 0.648767. including communication: 0.096189. forward: 0.036550. backward: 0.271874. compression: 0.037207. io: 0.005199. HOOK: 0.007378. Speed: 24.662168 images/s, current density: 0.010000
2025-06-10 07:29:10,052 [main_trainer.py:186] INFO Time per iteration is 0.648593. including communication: 0.096298. forward: 0.036552. backward: 0.271827. compression: 0.037196. io: 0.005199. HOOK: 0.008353. Speed: 24.668784 images/s, current density: 0.010000
2025-06-10 07:29:15,505 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:29:15,506 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003320,0.034955,0.098715,0.008148,0.000000,0.000000
2025-06-10 07:29:22,280 [main_trainer.py:186] INFO Time per iteration is 0.648416. including communication: 0.096262. forward: 0.036554. backward: 0.271812. compression: 0.037216. io: 0.005200. HOOK: 0.007029. Speed: 24.675520 images/s, current density: 0.010000
2025-06-10 07:29:34,466 [main_trainer.py:186] INFO Time per iteration is 0.648232. including communication: 0.096263. forward: 0.036555. backward: 0.271827. compression: 0.037214. io: 0.005200. HOOK: 0.007180. Speed: 24.682518 images/s, current density: 0.010000
2025-06-10 07:29:45,989 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:29:45,990 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.006079,0.039058,0.099680,0.008099,0.000000,0.000000
2025-06-10 07:29:46,647 [main_trainer.py:186] INFO Time per iteration is 0.648047. including communication: 0.096299. forward: 0.036558. backward: 0.271826. compression: 0.037209. io: 0.005200. HOOK: 0.009005. Speed: 24.689554 images/s, current density: 0.010000
2025-06-10 07:29:58,857 [main_trainer.py:186] INFO Time per iteration is 0.647872. including communication: 0.096286. forward: 0.036561. backward: 0.271840. compression: 0.037203. io: 0.005201. HOOK: 0.007792. Speed: 24.696220 images/s, current density: 0.010000
2025-06-10 07:30:11,060 [main_trainer.py:186] INFO Time per iteration is 0.647697. including communication: 0.096278. forward: 0.036561. backward: 0.271848. compression: 0.037188. io: 0.005201. HOOK: 0.007268. Speed: 24.702891 images/s, current density: 0.010000
2025-06-10 07:30:16,527 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:30:16,527 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.002939,0.038021,0.104109,0.008145,0.000000,0.000000
2025-06-10 07:30:23,274 [main_trainer.py:186] INFO Time per iteration is 0.647526. including communication: 0.096349. forward: 0.036558. backward: 0.271861. compression: 0.037208. io: 0.005201. HOOK: 0.006907. Speed: 24.709426 images/s, current density: 0.010000
2025-06-10 07:30:35,528 [main_trainer.py:186] INFO Time per iteration is 0.647366. including communication: 0.096311. forward: 0.036556. backward: 0.271866. compression: 0.037197. io: 0.005201. HOOK: 0.007733. Speed: 24.715540 images/s, current density: 0.010000
2025-06-10 07:30:47,093 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:30:47,094 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000376,0.034992,0.093996,0.010921,0.000000,0.000000
2025-06-10 07:30:47,826 [main_trainer.py:186] INFO Time per iteration is 0.647217. including communication: 0.096460. forward: 0.036553. backward: 0.271842. compression: 0.037209. io: 0.005201. HOOK: 0.007898. Speed: 24.721215 images/s, current density: 0.010000
2025-06-10 07:31:00,029 [main_trainer.py:186] INFO Time per iteration is 0.647048. including communication: 0.096470. forward: 0.036553. backward: 0.271838. compression: 0.037193. io: 0.005201. HOOK: 0.007450. Speed: 24.727670 images/s, current density: 0.010000
2025-06-10 07:31:12,236 [main_trainer.py:186] INFO Time per iteration is 0.646882. including communication: 0.096503. forward: 0.036549. backward: 0.271846. compression: 0.037184. io: 0.005201. HOOK: 0.006900. Speed: 24.734034 images/s, current density: 0.010000
2025-06-10 07:31:17,696 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:31:17,696 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.009035,0.036019,0.109449,0.008164,0.000000,0.000000
2025-06-10 07:31:24,459 [main_trainer.py:186] INFO Time per iteration is 0.646720. including communication: 0.096521. forward: 0.036544. backward: 0.271861. compression: 0.037171. io: 0.005201. HOOK: 0.007482. Speed: 24.740213 images/s, current density: 0.010000
2025-06-10 07:31:36,710 [main_trainer.py:186] INFO Time per iteration is 0.646567. including communication: 0.096557. forward: 0.036543. backward: 0.271862. compression: 0.037150. io: 0.005201. HOOK: 0.007413. Speed: 24.746092 images/s, current density: 0.010000
2025-06-10 07:31:48,261 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:31:48,262 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003514,0.032711,0.104533,0.010543,0.000000,0.000000
2025-06-10 07:31:48,916 [main_trainer.py:186] INFO Time per iteration is 0.646404. including communication: 0.096597. forward: 0.036540. backward: 0.271855. compression: 0.037132. io: 0.005201. HOOK: 0.007450. Speed: 24.752332 images/s, current density: 0.010000
2025-06-10 07:32:01,105 [main_trainer.py:186] INFO Time per iteration is 0.646239. including communication: 0.096541. forward: 0.036540. backward: 0.271855. compression: 0.037147. io: 0.005202. HOOK: 0.007060. Speed: 24.758638 images/s, current density: 0.010000
2025-06-10 07:32:13,377 [main_trainer.py:186] INFO Time per iteration is 0.646094. including communication: 0.096645. forward: 0.036539. backward: 0.271799. compression: 0.037151. io: 0.005201. HOOK: 0.007523. Speed: 24.764193 images/s, current density: 0.010000
2025-06-10 07:32:18,827 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:32:18,827 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003103,0.038880,0.099255,0.008092,0.000000,0.000000
2025-06-10 07:32:25,584 [main_trainer.py:186] INFO Time per iteration is 0.645936. including communication: 0.096588. forward: 0.036539. backward: 0.271784. compression: 0.037147. io: 0.005201. HOOK: 0.007238. Speed: 24.770250 images/s, current density: 0.010000
2025-06-10 07:32:37,754 [main_trainer.py:186] INFO Time per iteration is 0.645772. including communication: 0.096612. forward: 0.036538. backward: 0.271793. compression: 0.037162. io: 0.005201. HOOK: 0.007649. Speed: 24.776563 images/s, current density: 0.010000
2025-06-10 07:32:49,298 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:32:49,298 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.005927,0.039027,0.097207,0.008161,0.000000,0.000000
2025-06-10 07:32:49,954 [main_trainer.py:186] INFO Time per iteration is 0.645615. including communication: 0.096635. forward: 0.036538. backward: 0.271793. compression: 0.037169. io: 0.005201. HOOK: 0.008106. Speed: 24.782578 images/s, current density: 0.010000
2025-06-10 07:33:02,155 [main_trainer.py:186] INFO Time per iteration is 0.645460. including communication: 0.096740. forward: 0.036538. backward: 0.271800. compression: 0.037167. io: 0.005201. HOOK: 0.007844. Speed: 24.788535 images/s, current density: 0.010000
2025-06-10 07:40:13,610 [main_trainer.py:186] INFO Time per iteration is 0.645224. including communication: 0.096845. forward: 0.036541. backward: 0.271758. compression: 0.037224. io: 0.005203. HOOK: 0.009299. Speed: 24.797606 images/s, current density: 0.010000
2025-06-10 07:40:19,056 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:40:19,056 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.003493,0.041592,0.115947,0.008135,0.000000,0.000000
2025-06-10 07:40:25,800 [main_trainer.py:186] INFO Time per iteration is 0.645068. including communication: 0.096856. forward: 0.036540. backward: 0.271756. compression: 0.037213. io: 0.005203. HOOK: 0.007343. Speed: 24.803574 images/s, current density: 0.010000
2025-06-10 07:40:37,248 [dl_trainer.py:917] INFO [  8][ 4680/  520][rank:0] loss: 3.208, average forward and backward time: 0.511367, iotime: 0.005280 
2025-06-10 07:40:37,249 [dl_trainer.py:923] INFO GPU memory usage memory_allocated: 2017 MBytes, max_memory_allocated: 3948 MBytes, memory_cached: 3998 MBytes, max_memory_cached: 4020 MBytes, CPU memory usage: 3277 MBytes
2025-06-10 07:40:37,407 [main_trainer.py:198] INFO Time per epoch including communication: 736.368200, 0.000000
2025-06-10 07:40:37,410 [dl_trainer.py:762] INFO train iter: 4680, num_batches_per_epoch: 520
2025-06-10 07:40:37,411 [dl_trainer.py:765] INFO Epoch 8, avg train acc: 31.911058, lr: 0.009167, avg loss: 2.663018
2025-06-10 07:40:37,411 [dl_trainer.py:771] WARNING NaN detected! sparsities:  []
2025-06-10 07:40:37,411 [dl_trainer.py:773] INFO Average Sparsity: nan, compression ratio: nan, communication size: nan
2025-06-10 07:57:37,362 [main_trainer.py:331] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-10 07:57:37,362 [main_trainer.py:332] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-10 07:57:42,126 [dl_trainer.py:300] INFO target_sparsities: [1.0]
2025-06-10 07:57:42,127 [dl_trainer.py:312] INFO num_batches_per_epoch: 520
2025-06-10 07:57:42,127 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-10 07:57:43,212 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-10 07:57:43,288 [allreducer.py:285] INFO density: 0.010000
2025-06-10 07:57:43,289 [allreducer.py:286] INFO threshold scale: 1.092000
2025-06-10 07:57:43,291 [allreducer.py:713] INFO offsets: 
2025-06-10 07:57:43,291 [allreducer.py:348] INFO dynamic densities = [0.01]
2025-06-10 07:57:43,300 [allreducer.py:994] INFO Allreducer thread started ...
2025-06-10 07:57:43,300 [main_trainer.py:138] INFO Start training ....
2025-06-10 07:57:58,243 [main_trainer.py:186] INFO Time per iteration is 0.711543. including communication: 0.141293. forward: 0.129354. backward: 0.279122. compression: 0.045637. io: 0.005203. HOOK: 0.006530. Speed: 22.486358 images/s, current density: 0.010000
2025-06-10 07:58:10,592 [main_trainer.py:186] INFO Time per iteration is 0.665614. including communication: 0.125341. forward: 0.083849. backward: 0.272454. compression: 0.044948. io: 0.005090. HOOK: 0.008975. Speed: 24.037958 images/s, current density: 0.010000
2025-06-10 07:58:16,069 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:58:16,070 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000352,0.043079,0.123267,0.010455,0.000000,0.000000
2025-06-10 07:58:22,876 [main_trainer.py:186] INFO Time per iteration is 0.648742. including communication: 0.120620. forward: 0.068232. backward: 0.273056. compression: 0.044121. io: 0.005115. HOOK: 0.007659. Speed: 24.663122 images/s, current density: 0.010000
2025-06-10 07:58:35,147 [main_trainer.py:186] INFO Time per iteration is 0.640043. including communication: 0.112106. forward: 0.060322. backward: 0.273029. compression: 0.041421. io: 0.005055. HOOK: 0.007520. Speed: 24.998321 images/s, current density: 0.010000
2025-06-10 07:58:46,779 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:58:46,779 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.005964,0.037020,0.094043,0.007989,0.000000,0.000000
2025-06-10 07:58:47,425 [main_trainer.py:186] INFO Time per iteration is 0.634853. including communication: 0.108296. forward: 0.055526. backward: 0.272621. compression: 0.039990. io: 0.005036. HOOK: 0.007790. Speed: 25.202668 images/s, current density: 0.010000
2025-06-10 07:58:59,758 [main_trainer.py:186] INFO Time per iteration is 0.631840. including communication: 0.105174. forward: 0.052973. backward: 0.272825. compression: 0.038779. io: 0.005117. HOOK: 0.007207. Speed: 25.322869 images/s, current density: 0.010000
2025-06-10 07:59:12,097 [main_trainer.py:186] INFO Time per iteration is 0.629721. including communication: 0.100862. forward: 0.051242. backward: 0.272952. compression: 0.037917. io: 0.005185. HOOK: 0.008457. Speed: 25.408062 images/s, current density: 0.010000
2025-06-10 07:59:17,602 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:59:17,603 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000256,0.032770,0.083287,0.009431,0.000000,0.000000
2025-06-10 07:59:24,409 [main_trainer.py:186] INFO Time per iteration is 0.627958. including communication: 0.100856. forward: 0.049515. backward: 0.273575. compression: 0.037607. io: 0.005176. HOOK: 0.007473. Speed: 25.479400 images/s, current density: 0.010000
2025-06-10 07:59:36,745 [main_trainer.py:186] INFO Time per iteration is 0.626719. including communication: 0.099064. forward: 0.047977. backward: 0.273873. compression: 0.037262. io: 0.005127. HOOK: 0.007654. Speed: 25.529788 images/s, current density: 0.010000
2025-06-10 07:59:48,478 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 07:59:48,478 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000385,0.035910,0.098344,0.008040,0.000000,0.000000
2025-06-10 07:59:49,127 [main_trainer.py:186] INFO Time per iteration is 0.625960. including communication: 0.099600. forward: 0.046725. backward: 0.273631. compression: 0.037149. io: 0.005104. HOOK: 0.008677. Speed: 25.560745 images/s, current density: 0.010000
2025-06-10 08:00:01,442 [main_trainer.py:186] INFO Time per iteration is 0.625031. including communication: 0.097780. forward: 0.045664. backward: 0.273554. compression: 0.036869. io: 0.005078. HOOK: 0.007571. Speed: 25.598725 images/s, current density: 0.010000
2025-06-10 08:00:13,754 [main_trainer.py:186] INFO Time per iteration is 0.624242. including communication: 0.097466. forward: 0.044821. backward: 0.273895. compression: 0.036539. io: 0.005063. HOOK: 0.007194. Speed: 25.631104 images/s, current density: 0.010000
2025-06-10 08:00:19,286 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 08:00:19,286 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000169,0.033834,0.085491,0.008070,0.000000,0.000000
2025-06-10 08:00:26,132 [main_trainer.py:186] INFO Time per iteration is 0.623831. including communication: 0.096762. forward: 0.044120. backward: 0.274123. compression: 0.036473. io: 0.005041. HOOK: 0.007453. Speed: 25.647986 images/s, current density: 0.010000
2025-06-10 08:00:38,482 [main_trainer.py:186] INFO Time per iteration is 0.623377. including communication: 0.096535. forward: 0.043543. backward: 0.274051. compression: 0.036355. io: 0.005025. HOOK: 0.007151. Speed: 25.666644 images/s, current density: 0.010000
2025-06-10 08:00:50,176 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 08:00:50,176 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000166,0.038365,0.095144,0.008099,0.000000,0.000000
2025-06-10 08:00:50,817 [main_trainer.py:186] INFO Time per iteration is 0.622934. including communication: 0.096530. forward: 0.043055. backward: 0.274181. compression: 0.036813. io: 0.005030. HOOK: 0.008545. Speed: 25.684910 images/s, current density: 0.010000
2025-06-10 08:01:03,249 [main_trainer.py:186] INFO Time per iteration is 0.622845. including communication: 0.096469. forward: 0.042634. backward: 0.274233. compression: 0.037672. io: 0.005020. HOOK: 0.007601. Speed: 25.688582 images/s, current density: 0.010000
2025-06-10 08:01:15,557 [main_trainer.py:186] INFO Time per iteration is 0.622406. including communication: 0.097209. forward: 0.042209. backward: 0.273967. compression: 0.037970. io: 0.005009. HOOK: 0.007534. Speed: 25.706689 images/s, current density: 0.010000
2025-06-10 08:01:21,056 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 08:01:21,057 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000162,0.049860,0.103263,0.009511,0.000000,0.000000
2025-06-10 08:01:27,878 [main_trainer.py:186] INFO Time per iteration is 0.622051. including communication: 0.097404. forward: 0.041829. backward: 0.274156. compression: 0.039051. io: 0.005001. HOOK: 0.007638. Speed: 25.721361 images/s, current density: 0.010000
2025-06-10 08:01:40,223 [main_trainer.py:186] INFO Time per iteration is 0.621796. including communication: 0.097716. forward: 0.041572. backward: 0.274198. compression: 0.040086. io: 0.005017. HOOK: 0.007645. Speed: 25.731895 images/s, current density: 0.010000
2025-06-10 08:01:49,877 [main_trainer.py:331] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-10 08:01:49,878 [main_trainer.py:332] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-10 08:01:54,479 [dl_trainer.py:300] INFO target_sparsities: [1.0]
2025-06-10 08:01:54,480 [dl_trainer.py:312] INFO num_batches_per_epoch: 520
2025-06-10 08:01:54,480 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-10 08:01:55,599 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-10 08:01:55,661 [allreducer.py:285] INFO density: 0.010000
2025-06-10 08:01:55,661 [allreducer.py:286] INFO threshold scale: 1.092000
2025-06-10 08:01:55,663 [allreducer.py:713] INFO offsets: 
2025-06-10 08:01:55,664 [allreducer.py:348] INFO dynamic densities = [0.01]
2025-06-10 08:01:55,675 [allreducer.py:994] INFO Allreducer thread started ...
2025-06-10 08:01:55,675 [main_trainer.py:138] INFO Start training ....
2025-06-10 08:17:20,887 [main_trainer.py:331] INFO Configurations: Namespace(batch_size=16, nsteps_update=1, nworkers=6, nwpernode=1, compression=True, compressor='spardl', sigma_scale=2.5, density=0.01, dataset='cifar100', dnn='resnet152', data_dir='/home/mzq/cifar100', lr=0.01, max_epochs=121, pretrain=None)
2025-06-10 08:17:20,887 [main_trainer.py:332] INFO Interpreter: 3.9.16 (main, Mar  1 2023, 18:22:10) 
[GCC 11.2.0]
2025-06-10 08:17:25,648 [dl_trainer.py:300] INFO target_sparsities: [1.0]
2025-06-10 08:17:25,649 [dl_trainer.py:312] INFO num_batches_per_epoch: 520
2025-06-10 08:17:25,649 [main_trainer.py:89] INFO Broadcast parameters....
2025-06-10 08:17:26,763 [main_trainer.py:111] INFO Broadcast parameters finished....
2025-06-10 08:17:26,824 [allreducer.py:285] INFO density: 0.010000
2025-06-10 08:17:26,824 [allreducer.py:286] INFO threshold scale: 1.092000
2025-06-10 08:17:26,830 [allreducer.py:713] INFO offsets: 
2025-06-10 08:17:26,830 [allreducer.py:348] INFO dynamic densities = [0.01]
2025-06-10 08:17:26,862 [allreducer.py:994] INFO Allreducer thread started ...
2025-06-10 08:17:26,863 [main_trainer.py:138] INFO Start training ....
2025-06-10 08:17:41,831 [main_trainer.py:186] INFO Time per iteration is 0.712743. including communication: 0.093813. forward: 0.131427. backward: 0.278883. compression: 0.034651. io: 0.005307. HOOK: 0.006954. Speed: 22.448490 images/s, current density: 0.010000
2025-06-10 08:17:54,208 [main_trainer.py:186] INFO Time per iteration is 0.666902. including communication: 0.099669. forward: 0.085134. backward: 0.271690. compression: 0.039262. io: 0.005166. HOOK: 0.007241. Speed: 23.991518 images/s, current density: 0.010000
2025-06-10 08:17:59,687 [allreducer.py:805] INFO [rank:%d]name[size]: backward, merge, compression, allreduce, demerge, d2h, h2d
2025-06-10 08:17:59,688 [allreducer.py:860] INFO [rank:0]total[58341028]: 0.000000,0.000159,0.038776,0.101960,0.010670,0.000000,0.000000
2025-06-10 08:18:06,484 [main_trainer.py:186] INFO Time per iteration is 0.649483. including communication: 0.097859. forward: 0.069158. backward: 0.273259. compression: 0.037944. io: 0.005100. HOOK: 0.007899. Speed: 24.634975 images/s, current density: 0.010000
